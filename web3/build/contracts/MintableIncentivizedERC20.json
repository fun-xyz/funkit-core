{
  "contractName": "MintableIncentivizedERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "POOL",
      "outputs": [
        {
          "internalType": "contract IPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIncentivesController",
      "outputs": [
        {
          "internalType": "contract IAaveIncentivesController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAaveIncentivesController",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "setIncentivesController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIncentivesController\",\"outputs\":[{\"internalType\":\"contract IAaveIncentivesController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAaveIncentivesController\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setIncentivesController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"decimals\":\"The number of decimals of the token\",\"name\":\"The name of the token\",\"pool\":\"The reference to the main Pool contract\",\"symbol\":\"The symbol of the token\"}},\"decreaseAllowance(address,uint256)\":{\"params\":{\"spender\":\"The user allowed to spend on behalf of _msgSender()\",\"subtractedValue\":\"The amount being subtracted to the allowance\"},\"returns\":{\"_0\":\"`true`\"}},\"getIncentivesController()\":{\"returns\":{\"_0\":\"The address of the Incentives Controller\"}},\"increaseAllowance(address,uint256)\":{\"params\":{\"addedValue\":\"The amount being added to the allowance\",\"spender\":\"The user allowed to spend on behalf of _msgSender()\"},\"returns\":{\"_0\":\"`true`\"}},\"setIncentivesController(address)\":{\"params\":{\"controller\":\"the new Incentives controller\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"MintableIncentivizedERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decreaseAllowance(address,uint256)\":{\"notice\":\"Decreases the allowance of spender to spend _msgSender() tokens\"},\"getIncentivesController()\":{\"notice\":\"Returns the address of the Incentives Controller contract\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Increases the allowance of spender to spend _msgSender() tokens\"},\"setIncentivesController(address)\":{\"notice\":\"Sets a new Incentives Controller\"}},\"notice\":\"Implements mint and burn functions for IncentivizedERC20\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/tokenization/base/MintableIncentivizedERC20.sol\":\"MintableIncentivizedERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0x0d984665e4f3dd200c605a83b7caae057dd96136c038fcdd271fd85757dc3d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b72c586f82e3eedbb030ef92494582d7f0d80557c007cebf9a8ec98429d6ec\",\"dweb:/ipfs/QmV4Ltyjuj7B3RVNzjkJbhH3EihmWNb7oikxNj7xwWes4z\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x17894e217eb1056c22fbdaf8317a04f31b27e840455f075222d202acfcbf793d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4fdfa321f67c5dcbd563378d4e2be7c9652880ca6bbe1c5ebf7e5a5eede8db25\",\"dweb:/ipfs/QmQJAD6emY2M2BUTH2zBHTCb7vBPexqr8N6jSBuXZ5aC7d\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x04545d0c4e4e475ad961ac4f7d0a42939ddf0e5e00125b164a01f84f601866ec\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0bc4c70375ae6688c276227ea8bb3813bf397c294544de1b72e4b8926a284ad7\",\"dweb:/ipfs/QmfBMWnBAju8PAXEbfKcSRr5RkCG9X71f7iGbpHcJ3Su5c\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeCast.sol\":{\"keccak256\":\"0x27008eb94293cd55b7e79c167217f218a775a9962c3cd9672e07e77aa0de28f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bccff54145626f81e66480fce40e6bde8137d23f14ad71b1a231d2c4fb5f8948\",\"dweb:/ipfs/QmeXKGhccRJf52ZVsa3yYgvi5EitAjiYznPsUc6EWPaw7c\"]},\"@aave/core-v3/contracts/interfaces/IACLManager.sol\":{\"keccak256\":\"0xe39a407a074d8ac950deb7d1d855b39d53e35a5a441a7074c3d26cddef10406b\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e509aa66e54f44ce2d2e1b49639ed60a6b2decd17694f60052b02ad1c2c65f34\",\"dweb:/ipfs/QmZtjZk7KcfRJrqSsMA4BUjBzFBynp6fPZ8eDNKLKLaY1P\"]},\"@aave/core-v3/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0xfebb2258ed0f33f66ede2dc6f452adbfe9f1e0115c1ae856b65bf518ab142018\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://143f25f840782d776414a27dcf475b073ce29cad69994590f67a61cc797f070a\",\"dweb:/ipfs/QmUwmhnccrGuCJtJZUBHuHG5hoaf2FaKax1mkhZj3XhbAw\"]},\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x2dd5b423566dd95ff936d4386061eff5c7c718d5f0f00f319875e13925dd28f4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://45e6f9153bdfce319b4da02f0a3d05fc12eeb6b1dd3e33cac6e9b7e83068f32c\",\"dweb:/ipfs/QmNUkBv6nJEDE8zcMstgnrshR1nmDCqiURjn1UwJa3orM4\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0x47cc213daf0f98625ed45e5c42e58fcb1aa9bddf1461fc391e4bee7a39092263\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f1496405726c7d1e6d7ecb9bb9f8ade025388e27bb6ac08e9ed8490490a5045a\",\"dweb:/ipfs/QmXjtoqHQCob2foHhmaNm3EFTsrmU3MYxBGb9NCPxBqdkG\"]},\"@aave/core-v3/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xe5c6db4edc44768b334b6f9271e1ae21c81d6ab0692c2740cce0c56c4ac433dd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://962ff2d9e77b4c18baff01188bf4711c27a950d16c707ee411dae16f4d5a7bf1\",\"dweb:/ipfs/QmQ1pheqXpbHc21RLrLDZUh9gpMXXBcU1DWmZLUS9bkibA\"]},\"@aave/core-v3/contracts/protocol/tokenization/base/IncentivizedERC20.sol\":{\"keccak256\":\"0xac8ae825e4f6243c42cb8266caaec5617401e8920e5994ead6bbceb3dedb211e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c0e458ec8f952f5645ae91ecfd7b567ee940009824ca0776206a4520480275bd\",\"dweb:/ipfs/QmZG51JcvfKTJLjVAR19zZu641GLBzddjLoZgNKym2E9mz\"]},\"@aave/core-v3/contracts/protocol/tokenization/base/MintableIncentivizedERC20.sol\":{\"keccak256\":\"0x6c0a5c5fa7e772860c2ced4fa8f41b63013568e547ed06c5c7c78d08072f021c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8b2467d6122c515e5b777fa3fc5307f9c003ed9151301fd3af64e422255b3de9\",\"dweb:/ipfs/QmXEn3a4uAc8iNKcdpDRVEWLRYGuTqYsKuEe4pX17tSbmD\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.8.10;\n\nimport {IAaveIncentivesController} from '../../../interfaces/IAaveIncentivesController.sol';\nimport {IPool} from '../../../interfaces/IPool.sol';\nimport {IncentivizedERC20} from './IncentivizedERC20.sol';\n\n/**\n * @title MintableIncentivizedERC20\n * @author Aave\n * @notice Implements mint and burn functions for IncentivizedERC20\n */\nabstract contract MintableIncentivizedERC20 is IncentivizedERC20 {\n  /**\n   * @dev Constructor.\n   * @param pool The reference to the main Pool contract\n   * @param name The name of the token\n   * @param symbol The symbol of the token\n   * @param decimals The number of decimals of the token\n   */\n  constructor(\n    IPool pool,\n    string memory name,\n    string memory symbol,\n    uint8 decimals\n  ) IncentivizedERC20(pool, name, symbol, decimals) {\n    // Intentionally left blank\n  }\n\n  /**\n   * @notice Mints tokens to an account and apply incentives if defined\n   * @param account The address receiving tokens\n   * @param amount The amount of tokens to mint\n   */\n  function _mint(address account, uint128 amount) internal virtual {\n    uint256 oldTotalSupply = _totalSupply;\n    _totalSupply = oldTotalSupply + amount;\n\n    uint128 oldAccountBalance = _userState[account].balance;\n    _userState[account].balance = oldAccountBalance + amount;\n\n    IAaveIncentivesController incentivesControllerLocal = _incentivesController;\n    if (address(incentivesControllerLocal) != address(0)) {\n      incentivesControllerLocal.handleAction(account, oldTotalSupply, oldAccountBalance);\n    }\n  }\n\n  /**\n   * @notice Burns tokens from an account and apply incentives if defined\n   * @param account The account whose tokens are burnt\n   * @param amount The amount of tokens to burn\n   */\n  function _burn(address account, uint128 amount) internal virtual {\n    uint256 oldTotalSupply = _totalSupply;\n    _totalSupply = oldTotalSupply - amount;\n\n    uint128 oldAccountBalance = _userState[account].balance;\n    _userState[account].balance = oldAccountBalance - amount;\n\n    IAaveIncentivesController incentivesControllerLocal = _incentivesController;\n\n    if (address(incentivesControllerLocal) != address(0)) {\n      incentivesControllerLocal.handleAction(account, oldTotalSupply, oldAccountBalance);\n    }\n  }\n}\n",
  "sourcePath": "@aave/core-v3/contracts/protocol/tokenization/base/MintableIncentivizedERC20.sol",
  "ast": {
    "absolutePath": "@aave/core-v3/contracts/protocol/tokenization/base/MintableIncentivizedERC20.sol",
    "exportedSymbols": {
      "IAaveIncentivesController": [
        923
      ],
      "IPool": [
        1611
      ],
      "IncentivizedERC20": [
        3953
      ],
      "MintableIncentivizedERC20": [
        4103
      ]
    },
    "id": 4104,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3955,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:19"
      },
      {
        "absolutePath": "@aave/core-v3/contracts/interfaces/IAaveIncentivesController.sol",
        "file": "../../../interfaces/IAaveIncentivesController.sol",
        "id": 3957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4104,
        "sourceUnit": 924,
        "src": "62:92:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3956,
              "name": "IAaveIncentivesController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "70:25:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
        "file": "../../../interfaces/IPool.sol",
        "id": 3959,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4104,
        "sourceUnit": 1612,
        "src": "155:52:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3958,
              "name": "IPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "163:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aave/core-v3/contracts/protocol/tokenization/base/IncentivizedERC20.sol",
        "file": "./IncentivizedERC20.sol",
        "id": 3961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4104,
        "sourceUnit": 3954,
        "src": "208:58:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3960,
              "name": "IncentivizedERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "216:17:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3963,
              "name": "IncentivizedERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3953,
              "src": "443:17:19"
            },
            "id": 3964,
            "nodeType": "InheritanceSpecifier",
            "src": "443:17:19"
          }
        ],
        "canonicalName": "MintableIncentivizedERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3962,
          "nodeType": "StructuredDocumentation",
          "src": "268:127:19",
          "text": " @title MintableIncentivizedERC20\n @author Aave\n @notice Implements mint and burn functions for IncentivizedERC20"
        },
        "fullyImplemented": true,
        "id": 4103,
        "linearizedBaseContracts": [
          4103,
          3953,
          196,
          174,
          96
        ],
        "name": "MintableIncentivizedERC20",
        "nameLocation": "414:25:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3983,
              "nodeType": "Block",
              "src": "846:37:19",
              "statements": []
            },
            "documentation": {
              "id": 3965,
              "nodeType": "StructuredDocumentation",
              "src": "465:228:19",
              "text": " @dev Constructor.\n @param pool The reference to the main Pool contract\n @param name The name of the token\n @param symbol The symbol of the token\n @param decimals The number of decimals of the token"
            },
            "id": 3984,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3977,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3968,
                    "src": "816:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$1611",
                      "typeString": "contract IPool"
                    }
                  },
                  {
                    "id": 3978,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3970,
                    "src": "822:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3979,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3972,
                    "src": "828:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3980,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3974,
                    "src": "836:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3981,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3976,
                  "name": "IncentivizedERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3953,
                  "src": "798:17:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "798:47:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3968,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "719:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "713:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPool_$1611",
                    "typeString": "contract IPool"
                  },
                  "typeName": {
                    "id": 3967,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3966,
                      "name": "IPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1611,
                      "src": "713:5:19"
                    },
                    "referencedDeclaration": 1611,
                    "src": "713:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$1611",
                      "typeString": "contract IPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3970,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "743:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "729:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3969,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3972,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "767:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "753:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3971,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3974,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "785:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "779:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3973,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:90:19"
            },
            "returnParameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:0:19"
            },
            "scope": 4103,
            "src": "696:187:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4042,
              "nodeType": "Block",
              "src": "1133:454:19",
              "statements": [
                {
                  "assignments": [
                    3993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3993,
                      "mutability": "mutable",
                      "name": "oldTotalSupply",
                      "nameLocation": "1147:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 4042,
                      "src": "1139:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1139:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3995,
                  "initialValue": {
                    "id": 3994,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3518,
                    "src": "1164:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1139:37:19"
                },
                {
                  "expression": {
                    "id": 4000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3996,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "1182:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3997,
                        "name": "oldTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "1197:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3998,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3989,
                        "src": "1214:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "1197:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1182:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4001,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:38:19"
                },
                {
                  "assignments": [
                    4003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4003,
                      "mutability": "mutable",
                      "name": "oldAccountBalance",
                      "nameLocation": "1235:17:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 4042,
                      "src": "1227:25:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 4002,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1227:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4008,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 4004,
                        "name": "_userState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "1255:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$3505_storage_$",
                          "typeString": "mapping(address => struct IncentivizedERC20.UserState storage ref)"
                        }
                      },
                      "id": 4006,
                      "indexExpression": {
                        "id": 4005,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3987,
                        "src": "1266:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1255:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserState_$3505_storage",
                        "typeString": "struct IncentivizedERC20.UserState storage ref"
                      }
                    },
                    "id": 4007,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3502,
                    "src": "1255:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1227:55:19"
                },
                {
                  "expression": {
                    "id": 4016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4009,
                          "name": "_userState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3510,
                          "src": "1288:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$3505_storage_$",
                            "typeString": "mapping(address => struct IncentivizedERC20.UserState storage ref)"
                          }
                        },
                        "id": 4011,
                        "indexExpression": {
                          "id": 4010,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3987,
                          "src": "1299:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1288:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserState_$3505_storage",
                          "typeString": "struct IncentivizedERC20.UserState storage ref"
                        }
                      },
                      "id": 4012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3502,
                      "src": "1288:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 4015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4013,
                        "name": "oldAccountBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4003,
                        "src": "1318:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4014,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3989,
                        "src": "1338:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "1318:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1288:56:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 4017,
                  "nodeType": "ExpressionStatement",
                  "src": "1288:56:19"
                },
                {
                  "assignments": [
                    4020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4020,
                      "mutability": "mutable",
                      "name": "incentivesControllerLocal",
                      "nameLocation": "1377:25:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 4042,
                      "src": "1351:51:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                        "typeString": "contract IAaveIncentivesController"
                      },
                      "typeName": {
                        "id": 4019,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4018,
                          "name": "IAaveIncentivesController",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 923,
                          "src": "1351:25:19"
                        },
                        "referencedDeclaration": 923,
                        "src": "1351:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                          "typeString": "contract IAaveIncentivesController"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4022,
                  "initialValue": {
                    "id": 4021,
                    "name": "_incentivesController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3527,
                    "src": "1405:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                      "typeString": "contract IAaveIncentivesController"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1351:75:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 4025,
                          "name": "incentivesControllerLocal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4020,
                          "src": "1444:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                            "typeString": "contract IAaveIncentivesController"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                            "typeString": "contract IAaveIncentivesController"
                          }
                        ],
                        "id": 4024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1436:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4023,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1436:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1436:34:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1482:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1474:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1474:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1436:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4041,
                  "nodeType": "IfStatement",
                  "src": "1432:151:19",
                  "trueBody": {
                    "id": 4040,
                    "nodeType": "Block",
                    "src": "1486:97:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4035,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3987,
                              "src": "1533:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4036,
                              "name": "oldTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3993,
                              "src": "1542:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4037,
                              "name": "oldAccountBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4003,
                              "src": "1558:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "id": 4032,
                              "name": "incentivesControllerLocal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4020,
                              "src": "1494:25:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                                "typeString": "contract IAaveIncentivesController"
                              }
                            },
                            "id": 4034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "handleAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 922,
                            "src": "1494:38:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 4038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1494:82:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4039,
                        "nodeType": "ExpressionStatement",
                        "src": "1494:82:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3985,
              "nodeType": "StructuredDocumentation",
              "src": "887:178:19",
              "text": " @notice Mints tokens to an account and apply incentives if defined\n @param account The address receiving tokens\n @param amount The amount of tokens to mint"
            },
            "id": 4043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1077:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3987,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1091:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4043,
                  "src": "1083:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3989,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1108:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4043,
                  "src": "1100:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3988,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1082:33:19"
            },
            "returnParameters": {
              "id": 3991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:19"
            },
            "scope": 4103,
            "src": "1068:519:19",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4101,
              "nodeType": "Block",
              "src": "1845:455:19",
              "statements": [
                {
                  "assignments": [
                    4052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4052,
                      "mutability": "mutable",
                      "name": "oldTotalSupply",
                      "nameLocation": "1859:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 4101,
                      "src": "1851:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4051,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1851:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4054,
                  "initialValue": {
                    "id": 4053,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3518,
                    "src": "1876:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1851:37:19"
                },
                {
                  "expression": {
                    "id": 4059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4055,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "1894:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4056,
                        "name": "oldTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4052,
                        "src": "1909:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 4057,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4048,
                        "src": "1926:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "1909:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1894:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4060,
                  "nodeType": "ExpressionStatement",
                  "src": "1894:38:19"
                },
                {
                  "assignments": [
                    4062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4062,
                      "mutability": "mutable",
                      "name": "oldAccountBalance",
                      "nameLocation": "1947:17:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 4101,
                      "src": "1939:25:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 4061,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1939:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4067,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 4063,
                        "name": "_userState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "1967:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$3505_storage_$",
                          "typeString": "mapping(address => struct IncentivizedERC20.UserState storage ref)"
                        }
                      },
                      "id": 4065,
                      "indexExpression": {
                        "id": 4064,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "1978:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1967:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserState_$3505_storage",
                        "typeString": "struct IncentivizedERC20.UserState storage ref"
                      }
                    },
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3502,
                    "src": "1967:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1939:55:19"
                },
                {
                  "expression": {
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4068,
                          "name": "_userState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3510,
                          "src": "2000:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$3505_storage_$",
                            "typeString": "mapping(address => struct IncentivizedERC20.UserState storage ref)"
                          }
                        },
                        "id": 4070,
                        "indexExpression": {
                          "id": 4069,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4046,
                          "src": "2011:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2000:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserState_$3505_storage",
                          "typeString": "struct IncentivizedERC20.UserState storage ref"
                        }
                      },
                      "id": 4071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3502,
                      "src": "2000:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 4074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4072,
                        "name": "oldAccountBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4062,
                        "src": "2030:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 4073,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4048,
                        "src": "2050:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "2030:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2000:56:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 4076,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:56:19"
                },
                {
                  "assignments": [
                    4079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4079,
                      "mutability": "mutable",
                      "name": "incentivesControllerLocal",
                      "nameLocation": "2089:25:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 4101,
                      "src": "2063:51:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                        "typeString": "contract IAaveIncentivesController"
                      },
                      "typeName": {
                        "id": 4078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4077,
                          "name": "IAaveIncentivesController",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 923,
                          "src": "2063:25:19"
                        },
                        "referencedDeclaration": 923,
                        "src": "2063:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                          "typeString": "contract IAaveIncentivesController"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4081,
                  "initialValue": {
                    "id": 4080,
                    "name": "_incentivesController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3527,
                    "src": "2117:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                      "typeString": "contract IAaveIncentivesController"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2063:75:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 4084,
                          "name": "incentivesControllerLocal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4079,
                          "src": "2157:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                            "typeString": "contract IAaveIncentivesController"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                            "typeString": "contract IAaveIncentivesController"
                          }
                        ],
                        "id": 4083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2149:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2149:34:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2195:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2187:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2187:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2187:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2149:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4100,
                  "nodeType": "IfStatement",
                  "src": "2145:151:19",
                  "trueBody": {
                    "id": 4099,
                    "nodeType": "Block",
                    "src": "2199:97:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4094,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4046,
                              "src": "2246:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4095,
                              "name": "oldTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4052,
                              "src": "2255:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4096,
                              "name": "oldAccountBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4062,
                              "src": "2271:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "id": 4091,
                              "name": "incentivesControllerLocal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4079,
                              "src": "2207:25:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAaveIncentivesController_$923",
                                "typeString": "contract IAaveIncentivesController"
                              }
                            },
                            "id": 4093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "handleAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 922,
                            "src": "2207:38:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 4097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2207:82:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4098,
                        "nodeType": "ExpressionStatement",
                        "src": "2207:82:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4044,
              "nodeType": "StructuredDocumentation",
              "src": "1591:186:19",
              "text": " @notice Burns tokens from an account and apply incentives if defined\n @param account The account whose tokens are burnt\n @param amount The amount of tokens to burn"
            },
            "id": 4102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "1789:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4046,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1803:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4102,
                  "src": "1795:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4048,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1820:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4102,
                  "src": "1812:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4047,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1794:33:19"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1845:0:19"
            },
            "scope": 4103,
            "src": "1780:520:19",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4104,
        "src": "396:1906:19",
        "usedErrors": []
      }
    ],
    "src": "37:2266:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2023-01-14T08:14:22.663Z",
  "devdoc": {
    "author": "Aave",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "constructor": {
        "details": "Constructor.",
        "params": {
          "decimals": "The number of decimals of the token",
          "name": "The name of the token",
          "pool": "The reference to the main Pool contract",
          "symbol": "The symbol of the token"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "params": {
          "spender": "The user allowed to spend on behalf of _msgSender()",
          "subtractedValue": "The amount being subtracted to the allowance"
        },
        "returns": {
          "_0": "`true`"
        }
      },
      "getIncentivesController()": {
        "returns": {
          "_0": "The address of the Incentives Controller"
        }
      },
      "increaseAllowance(address,uint256)": {
        "params": {
          "addedValue": "The amount being added to the allowance",
          "spender": "The user allowed to spend on behalf of _msgSender()"
        },
        "returns": {
          "_0": "`true`"
        }
      },
      "setIncentivesController(address)": {
        "params": {
          "controller": "the new Incentives controller"
        }
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "title": "MintableIncentivizedERC20",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "decreaseAllowance(address,uint256)": {
        "notice": "Decreases the allowance of spender to spend _msgSender() tokens"
      },
      "getIncentivesController()": {
        "notice": "Returns the address of the Incentives Controller contract"
      },
      "increaseAllowance(address,uint256)": {
        "notice": "Increases the allowance of spender to spend _msgSender() tokens"
      },
      "setIncentivesController(address)": {
        "notice": "Sets a new Incentives Controller"
      }
    },
    "notice": "Implements mint and burn functions for IncentivizedERC20",
    "version": 1
  }
}