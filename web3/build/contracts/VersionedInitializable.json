{
  "contractName": "VersionedInitializable",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave, inspired by the OpenZeppelin Initializable contract\",\"details\":\"WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"},\"lastInitializedRevision\":{\"details\":\"Indicates that the contract has been initialized.\"}},\"title\":\"VersionedInitializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract to implement initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol\":\"VersionedInitializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol\":{\"keccak256\":\"0x76ae24e03ef6558eff491b2f9d87198dbdc8fcc52981f5a546319e0a16003a8c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://44dcd1b3d790ad993036139976f4b2a2ee318b2113b36cb17e31bfbdfb47f1ab\",\"dweb:/ipfs/Qmaftq4xdbqQHPzxNrbrRT79pULqFrGLLifB6YED7cFXxP\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.8.10;\n\n/**\n * @title VersionedInitializable\n * @author Aave, inspired by the OpenZeppelin Initializable contract\n * @notice Helper contract to implement initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * @dev WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\nabstract contract VersionedInitializable {\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  uint256 private lastInitializedRevision = 0;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    uint256 revision = getRevision();\n    require(\n      initializing || isConstructor() || revision > lastInitializedRevision,\n      'Contract instance has already been initialized'\n    );\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      lastInitializedRevision = revision;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /**\n   * @notice Returns the revision number of the contract\n   * @dev Needs to be defined in the inherited class as a constant.\n   * @return The revision number\n   */\n  function getRevision() internal pure virtual returns (uint256);\n\n  /**\n   * @notice Returns true if and only if the function is running in the constructor\n   * @return True if the function is running in the constructor\n   */\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    uint256 cs;\n    //solium-disable-next-line\n    assembly {\n      cs := extcodesize(address())\n    }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n",
  "sourcePath": "@aave/core-v3/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol",
  "ast": {
    "absolutePath": "@aave/core-v3/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol",
    "exportedSymbols": {
      "VersionedInitializable": [
        1963
      ]
    },
    "id": 1964,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1884,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:12"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "VersionedInitializable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1885,
          "nodeType": "StructuredDocumentation",
          "src": "62:706:12",
          "text": " @title VersionedInitializable\n @author Aave, inspired by the OpenZeppelin Initializable contract\n @notice Helper contract to implement initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n @dev WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors."
        },
        "fullyImplemented": false,
        "id": 1963,
        "linearizedBaseContracts": [
          1963
        ],
        "name": "VersionedInitializable",
        "nameLocation": "787:22:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1886,
              "nodeType": "StructuredDocumentation",
              "src": "814:69:12",
              "text": " @dev Indicates that the contract has been initialized."
            },
            "id": 1889,
            "mutability": "mutable",
            "name": "lastInitializedRevision",
            "nameLocation": "902:23:12",
            "nodeType": "VariableDeclaration",
            "scope": 1963,
            "src": "886:43:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1887,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "886:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1888,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "928:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1890,
              "nodeType": "StructuredDocumentation",
              "src": "934:87:12",
              "text": " @dev Indicates that the contract is in the process of being initialized."
            },
            "id": 1892,
            "mutability": "mutable",
            "name": "initializing",
            "nameLocation": "1037:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 1963,
            "src": "1024:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1891,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1024:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1936,
              "nodeType": "Block",
              "src": "1158:407:12",
              "statements": [
                {
                  "assignments": [
                    1896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1896,
                      "mutability": "mutable",
                      "name": "revision",
                      "nameLocation": "1172:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1936,
                      "src": "1164:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1164:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1899,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1897,
                      "name": "getRevision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1943,
                      "src": "1183:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 1898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1164:32:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1901,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1892,
                            "src": "1217:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1902,
                              "name": "isConstructor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1958,
                              "src": "1233:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1233:15:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1217:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1905,
                            "name": "revision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "1252:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1906,
                            "name": "lastInitializedRevision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "1263:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1252:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1217:69:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1294:48:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                          "typeString": "literal_string \"Contract instance has already been initialized\""
                        },
                        "value": "Contract instance has already been initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                          "typeString": "literal_string \"Contract instance has already been initialized\""
                        }
                      ],
                      "id": 1900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1202:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:146:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:146:12"
                },
                {
                  "assignments": [
                    1913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1913,
                      "mutability": "mutable",
                      "name": "isTopLevelCall",
                      "nameLocation": "1360:14:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1936,
                      "src": "1355:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1355:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1916,
                  "initialValue": {
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1377:13:12",
                    "subExpression": {
                      "id": 1914,
                      "name": "initializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1892,
                      "src": "1378:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1355:35:12"
                },
                {
                  "condition": {
                    "id": 1917,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1913,
                    "src": "1400:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1927,
                  "nodeType": "IfStatement",
                  "src": "1396:96:12",
                  "trueBody": {
                    "id": 1926,
                    "nodeType": "Block",
                    "src": "1416:76:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1918,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1892,
                            "src": "1424:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1439:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1424:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1921,
                        "nodeType": "ExpressionStatement",
                        "src": "1424:19:12"
                      },
                      {
                        "expression": {
                          "id": 1924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1922,
                            "name": "lastInitializedRevision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "1451:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1923,
                            "name": "revision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "1477:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1451:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1925,
                        "nodeType": "ExpressionStatement",
                        "src": "1451:34:12"
                      }
                    ]
                  }
                },
                {
                  "id": 1928,
                  "nodeType": "PlaceholderStatement",
                  "src": "1498:1:12"
                },
                {
                  "condition": {
                    "id": 1929,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1913,
                    "src": "1510:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1935,
                  "nodeType": "IfStatement",
                  "src": "1506:55:12",
                  "trueBody": {
                    "id": 1934,
                    "nodeType": "Block",
                    "src": "1526:35:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1930,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1892,
                            "src": "1534:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1549:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1534:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1933,
                        "nodeType": "ExpressionStatement",
                        "src": "1534:20:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1893,
              "nodeType": "StructuredDocumentation",
              "src": "1054:78:12",
              "text": " @dev Modifier to use in the initializer function of a contract."
            },
            "id": 1937,
            "name": "initializer",
            "nameLocation": "1144:11:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:12"
            },
            "src": "1135:430:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 1938,
              "nodeType": "StructuredDocumentation",
              "src": "1569:167:12",
              "text": " @notice Returns the revision number of the contract\n @dev Needs to be defined in the inherited class as a constant.\n @return The revision number"
            },
            "id": 1943,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRevision",
            "nameLocation": "1748:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:2:12"
            },
            "returnParameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "1793:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:9:12"
            },
            "scope": 1963,
            "src": "1739:63:12",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "2019:457:12",
              "statements": [
                {
                  "assignments": [
                    1950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1950,
                      "mutability": "mutable",
                      "name": "cs",
                      "nameLocation": "2362:2:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "2354:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2354:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1951,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2354:10:12"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2410:42:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2418:28:12",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "address",
                                "nodeType": "YulIdentifier",
                                "src": "2436:7:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2436:9:12"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "2424:11:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2424:22:12"
                        },
                        "variableNames": [
                          {
                            "name": "cs",
                            "nodeType": "YulIdentifier",
                            "src": "2418:2:12"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1950,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2418:2:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 1952,
                  "nodeType": "InlineAssembly",
                  "src": "2401:51:12"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1953,
                      "name": "cs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "2464:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2470:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2464:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1948,
                  "id": 1956,
                  "nodeType": "Return",
                  "src": "2457:14:12"
                }
              ]
            },
            "documentation": {
              "id": 1944,
              "nodeType": "StructuredDocumentation",
              "src": "1806:157:12",
              "text": " @notice Returns true if and only if the function is running in the constructor\n @return True if the function is running in the constructor"
            },
            "id": 1958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isConstructor",
            "nameLocation": "1975:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:2:12"
            },
            "returnParameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "2013:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2012:6:12"
            },
            "scope": 1963,
            "src": "1966:510:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1962,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "2571:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 1963,
            "src": "2551:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1959,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2551:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1961,
              "length": {
                "hexValue": "3530",
                "id": 1960,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2559:2:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2551:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 1964,
        "src": "769:1814:12",
        "usedErrors": []
      }
    ],
    "src": "37:2547:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-27T09:24:11.314Z",
  "devdoc": {
    "author": "Aave, inspired by the OpenZeppelin Initializable contract",
    "details": "WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "initializing": {
        "details": "Indicates that the contract is in the process of being initialized."
      },
      "lastInitializedRevision": {
        "details": "Indicates that the contract has been initialized."
      }
    },
    "title": "VersionedInitializable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Helper contract to implement initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier.",
    "version": 1
  }
}