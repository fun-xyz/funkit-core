{
  "contractName": "GPv2SafeERC20",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Gnosis Developers\",\"details\":\"Gas-efficient version of Openzeppelin's SafeERC20 contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Gnosis Protocol v2 Safe ERC20 Transfer Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":\"GPv2SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":{\"keccak256\":\"0x966a6af4203946a2edda45029697fe85fe1596ed65f5dfc6f5155822cefc30b0\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0107582f86501d746ef2702779fbc28d74d069fe02cc8de3ccbb0133a0f110f6\",\"dweb:/ipfs/QmU4RP9NFLf4HQafW9MnAJRYcBsDhHHGWMUJcVrrPk6uhq\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x17894e217eb1056c22fbdaf8317a04f31b27e840455f075222d202acfcbf793d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4fdfa321f67c5dcbd563378d4e2be7c9652880ca6bbe1c5ebf7e5a5eede8db25\",\"dweb:/ipfs/QmQJAD6emY2M2BUTH2zBHTCb7vBPexqr8N6jSBuXZ5aC7d\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204299674d98a8cf38bad4ba1a97e8894e481250808fc775d105893b4122751b3264736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204299674d98a8cf38bad4ba1a97e8894e481250808fc775d105893b4122751b3264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "293:4467:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "293:4467:0:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity 0.8.10;\n\nimport {IERC20} from '../../openzeppelin/contracts/IERC20.sol';\n\n/// @title Gnosis Protocol v2 Safe ERC20 Transfer Library\n/// @author Gnosis Developers\n/// @dev Gas-efficient version of Openzeppelin's SafeERC20 contract.\nlibrary GPv2SafeERC20 {\n  /// @dev Wrapper around a call to the ERC20 function `transfer` that reverts\n  /// also when the token returns `false`.\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    bytes4 selector_ = token.transfer.selector;\n\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      let freeMemoryPointer := mload(0x40)\n      mstore(freeMemoryPointer, selector_)\n      mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff))\n      mstore(add(freeMemoryPointer, 36), value)\n\n      if iszero(call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)) {\n        returndatacopy(0, 0, returndatasize())\n        revert(0, returndatasize())\n      }\n    }\n\n    require(getLastTransferResult(token), 'GPv2: failed transfer');\n  }\n\n  /// @dev Wrapper around a call to the ERC20 function `transferFrom` that\n  /// reverts also when the token returns `false`.\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    bytes4 selector_ = token.transferFrom.selector;\n\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      let freeMemoryPointer := mload(0x40)\n      mstore(freeMemoryPointer, selector_)\n      mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff))\n      mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff))\n      mstore(add(freeMemoryPointer, 68), value)\n\n      if iszero(call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)) {\n        returndatacopy(0, 0, returndatasize())\n        revert(0, returndatasize())\n      }\n    }\n\n    require(getLastTransferResult(token), 'GPv2: failed transferFrom');\n  }\n\n  /// @dev Verifies that the last return was a successful `transfer*` call.\n  /// This is done by checking that the return data is either empty, or\n  /// is a valid ABI encoded boolean.\n  function getLastTransferResult(IERC20 token) private view returns (bool success) {\n    // NOTE: Inspecting previous return data requires assembly. Note that\n    // we write the return data to memory 0 in the case where the return\n    // data size is 32, this is OK since the first 64 bytes of memory are\n    // reserved by Solidy as a scratch space that can be used within\n    // assembly blocks.\n    // <https://docs.soliditylang.org/en/v0.7.6/internals/layout_in_memory.html>\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      /// @dev Revert with an ABI encoded Solidity error with a message\n      /// that fits into 32-bytes.\n      ///\n      /// An ABI encoded Solidity error has the following memory layout:\n      ///\n      /// ------------+----------------------------------\n      ///  byte range | value\n      /// ------------+----------------------------------\n      ///  0x00..0x04 |        selector(\"Error(string)\")\n      ///  0x04..0x24 |      string offset (always 0x20)\n      ///  0x24..0x44 |                    string length\n      ///  0x44..0x64 | string value, padded to 32-bytes\n      function revertWithMessage(length, message) {\n        mstore(0x00, '\\x08\\xc3\\x79\\xa0')\n        mstore(0x04, 0x20)\n        mstore(0x24, length)\n        mstore(0x44, message)\n        revert(0x00, 0x64)\n      }\n\n      switch returndatasize()\n      // Non-standard ERC20 transfer without return.\n      case 0 {\n        // NOTE: When the return data size is 0, verify that there\n        // is code at the address. This is done in order to maintain\n        // compatibility with Solidity calling conventions.\n        // <https://docs.soliditylang.org/en/v0.7.6/control-structures.html#external-function-calls>\n        if iszero(extcodesize(token)) {\n          revertWithMessage(20, 'GPv2: not a contract')\n        }\n\n        success := 1\n      }\n      // Standard ERC20 transfer returning boolean success value.\n      case 32 {\n        returndatacopy(0, 0, returndatasize())\n\n        // NOTE: For ABI encoding v1, any non-zero value is accepted\n        // as `true` for a boolean. In order to stay compatible with\n        // OpenZeppelin's `SafeERC20` library which is known to work\n        // with the existing ERC20 implementation we care about,\n        // make sure we return success for any non-zero return value\n        // from the `transfer*` call.\n        success := iszero(iszero(mload(0)))\n      }\n      default {\n        revertWithMessage(31, 'GPv2: malformed transfer result')\n      }\n    }\n  }\n}\n",
  "sourcePath": "@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
  "ast": {
    "absolutePath": "@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
    "exportedSymbols": {
      "GPv2SafeERC20": [
        70
      ],
      "IERC20": [
        174
      ]
    },
    "id": 71,
    "license": "LGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:0"
      },
      {
        "absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
        "file": "../../openzeppelin/contracts/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 175,
        "src": "71:63:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "79:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GPv2SafeERC20",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "136:157:0",
          "text": "@title Gnosis Protocol v2 Safe ERC20 Transfer Library\n @author Gnosis Developers\n @dev Gas-efficient version of Openzeppelin's SafeERC20 contract."
        },
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70
        ],
        "name": "GPv2SafeERC20",
        "nameLocation": "301:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "529:585:0",
              "statements": [
                {
                  "assignments": [
                    16
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16,
                      "mutability": "mutable",
                      "name": "selector_",
                      "nameLocation": "542:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 29,
                      "src": "535:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "535:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 17,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "554:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "554:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "554:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "535:42:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "645:396:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "653:36:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "684:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "678:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "678:11:0"
                        },
                        "variables": [
                          {
                            "name": "freeMemoryPointer",
                            "nodeType": "YulTypedName",
                            "src": "657:17:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "freeMemoryPointer",
                              "nodeType": "YulIdentifier",
                              "src": "703:17:0"
                            },
                            {
                              "name": "selector_",
                              "nodeType": "YulIdentifier",
                              "src": "722:9:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:36:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:36:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "750:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "769:1:0",
                                  "type": "",
                                  "value": "4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "746:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "746:25:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "to",
                                  "nodeType": "YulIdentifier",
                                  "src": "777:2:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "781:42:0",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "773:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "773:51:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "739:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "739:86:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "739:86:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "843:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "862:2:0",
                                  "type": "",
                                  "value": "36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "839:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "839:26:0"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "867:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:41:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "832:41:0"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "943:92:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "968:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "971:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "974:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "974:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "953:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "953:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "953:38:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1007:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1010:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1010:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1000:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1000:27:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1000:27:0"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "896:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "896:5:0"
                                },
                                {
                                  "name": "token",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "910:1:0",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "913:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "932:2:0",
                                  "type": "",
                                  "value": "68"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "936:1:0",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "939:1:0",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "call",
                                "nodeType": "YulIdentifier",
                                "src": "891:4:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "891:50:0"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "884:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:58:0"
                        },
                        "nodeType": "YulIf",
                        "src": "881:154:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 16,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "722:9:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "777:2:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "903:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 12,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "867:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 21,
                  "nodeType": "InlineAssembly",
                  "src": "636:405:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1077:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$174",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$174",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 23,
                          "name": "getLastTransferResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1055:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$174_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1055:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "475076323a206661696c6564207472616e73666572",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bcd627324e1455f8429089871957d6f7804c9418ddab92671c4a49f81f3fae96",
                          "typeString": "literal_string \"GPv2: failed transfer\""
                        },
                        "value": "GPv2: failed transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bcd627324e1455f8429089871957d6f7804c9418ddab92671c4a49f81f3fae96",
                          "typeString": "literal_string \"GPv2: failed transfer\""
                        }
                      ],
                      "id": 22,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1047:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:62:0"
                }
              ]
            },
            "documentation": {
              "id": 5,
              "nodeType": "StructuredDocumentation",
              "src": "319:119:0",
              "text": "@dev Wrapper around a call to the ERC20 function `transfer` that reverts\n also when the token returns `false`."
            },
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "450:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "475:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "468:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$174",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 174,
                      "src": "468:6:0"
                    },
                    "referencedDeclaration": 174,
                    "src": "468:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$174",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "494:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "486:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "510:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "502:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "462:57:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:0"
            },
            "scope": 70,
            "src": "441:673:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "1354:690:0",
              "statements": [
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "selector_",
                      "nameLocation": "1367:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 57,
                      "src": "1360:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1360:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 45,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1379:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$174",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 155,
                      "src": "1379:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "1379:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1360:46:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1474:493:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1482:36:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1513:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1507:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1507:11:0"
                        },
                        "variables": [
                          {
                            "name": "freeMemoryPointer",
                            "nodeType": "YulTypedName",
                            "src": "1486:17:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "freeMemoryPointer",
                              "nodeType": "YulIdentifier",
                              "src": "1532:17:0"
                            },
                            {
                              "name": "selector_",
                              "nodeType": "YulIdentifier",
                              "src": "1551:9:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1525:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1525:36:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1525:36:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1579:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1598:1:0",
                                  "type": "",
                                  "value": "4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1575:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1575:25:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "from",
                                  "nodeType": "YulIdentifier",
                                  "src": "1606:4:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1612:42:0",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1602:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1602:53:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1568:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1568:88:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1568:88:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1674:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1693:2:0",
                                  "type": "",
                                  "value": "36"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1670:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1670:26:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "to",
                                  "nodeType": "YulIdentifier",
                                  "src": "1702:2:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1706:42:0",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1698:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1698:51:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1663:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1663:87:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1663:87:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1768:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1787:2:0",
                                  "type": "",
                                  "value": "68"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1764:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1764:26:0"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1792:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1757:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1757:41:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1757:41:0"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1869:92:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1894:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1897:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1900:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1900:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1879:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1879:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1879:38:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1933:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1936:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1936:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1926:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1926:27:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1926:27:0"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "1821:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1821:5:0"
                                },
                                {
                                  "name": "token",
                                  "nodeType": "YulIdentifier",
                                  "src": "1828:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1835:1:0",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1838:17:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1857:3:0",
                                  "type": "",
                                  "value": "100"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1862:1:0",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1865:1:0",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "call",
                                "nodeType": "YulIdentifier",
                                "src": "1816:4:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1816:51:0"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1809:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1809:59:0"
                        },
                        "nodeType": "YulIf",
                        "src": "1806:155:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 36,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1606:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 44,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1551:9:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 38,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1702:2:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 34,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1828:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 40,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1792:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 49,
                  "nodeType": "InlineAssembly",
                  "src": "1465:502:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2003:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$174",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$174",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 51,
                          "name": "getLastTransferResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1981:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$174_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1981:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "475076323a206661696c6564207472616e7366657246726f6d",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2011:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_910928af3c8209d55654c19deb64d9d16f87d0d58e9e40975f82488ba9b27d7e",
                          "typeString": "literal_string \"GPv2: failed transferFrom\""
                        },
                        "value": "GPv2: failed transferFrom"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_910928af3c8209d55654c19deb64d9d16f87d0d58e9e40975f82488ba9b27d7e",
                          "typeString": "literal_string \"GPv2: failed transferFrom\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1973:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:66:0"
                }
              ]
            },
            "documentation": {
              "id": 31,
              "nodeType": "StructuredDocumentation",
              "src": "1118:123:0",
              "text": "@dev Wrapper around a call to the ERC20 function `transferFrom` that\n reverts also when the token returns `false`."
            },
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1253:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1282:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1275:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$174",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 33,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 174,
                      "src": "1275:6:0"
                    },
                    "referencedDeclaration": 174,
                    "src": "1275:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$174",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1301:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1293:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1319:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1311:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1335:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1327:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:75:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1354:0:0"
            },
            "scope": 70,
            "src": "1244:800:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "2315:2443:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2777:1977:0",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3403:163:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3420:4:0",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "hexValue": "08c379a0",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3426:18:0",
                                    "type": ""
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3413:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3413:32:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3413:32:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3461:4:0",
                                    "type": "",
                                    "value": "0x04"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3467:4:0",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3454:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3454:18:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3454:18:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3488:4:0",
                                    "type": "",
                                    "value": "0x24"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3494:6:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3481:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3481:20:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3481:20:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3517:4:0",
                                    "type": "",
                                    "value": "0x44"
                                  },
                                  {
                                    "name": "message",
                                    "nodeType": "YulIdentifier",
                                    "src": "3523:7:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3510:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3510:21:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3510:21:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3547:4:0",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3553:4:0",
                                    "type": "",
                                    "value": "0x64"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3540:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3540:18:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3540:18:0"
                            }
                          ]
                        },
                        "name": "revertWithMessage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3386:6:0",
                            "type": ""
                          },
                          {
                            "name": "message",
                            "nodeType": "YulTypedName",
                            "src": "3394:7:0",
                            "type": ""
                          }
                        ],
                        "src": "3359:207:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3664:434:0",
                              "statements": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4001:67:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4031:2:0",
                                              "type": "",
                                              "value": "20"
                                            },
                                            {
                                              "hexValue": "475076323a206e6f74206120636f6e7472616374",
                                              "kind": "string",
                                              "nodeType": "YulLiteral",
                                              "src": "4035:22:0",
                                              "type": "",
                                              "value": "GPv2: not a contract"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revertWithMessage",
                                            "nodeType": "YulIdentifier",
                                            "src": "4013:17:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4013:45:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4013:45:0"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "token",
                                            "nodeType": "YulIdentifier",
                                            "src": "3993:5:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "extcodesize",
                                          "nodeType": "YulIdentifier",
                                          "src": "3981:11:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3981:18:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3974:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3974:26:0"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3971:97:0"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4078:12:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4089:1:0",
                                    "type": "",
                                    "value": "1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "success",
                                      "nodeType": "YulIdentifier",
                                      "src": "4078:7:0"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "3657:441:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3662:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4179:480:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4204:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4207:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "4210:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4210:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "returndatacopy",
                                      "nodeType": "YulIdentifier",
                                      "src": "4189:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4189:38:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4189:38:0"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4616:35:0",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4647:1:0",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "4641:5:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4641:8:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4634:6:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4634:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4627:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4627:24:0"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "success",
                                      "nodeType": "YulIdentifier",
                                      "src": "4616:7:0"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4171:488:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4176:2:0",
                              "type": "",
                              "value": "32"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4674:74:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4702:2:0",
                                        "type": "",
                                        "value": "31"
                                      },
                                      {
                                        "hexValue": "475076323a206d616c666f726d6564207472616e7366657220726573756c74",
                                        "kind": "string",
                                        "nodeType": "YulLiteral",
                                        "src": "4706:33:0",
                                        "type": "",
                                        "value": "GPv2: malformed transfer result"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revertWithMessage",
                                      "nodeType": "YulIdentifier",
                                      "src": "4684:17:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4684:56:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4684:56:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4666:82:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "3581:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3581:16:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "3574:1174:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 65,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4078:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 65,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4616:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 62,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3993:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 67,
                  "nodeType": "InlineAssembly",
                  "src": "2768:1986:0"
                }
              ]
            },
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "2048:183:0",
              "text": "@dev Verifies that the last return was a successful `transfer*` call.\n This is done by checking that the return data is either empty, or\n is a valid ABI encoded boolean."
            },
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastTransferResult",
            "nameLocation": "2243:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2272:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "2265:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$174",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 61,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 174,
                      "src": "2265:6:0"
                    },
                    "referencedDeclaration": 174,
                    "src": "2265:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$174",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2264:14:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2306:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "2301:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2300:14:0"
            },
            "scope": 70,
            "src": "2234:2524:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 71,
        "src": "293:4467:0",
        "usedErrors": []
      }
    ],
    "src": "46:4715:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-27T09:24:11.299Z",
  "devdoc": {
    "author": "Gnosis Developers",
    "details": "Gas-efficient version of Openzeppelin's SafeERC20 contract.",
    "kind": "dev",
    "methods": {},
    "title": "Gnosis Protocol v2 Safe ERC20 Transfer Library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}