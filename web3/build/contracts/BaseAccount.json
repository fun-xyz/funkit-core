{
  "contractName": "BaseAccount",
  "abi": [
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "aggregator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newEntryPoint",
          "type": "address"
        }
      ],
      "name": "updateEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEntryPoint\",\"type\":\"address\"}],\"name\":\"updateEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateEntryPoint(address)\":{\"params\":{\"newEntryPoint\":\"the new entrypoint to trust.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"nonce()\":{\"notice\":\"return the account nonce. subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)\"},\"updateEntryPoint(address)\":{\"notice\":\"expose an api to modify the entryPoint. must be called by current \\\"admin\\\" of the account.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,address,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/AA/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/AA/BaseAccount.sol\":{\"keccak256\":\"0x3160805c864fd50172c8d2f19cbdf94ba3ca3bd41b48d76dd3734079ee54669c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f3eff82819d88843cc896f056f37c96431bfe660a4a06c11cd82e67709a18d6f\",\"dweb:/ipfs/QmPm8WZ1u6xDtNj2QnHJhyhkfzVoZKvvLkN9vkW9eNk6j4\"]},\"project:/contracts/lib/interfaces/IAccount.sol\":{\"keccak256\":\"0x53d7eb9fd6a2479e3e68366fa36a38d09c744b16969e4640d6a230e2da1208a6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aba23b56da49142fc30d668d9737932f829f22f7f7899b27198146cee41c67c6\",\"dweb:/ipfs/QmTgu4e3kjQieigS9euHxruGNKXmuFUPoXKtQFFmvQNSeg\"]},\"project:/contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0x79641935e8d014077e5d5cd63c208203b27a8cbd158bed6b4440244362a63704\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1263b0f19585b57fbc2bdfc77079e30e1374620815af4194226e355da3c6066f\",\"dweb:/ipfs/Qmc3Q4imwwzJFfDgqdW7W8CjqPieXfToGjQhXrtKMKWRT9\"]},\"project:/contracts/lib/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xf0e396065e652c75f065ba8a3849bd5dad275511d3c4c0383bfcd752b155d91f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4a7392ffdae3e8a5fb3acac97130f1ed1909333e33ea5e25791e0a1177e1ea26\",\"dweb:/ipfs/QmZdPg86urB6qETPnGQAoKEiVZHVJJMismV1fKL1Yzn5gZ\"]},\"project:/contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x53c48273e58640d884309321a0690a2505ed2ea488cb802d9308c3711e7b34a4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://39392efdf88bc4bf199a12387b7817927f1c29aa26474b4258985a1527e05be5\",\"dweb:/ipfs/QmRvbJ2P9wgqFJggXufiVyJhYoXQ9wYiivNvvSJmS511Ws\"]},\"project:/contracts/lib/interfaces/UserOperation.sol\":{\"keccak256\":\"0xcf96efa5c7977c2ce3ff11542951a8d74e15dd99f02bcb1d57c5f9684632d9eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf59c90ab4d49c50b32035363f431061adb7e1b2558d641523c7cc6bb8701e5b\",\"dweb:/ipfs/QmQAvCR5fh16fHG1yp9uu9puUuAuqEngXSFErhFohwDF2B\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.10;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\n\n/**\n * Basic account implementation.\n * this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n * specific account implementation should inherit it and provide the account-specific logic\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for UserOperation;\n\n    /**\n     * return the account nonce.\n     * subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)\n     */\n    function nonce() public view virtual returns (uint256);\n\n    /**\n     * return the entryPoint used by this account.\n     * subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * Validate user's signature and nonce.\n     * subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, address aggregator, uint256 missingAccountFunds)\n    external override virtual returns (uint256 deadline) {\n        _requireFromEntryPoint();\n        deadline = _validateSignature(userOp, userOpHash, aggregator);\n        if (userOp.initCode.length == 0) {\n            _validateAndUpdateNonce(userOp);\n        }\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal virtual view {\n        require(msg.sender == address(entryPoint()), \"account: not from EntryPoint\");\n    }\n\n    /**\n     * validate the signature is valid for this message.\n     * @param userOp validate the userOp.signature field\n     * @param userOpHash convenient field: the hash of the request, to check the signature against\n     *          (also hashes the entrypoint and chain-id)\n     * @param aggregator the current aggregator. can be ignored by accounts that don't use aggregators\n     * @return deadline the last block timestamp this operation is valid, or zero if it is valid indefinitely.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash, address aggregator)\n    internal virtual returns (uint256 deadline);\n\n    /**\n     * validate the current nonce matches the UserOperation nonce.\n     * then it should update the account's state to prevent replay of this UserOperation.\n     * called only if initCode is empty (since \"nonce\" field is used as \"salt\" on account creation)\n     * @param userOp the op to validate.\n     */\n    function _validateAndUpdateNonce(UserOperation calldata userOp) internal virtual;\n\n    /**\n     * sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * subclass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again)\n     * @param missingAccountFunds the minimum value this method should send the entrypoint.\n     *  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success,) = payable(msg.sender).call{value : missingAccountFunds, gas : type(uint256).max}(\"\");\n            (success);\n            //ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n\n    /**\n     * expose an api to modify the entryPoint.\n     * must be called by current \"admin\" of the account.\n     * @param newEntryPoint the new entrypoint to trust.\n     */\n    function updateEntryPoint(address newEntryPoint) external {\n        _requireFromAdmin();\n        _updateEntryPoint(newEntryPoint);\n    }\n\n    /**\n     * ensure the caller is allowed \"admin\" operations (such as changing the entryPoint)\n     * default implementation trust the account itself (or any signer that passes \"validateUserOp\")\n     * to be the \"admin\"\n     */\n    function _requireFromAdmin() internal view virtual {\n        require(msg.sender == address(this) || msg.sender == address(entryPoint()), \"not admin\");\n    }\n\n    /**\n     * update the current entrypoint.\n     * subclass should override and update current entrypoint\n     */\n    function _updateEntryPoint(address) internal virtual;\n}\n",
  "sourcePath": "/Users/calebsirak/fun/web3sdk/web3/contracts/lib/AA/BaseAccount.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/AA/BaseAccount.sol",
    "exportedSymbols": {
      "BaseAccount": [
        6467
      ],
      "IAccount": [
        9416
      ],
      "IAggregator": [
        9489
      ],
      "IEntryPoint": [
        9669
      ],
      "IStakeManager": [
        9808
      ],
      "UserOperation": [
        9872
      ],
      "UserOperationLib": [
        9976
      ]
    },
    "id": 6468,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6286,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:24:28"
      },
      {
        "absolutePath": "project:/contracts/lib/interfaces/IAccount.sol",
        "file": "../interfaces/IAccount.sol",
        "id": 6287,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6468,
        "sourceUnit": 9417,
        "src": "184:36:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/interfaces/IEntryPoint.sol",
        "file": "../interfaces/IEntryPoint.sol",
        "id": 6288,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6468,
        "sourceUnit": 9670,
        "src": "221:39:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6290,
              "name": "IAccount",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9416,
              "src": "528:8:28"
            },
            "id": 6291,
            "nodeType": "InheritanceSpecifier",
            "src": "528:8:28"
          }
        ],
        "canonicalName": "BaseAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6289,
          "nodeType": "StructuredDocumentation",
          "src": "262:232:28",
          "text": " Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"
        },
        "fullyImplemented": false,
        "id": 6467,
        "linearizedBaseContracts": [
          6467,
          9416
        ],
        "name": "BaseAccount",
        "nameLocation": "513:11:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6295,
            "libraryName": {
              "id": 6292,
              "name": "UserOperationLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9976,
              "src": "549:16:28"
            },
            "nodeType": "UsingForDirective",
            "src": "543:41:28",
            "typeName": {
              "id": 6294,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6293,
                "name": "UserOperation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9872,
                "src": "570:13:28"
              },
              "referencedDeclaration": 9872,
              "src": "570:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$9872_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "documentation": {
              "id": 6296,
              "nodeType": "StructuredDocumentation",
              "src": "590:191:28",
              "text": " return the account nonce.\n subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)"
            },
            "functionSelector": "affed0e0",
            "id": 6301,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonce",
            "nameLocation": "795:5:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:2:28"
            },
            "returnParameters": {
              "id": 6300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6301,
                  "src": "832:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:9:28"
            },
            "scope": 6467,
            "src": "786:55:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 6302,
              "nodeType": "StructuredDocumentation",
              "src": "847:137:28",
              "text": " return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."
            },
            "functionSelector": "b0d691fe",
            "id": 6308,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "entryPoint",
            "nameLocation": "998:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:2:28"
            },
            "returnParameters": {
              "id": 6307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6308,
                  "src": "1040:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$9669",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 6305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6304,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9669,
                      "src": "1040:11:28"
                    },
                    "referencedDeclaration": 9669,
                    "src": "1040:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$9669",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:13:28"
            },
            "scope": 6467,
            "src": "989:64:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9415
            ],
            "body": {
              "id": 6350,
              "nodeType": "Block",
              "src": "1424:252:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6324,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6368,
                      "src": "1434:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 6325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1434:24:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6326,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:24:28"
                },
                {
                  "expression": {
                    "id": 6333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6327,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6322,
                      "src": "1468:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6329,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6312,
                          "src": "1498:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        {
                          "id": 6330,
                          "name": "userOpHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6314,
                          "src": "1506:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 6331,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6316,
                          "src": "1518:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6328,
                        "name": "_validateSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6381,
                        "src": "1479:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$9872_calldata_ptr_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (struct UserOperation calldata,bytes32,address) returns (uint256)"
                        }
                      },
                      "id": 6332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1479:50:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1468:61:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6334,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:61:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 6335,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6312,
                          "src": "1543:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 6336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initCode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9855,
                        "src": "1543:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 6337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1543:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1569:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1543:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6345,
                  "nodeType": "IfStatement",
                  "src": "1539:89:28",
                  "trueBody": {
                    "id": 6344,
                    "nodeType": "Block",
                    "src": "1572:56:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6341,
                              "name": "userOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6312,
                              "src": "1610:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                                "typeString": "struct UserOperation calldata"
                              }
                            ],
                            "id": 6340,
                            "name": "_validateAndUpdateNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6388,
                            "src": "1586:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$9872_calldata_ptr_$returns$__$",
                              "typeString": "function (struct UserOperation calldata)"
                            }
                          },
                          "id": 6342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1586:31:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6343,
                        "nodeType": "ExpressionStatement",
                        "src": "1586:31:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6347,
                        "name": "missingAccountFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6318,
                        "src": "1649:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6346,
                      "name": "_payPrefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6421,
                      "src": "1637:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6349,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:32:28"
                }
              ]
            },
            "documentation": {
              "id": 6309,
              "nodeType": "StructuredDocumentation",
              "src": "1059:179:28",
              "text": " Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
            },
            "functionSelector": "0825d1fc",
            "id": 6351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateUserOp",
            "nameLocation": "1252:14:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6320,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1380:8:28"
            },
            "parameters": {
              "id": 6319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6312,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1290:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6351,
                  "src": "1267:29:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 6311,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6310,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9872,
                      "src": "1267:13:28"
                    },
                    "referencedDeclaration": 9872,
                    "src": "1267:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$9872_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6314,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1306:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6351,
                  "src": "1298:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6313,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6316,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "1326:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6351,
                  "src": "1318:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6318,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "1346:19:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6351,
                  "src": "1338:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:100:28"
            },
            "returnParameters": {
              "id": 6323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6322,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1414:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6351,
                  "src": "1406:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:18:28"
            },
            "scope": 6467,
            "src": "1243:433:28",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6367,
              "nodeType": "Block",
              "src": "1813:93:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1831:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1831:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 6360,
                                "name": "entryPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6308,
                                "src": "1853:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$9669_$",
                                  "typeString": "function () view returns (contract IEntryPoint)"
                                }
                              },
                              "id": 6361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1853:12:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntryPoint_$9669",
                                "typeString": "contract IEntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEntryPoint_$9669",
                                "typeString": "contract IEntryPoint"
                              }
                            ],
                            "id": 6359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1845:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6358,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1845:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1845:21:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1831:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636f756e743a206e6f742066726f6d20456e747279506f696e74",
                        "id": 6364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1868:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        },
                        "value": "account: not from EntryPoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        }
                      ],
                      "id": 6355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1823:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:76:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6366,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:76:28"
                }
              ]
            },
            "documentation": {
              "id": 6352,
              "nodeType": "StructuredDocumentation",
              "src": "1682:70:28",
              "text": " ensure the request comes from the known entrypoint."
            },
            "id": 6368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "1766:22:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:2:28"
            },
            "returnParameters": {
              "id": 6354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1813:0:28"
            },
            "scope": 6467,
            "src": "1757:149:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 6369,
              "nodeType": "StructuredDocumentation",
              "src": "1912:593:28",
              "text": " validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain-id)\n @param aggregator the current aggregator. can be ignored by accounts that don't use aggregators\n @return deadline the last block timestamp this operation is valid, or zero if it is valid indefinitely.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
            },
            "id": 6381,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "2519:18:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6372,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "2561:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6381,
                  "src": "2538:29:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 6371,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6370,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9872,
                      "src": "2538:13:28"
                    },
                    "referencedDeclaration": 9872,
                    "src": "2538:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$9872_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6374,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "2577:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6381,
                  "src": "2569:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6373,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6376,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "2597:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6381,
                  "src": "2589:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:71:28"
            },
            "returnParameters": {
              "id": 6380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6379,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2647:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6381,
                  "src": "2639:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2638:18:28"
            },
            "scope": 6467,
            "src": "2510:147:28",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 6382,
              "nodeType": "StructuredDocumentation",
              "src": "2663:309:28",
              "text": " validate the current nonce matches the UserOperation nonce.\n then it should update the account's state to prevent replay of this UserOperation.\n called only if initCode is empty (since \"nonce\" field is used as \"salt\" on account creation)\n @param userOp the op to validate."
            },
            "id": 6388,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAndUpdateNonce",
            "nameLocation": "2986:23:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6385,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "3033:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6388,
                  "src": "3010:29:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$9872_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 6384,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6383,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9872,
                      "src": "3010:13:28"
                    },
                    "referencedDeclaration": 9872,
                    "src": "3010:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$9872_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3009:31:28"
            },
            "returnParameters": {
              "id": 6387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3057:0:28"
            },
            "scope": 6467,
            "src": "2977:81:28",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6420,
              "nodeType": "Block",
              "src": "3633:270:28",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6394,
                      "name": "missingAccountFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6391,
                      "src": "3647:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3670:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3647:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6419,
                  "nodeType": "IfStatement",
                  "src": "3643:254:28",
                  "trueBody": {
                    "id": 6418,
                    "nodeType": "Block",
                    "src": "3673:224:28",
                    "statements": [
                      {
                        "assignments": [
                          6398,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6398,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3693:7:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 6418,
                            "src": "3688:12:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 6397,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3688:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 6414,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 6412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3784:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 6401,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3713:3:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 6402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3713:10:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 6400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3705:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 6399,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3705:8:28",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3705:19:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 6404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3705:24:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 6411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value",
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 6405,
                                "name": "missingAccountFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6391,
                                "src": "3738:19:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 6408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3770:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 6407,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3770:7:28",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      }
                                    ],
                                    "id": 6406,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "3765:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 6409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3765:13:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint256",
                                    "typeString": "type(uint256)"
                                  }
                                },
                                "id": 6410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "3765:17:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3705:78:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 6413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3705:82:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3687:100:28"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 6415,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6398,
                              "src": "3802:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6416,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3801:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6417,
                        "nodeType": "ExpressionStatement",
                        "src": "3801:9:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6389,
              "nodeType": "StructuredDocumentation",
              "src": "3064:497:28",
              "text": " sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."
            },
            "id": 6421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payPrefund",
            "nameLocation": "3575:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6391,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "3595:19:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6421,
                  "src": "3587:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3586:29:28"
            },
            "returnParameters": {
              "id": 6393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3633:0:28"
            },
            "scope": 6467,
            "src": "3566:337:28",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6434,
              "nodeType": "Block",
              "src": "4144:78:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6427,
                      "name": "_requireFromAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6460,
                      "src": "4154:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 6428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:19:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6429,
                  "nodeType": "ExpressionStatement",
                  "src": "4154:19:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6431,
                        "name": "newEntryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6424,
                        "src": "4201:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6430,
                      "name": "_updateEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "4183:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4183:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6433,
                  "nodeType": "ExpressionStatement",
                  "src": "4183:32:28"
                }
              ]
            },
            "documentation": {
              "id": 6422,
              "nodeType": "StructuredDocumentation",
              "src": "3909:172:28",
              "text": " expose an api to modify the entryPoint.\n must be called by current \"admin\" of the account.\n @param newEntryPoint the new entrypoint to trust."
            },
            "functionSelector": "1b71bb6e",
            "id": 6435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateEntryPoint",
            "nameLocation": "4095:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6424,
                  "mutability": "mutable",
                  "name": "newEntryPoint",
                  "nameLocation": "4120:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 6435,
                  "src": "4112:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4111:23:28"
            },
            "returnParameters": {
              "id": 6426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4144:0:28"
            },
            "scope": 6467,
            "src": "4086:136:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6459,
              "nodeType": "Block",
              "src": "4509:105:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6440,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4527:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4527:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 6444,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "4549:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseAccount_$6467",
                                  "typeString": "contract BaseAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseAccount_$6467",
                                  "typeString": "contract BaseAccount"
                                }
                              ],
                              "id": 6443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4541:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6442,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4541:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4541:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4527:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6447,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4558:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4558:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 6451,
                                  "name": "entryPoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6308,
                                  "src": "4580:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$9669_$",
                                    "typeString": "function () view returns (contract IEntryPoint)"
                                  }
                                },
                                "id": 6452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4580:12:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IEntryPoint_$9669",
                                  "typeString": "contract IEntryPoint"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IEntryPoint_$9669",
                                  "typeString": "contract IEntryPoint"
                                }
                              ],
                              "id": 6450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4572:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6449,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4572:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4572:21:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4558:35:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4527:66:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742061646d696e",
                        "id": 6456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4595:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283",
                          "typeString": "literal_string \"not admin\""
                        },
                        "value": "not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283",
                          "typeString": "literal_string \"not admin\""
                        }
                      ],
                      "id": 6439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4519:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4519:88:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6458,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:88:28"
                }
              ]
            },
            "documentation": {
              "id": 6436,
              "nodeType": "StructuredDocumentation",
              "src": "4228:225:28",
              "text": " ensure the caller is allowed \"admin\" operations (such as changing the entryPoint)\n default implementation trust the account itself (or any signer that passes \"validateUserOp\")\n to be the \"admin\""
            },
            "id": 6460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromAdmin",
            "nameLocation": "4467:17:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4484:2:28"
            },
            "returnParameters": {
              "id": 6438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4509:0:28"
            },
            "scope": 6467,
            "src": "4458:156:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 6461,
              "nodeType": "StructuredDocumentation",
              "src": "4620:111:28",
              "text": " update the current entrypoint.\n subclass should override and update current entrypoint"
            },
            "id": 6466,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_updateEntryPoint",
            "nameLocation": "4745:17:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6466,
                  "src": "4763:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4762:9:28"
            },
            "returnParameters": {
              "id": 6465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4788:0:28"
            },
            "scope": 6467,
            "src": "4736:53:28",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6468,
        "src": "495:4296:28",
        "usedErrors": []
      }
    ],
    "src": "36:4756:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2023-01-14T08:14:22.684Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "updateEntryPoint(address)": {
        "params": {
          "newEntryPoint": "the new entrypoint to trust."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "entryPoint()": {
        "notice": "return the entryPoint used by this account. subclass should return the current entryPoint used by this account."
      },
      "nonce()": {
        "notice": "return the account nonce. subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)"
      },
      "updateEntryPoint(address)": {
        "notice": "expose an api to modify the entryPoint. must be called by current \"admin\" of the account."
      },
      "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,address,uint256)": {
        "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
      }
    },
    "notice": "Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic",
    "version": 1
  }
}