{"/Users/albertsu/Desktop/sdk/src/config/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/config/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":5,"7":2,"8":0,"9":0,"10":0,"11":1,"12":2,"13":2,"14":2,"15":1,"16":1,"17":1},"f":{"0":2,"1":5,"2":0,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[2,0],"3":[2,0],"4":[2,2],"5":[0,2],"6":[2,0],"7":[0,0],"8":[1,1,1],"9":[2,0],"10":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/config/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/config/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CAAwB;AACxB,0CAAuB","sourcesContent":["export * from \"./Config\"\nexport * from \"./types\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f431020b919d9a784f017e5678cbf55149c0ca47","contentHash":"9257bbb3ea7b5857b00e9c11a4f47f702663b4a3133654c65b97a3499ca9c927"},"/Users/albertsu/Desktop/sdk/src/config/Config.ts":{"path":"/Users/albertsu/Desktop/sdk/src/config/Config.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":61}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":43}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"8":{"start":{"line":13,"column":19},"end":{"line":13,"column":29}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"10":{"start":{"line":15,"column":28},"end":{"line":15,"column":50}},"11":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":72}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":120}},"14":{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":65}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":88}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":83}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":100}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":72}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":104}},"21":{"start":{"line":33,"column":0},"end":{"line":33,"column":52}}},"fnMap":{"0":{"name":"parseOptions","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":10,"column":1}},"line":7},"1":{"name":"configureEnvironment","decl":{"start":{"line":12,"column":15},"end":{"line":12,"column":35}},"loc":{"start":{"line":12,"column":44},"end":{"line":32,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},{"start":{"line":16,"column":4},"end":{"line":21,"column":5}}],"line":16},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":47}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},{"start":{"line":16,"column":25},"end":{"line":16,"column":47}}],"line":16},"2":{"loc":{"start":{"line":20,"column":32},"end":{"line":20,"column":119}},"type":"cond-expr","locations":[{"start":{"line":20,"column":47},"end":{"line":20,"column":95}},{"start":{"line":20,"column":98},"end":{"line":20,"column":119}}],"line":20},"3":{"loc":{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},{"start":{"line":22,"column":4},"end":{"line":27,"column":5}}],"line":22},"4":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":49}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":22}},{"start":{"line":22,"column":26},"end":{"line":22,"column":49}}],"line":22},"5":{"loc":{"start":{"line":26,"column":33},"end":{"line":26,"column":87}},"type":"cond-expr","locations":[{"start":{"line":26,"column":49},"end":{"line":26,"column":62}},{"start":{"line":26,"column":65},"end":{"line":26,"column":87}}],"line":26},"6":{"loc":{"start":{"line":29,"column":33},"end":{"line":29,"column":99}},"type":"cond-expr","locations":[{"start":{"line":29,"column":53},"end":{"line":29,"column":70}},{"start":{"line":29,"column":73},"end":{"line":29,"column":99}}],"line":29},"7":{"loc":{"start":{"line":30,"column":26},"end":{"line":30,"column":71}},"type":"cond-expr","locations":[{"start":{"line":30,"column":39},"end":{"line":30,"column":49}},{"start":{"line":30,"column":52},"end":{"line":30,"column":71}}],"line":30},"8":{"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":103}},"type":"cond-expr","locations":[{"start":{"line":31,"column":55},"end":{"line":31,"column":73}},{"start":{"line":31,"column":76},"end":{"line":31,"column":103}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":5,"9":5,"10":5,"11":5,"12":0,"13":5,"14":5,"15":0,"16":5,"17":5,"18":5,"19":5,"20":5,"21":1},"f":{"0":0,"1":5},"b":{"0":[0,5],"1":[5,0],"2":[5,0],"3":[0,5],"4":[5,0],"5":[5,0],"6":[0,5],"7":[0,5],"8":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/config/Config.ts","sources":["/Users/albertsu/Desktop/sdk/src/config/Config.ts"],"names":[],"mappings":";;;AACA,kCAAoC;AACpC,mDAAyD;AACzD,kCAA0C;AAE1C,SAAgB,YAAY,CAAC,MAAiB;IAC1C,MAAM,aAAa,GAAI,UAAkB,CAAC,eAAe,CAAA;IACzD,OAAO,EAAE,GAAG,aAAa,EAAE,GAAG,MAAM,EAAE,CAAA;AAC1C,CAAC;AAHD,oCAGC;AAEM,KAAK,UAAU,oBAAoB,CAAC,MAAuB;IAC9D,MAAM,MAAM,GAAG,UAAiB,CAAA;IAChC,MAAM,CAAC,eAAe,GAAG,EAAE,CAAA;IAC3B,MAAM,eAAe,GAAG,MAAM,CAAC,eAAkC,CAAA;IACjE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;QACzC,eAAe,CAAC,KAAK,GAAG,MAAM,IAAA,uBAAgB,EAAC,GAAG,CAAC,CAAA;KACtD;SAAM;QACH,eAAe,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,IAAA,uBAAgB,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAA;KACtG;IAED,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;QAC3C,eAAe,CAAC,MAAM,GAAG,+BAAmB,CAAA;KAC/C;SAAM;QACH,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAA;KAClF;IAED,eAAe,CAAC,OAAO,GAAG,MAAM,IAAA,iBAAU,EAAC,eAAe,CAAC,MAAO,CAAC,CAAA;IACnE,eAAe,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAA;IAC/F,eAAe,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,CAAA;IACnE,eAAe,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,WAAW,CAAA;AACvG,CAAC;AApBD,oDAoBC","sourcesContent":["import { EnvOption, GlobalEnvOption } from \"./types\"\nimport { getOrgInfo } from \"../apis\"\nimport { OPTION_TEST_API_KEY } from \"../common/constants\"\nimport { getChainFromData } from \"../data\"\n\nexport function parseOptions(option: EnvOption) {\n    const globalOptions = (globalThis as any).globalEnvOption\n    return { ...globalOptions, ...option }\n}\n\nexport async function configureEnvironment(option: GlobalEnvOption) {\n    const global = globalThis as any\n    global.globalEnvOption = {}\n    const globalEnvOption = global.globalEnvOption as GlobalEnvOption\n    if (!option.chain && !globalEnvOption.chain) {\n        globalEnvOption.chain = await getChainFromData(\"5\")\n    } else {\n        globalEnvOption.chain = option.chain ? await getChainFromData(option.chain) : globalEnvOption.chain\n    }\n\n    if (!option.apiKey && !globalEnvOption.apiKey) {\n        globalEnvOption.apiKey = OPTION_TEST_API_KEY\n    } else {\n        globalEnvOption.apiKey = option.apiKey ? option.apiKey : globalEnvOption.apiKey\n    }\n\n    globalEnvOption.orgInfo = await getOrgInfo(globalEnvOption.apiKey!)\n    globalEnvOption.gasSponsor = option.gasSponsor ? option.gasSponsor : globalEnvOption.gasSponsor\n    globalEnvOption.fee = option.fee ? option.fee : globalEnvOption.fee\n    globalEnvOption.sendTxLater = option.sendTxLater ? option.sendTxLater : globalEnvOption.sendTxLater\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e68450c0716f924e7eb8c66c5f47c14d7fae167","contentHash":"263c7e14b849eb0707a0f5f38a4d6214605e07130144dfe6bcb2c4861551c4de"},"/Users/albertsu/Desktop/sdk/src/apis/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":22,"2":22,"3":22,"4":22,"5":22,"6":26,"7":22,"8":0,"9":0,"10":0,"11":1,"12":7,"13":22,"14":22,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":22,"1":26,"2":0,"3":7},"b":{"0":[1,1,1],"1":[1,0],"2":[22,0],"3":[22,0],"4":[22,22],"5":[0,22],"6":[22,0],"7":[0,0],"8":[1,1,1],"9":[22,0],"10":[22,22]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,8CAA2B;AAC3B,6CAA0B;AAC1B,gDAA6B;AAC7B,kDAA+B;AAC/B,6CAA0B;AAC1B,8CAA2B;AAC3B,iDAA8B","sourcesContent":["export * from \"./AssetApis\"\nexport * from \"./AuthApis\"\nexport * from \"./BundlerApis\"\nexport * from \"./DashboardApis\"\nexport * from \"./InfoApis\"\nexport * from \"./StoreApis\"\nexport * from \"./ContractApis\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"570281cdd75c1abad12f0dd89249e1db677f34bf","contentHash":"08420234aa2e2686cd6272bc2830c5596c4b59d6a64d5716e0566fc1bec2ddac"},"/Users/albertsu/Desktop/sdk/src/apis/AssetApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/AssetApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":118}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":47}},"4":{"start":{"line":23,"column":4},"end":{"line":27,"column":7}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}},"6":{"start":{"line":44,"column":4},"end":{"line":47,"column":7}},"7":{"start":{"line":49,"column":0},"end":{"line":49,"column":26}},"8":{"start":{"line":63,"column":4},"end":{"line":65,"column":7}},"9":{"start":{"line":67,"column":0},"end":{"line":67,"column":32}},"10":{"start":{"line":86,"column":4},"end":{"line":89,"column":7}},"11":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}},"12":{"start":{"line":109,"column":4},"end":{"line":112,"column":7}},"13":{"start":{"line":114,"column":0},"end":{"line":114,"column":48}}},"fnMap":{"0":{"name":"getTokens","decl":{"start":{"line":22,"column":15},"end":{"line":22,"column":24}},"loc":{"start":{"line":22,"column":66},"end":{"line":28,"column":1}},"line":22},"1":{"name":"getNFTs","decl":{"start":{"line":43,"column":15},"end":{"line":43,"column":22}},"loc":{"start":{"line":43,"column":44},"end":{"line":48,"column":1}},"line":43},"2":{"name":"getAllNFTs","decl":{"start":{"line":62,"column":15},"end":{"line":62,"column":25}},"loc":{"start":{"line":62,"column":38},"end":{"line":66,"column":1}},"line":62},"3":{"name":"getAllTokens","decl":{"start":{"line":85,"column":15},"end":{"line":85,"column":27}},"loc":{"start":{"line":85,"column":60},"end":{"line":90,"column":1}},"line":85},"4":{"name":"getLidoWithdrawals","decl":{"start":{"line":108,"column":15},"end":{"line":108,"column":33}},"loc":{"start":{"line":108,"column":55},"end":{"line":113,"column":1}},"line":108}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":0,"7":1,"8":4,"9":1,"10":4,"11":1,"12":1,"13":1},"f":{"0":2,"1":0,"2":4,"3":4,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/AssetApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/AssetApis.ts"],"names":[],"mappings":";;;AAAA,mDAA6C;AAC7C,gDAAmD;AAEnD;;;;;;;;;;;;;;;GAeG;AACI,KAAK,UAAU,SAAS,CAAC,OAAe,EAAE,UAAkB,EAAE,kBAA2B;IAC5F,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,sBAAsB,EAAE;QAC1D,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,UAAU;QACnB,kBAAkB,EAAE,kBAAkB;KACzC,CAAC,CAAA;AACN,CAAC;AAND,8BAMC;AAED;;;;;;;;;;;;GAYG;AACI,KAAK,UAAU,OAAO,CAAC,OAAe,EAAE,UAAkB;IAC7D,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,oBAAoB,EAAE;QACxD,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,UAAU;KACtB,CAAC,CAAA;AACN,CAAC;AALD,0BAKC;AAED;;;;;;;;;;;GAWG;AACI,KAAK,UAAU,UAAU,CAAC,UAAkB;IAC/C,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,wBAAwB,EAAE;QAC5D,OAAO,EAAE,UAAU;KACtB,CAAC,CAAA;AACN,CAAC;AAJD,gCAIC;AAED;;;;;;;;;;;;;;;;GAgBG;AACI,KAAK,UAAU,YAAY,CAAC,UAAkB,EAAE,kBAA2B;IAC9E,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,0BAA0B,EAAE;QAC9D,OAAO,EAAE,UAAU;QACnB,kBAAkB,EAAE,kBAAkB;KACzC,CAAC,CAAA;AACN,CAAC;AALD,oCAKC;AAED;;;;;;;;;;;;;;;GAeG;AACI,KAAK,UAAU,kBAAkB,CAAC,OAAe,EAAE,UAAkB;IACxE,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,gCAAgC,EAAE;QACpE,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,UAAU;KACtB,CAAC,CAAA;AACN,CAAC;AALD,gDAKC","sourcesContent":["import { API_URL } from \"../common/constants\"\nimport { sendPostRequest } from \"../utils/ApiUtils\"\n\n/**\n * Get all tokens for a specific chain\n * @param {string} chainId https://chainlist.org/\n * @param {string} holderAddr\n * @param {string} onlyVerifiedTokens If true, only return alchemy tokens that are verified(filters spam)\n * @returns JSON\n * {\n *    \"0xTokenAddress\": {\n *        \"tokenBalance\": \"0x00001\",\n *        \"symbol\": \"USDC\",\n *        \"decimals\": 6,\n *        \"logo\": \"https://static.alchemyapi.io/images/assets/3408.png\",\n *        \"price\": 1.0001,\n *     }\n * }\n */\nexport async function getTokens(chainId: string, holderAddr: string, onlyVerifiedTokens: boolean): Promise<any> {\n    return await sendPostRequest(API_URL, \"getAssets/get-tokens\", {\n        chain: chainId,\n        address: holderAddr,\n        onlyVerifiedTokens: onlyVerifiedTokens\n    })\n}\n\n/**\n * Calls the fun api server to get all the NFTs owned by the holder\n * @param {string} chainId From https://chainlist.org/\n * @param {string} holderAddr Address of holder\n * @returns array\n *  [\n *     {\n *       \"address\": \"string\",\n *       \"token_id\": \"string\",\n *       \"floor_price\": \"string\",\n *     }\n *  ]\n */\nexport async function getNFTs(chainId: string, holderAddr: string): Promise<any> {\n    return await sendPostRequest(API_URL, \"getAssets/get-nfts\", {\n        chain: chainId,\n        address: holderAddr\n    })\n}\n\n/**\n * Calls the fun api server to get all the NFTs owned by the holder\n * @param {string} holderAddr Address of holder\n * @returns array\n *  {\n *     \"1\" : [{\n *       \"address\": \"string\",\n *       \"token_id\": \"string\",\n *       \"floor_price\": \"string\",\n *     }],\n *  }\n */\nexport async function getAllNFTs(holderAddr: string): Promise<any> {\n    return await sendPostRequest(API_URL, \"getAssets/get-all-nfts\", {\n        address: holderAddr\n    })\n}\n\n/**\n * Get all tokens for a specific chain\n * @param {string} holderAddr\n * @param {string} onlyVerifiedTokens If true, only return alchemy tokens that are verified(filters spam)\n * @returns JSON\n * {\n *    1: {\n *      \"0xTokenAddress\": {\n *        \"tokenBalance\": \"0x00001\",\n *        \"symbol\": \"USDC\",\n *        \"decimals\": 6,\n *        \"logo\": \"https://static.alchemyapi.io/images/assets/3408.png\",\n *        \"price\": 1.0001,\n *     }\n *   }\n * }\n */\nexport async function getAllTokens(holderAddr: string, onlyVerifiedTokens: boolean): Promise<any> {\n    return await sendPostRequest(API_URL, \"getAssets/get-all-tokens\", {\n        address: holderAddr,\n        onlyVerifiedTokens: onlyVerifiedTokens\n    })\n}\n\n/**\n * Get all lido withdrawal request ids for all chains\n * @param {string} chainId https://chainlist.org/ ie \"1\" for ethereum\n * @param {string} holderAddr Address of holder\n * @returns [readyToWithdrawRequestIds, notReadyToWithdrawRequestIds]\n * [\n *   [\n *     123,\n *     124,\n *   ],\n *   [\n *     412\n *     413\n *   ]\n * ]\n */\nexport async function getLidoWithdrawals(chainId: string, holderAddr: string): Promise<any> {\n    return await sendPostRequest(API_URL, \"getAssets/get-lido-withdrawals\", {\n        chain: chainId,\n        address: holderAddr\n    })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"24836ad332daeacbdf923ffe172a13f7e3ddc834","contentHash":"e1962ce9df41a4083853271345db6d5f4da5f26741300ac91fe23f3de825d901"},"/Users/albertsu/Desktop/sdk/src/common/constants.ts":{"path":"/Users/albertsu/Desktop/sdk/src/common/constants.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":726}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}},"8":{"start":{"line":12,"column":0},"end":{"line":17,"column":2}},"9":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":46}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":59}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}},"14":{"start":{"line":28,"column":0},"end":{"line":37,"column":1}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":66}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":14}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":67}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":14}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":58}},"20":{"start":{"line":38,"column":0},"end":{"line":38,"column":90}},"21":{"start":{"line":39,"column":0},"end":{"line":55,"column":2}},"22":{"start":{"line":56,"column":0},"end":{"line":56,"column":35}},"23":{"start":{"line":57,"column":0},"end":{"line":57,"column":73}},"24":{"start":{"line":58,"column":0},"end":{"line":58,"column":50}},"25":{"start":{"line":60,"column":30},"end":{"line":60,"column":85}},"26":{"start":{"line":61,"column":30},"end":{"line":61,"column":85}},"27":{"start":{"line":62,"column":26},"end":{"line":62,"column":77}},"28":{"start":{"line":63,"column":21},"end":{"line":63,"column":67}},"29":{"start":{"line":64,"column":22},"end":{"line":64,"column":69}},"30":{"start":{"line":65,"column":25},"end":{"line":65,"column":75}},"31":{"start":{"line":66,"column":32},"end":{"line":66,"column":89}},"32":{"start":{"line":67,"column":32},"end":{"line":67,"column":89}},"33":{"start":{"line":68,"column":33},"end":{"line":68,"column":91}},"34":{"start":{"line":69,"column":30},"end":{"line":69,"column":85}},"35":{"start":{"line":70,"column":30},"end":{"line":70,"column":85}},"36":{"start":{"line":71,"column":0},"end":{"line":71,"column":65}},"37":{"start":{"line":72,"column":0},"end":{"line":72,"column":65}},"38":{"start":{"line":73,"column":0},"end":{"line":73,"column":55}},"39":{"start":{"line":74,"column":0},"end":{"line":74,"column":45}},"40":{"start":{"line":75,"column":0},"end":{"line":75,"column":50}},"41":{"start":{"line":76,"column":0},"end":{"line":76,"column":58}},"42":{"start":{"line":77,"column":0},"end":{"line":77,"column":68}},"43":{"start":{"line":78,"column":0},"end":{"line":78,"column":65}},"44":{"start":{"line":79,"column":0},"end":{"line":79,"column":64}},"45":{"start":{"line":80,"column":0},"end":{"line":80,"column":66}},"46":{"start":{"line":81,"column":0},"end":{"line":81,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":28,"column":0},"end":{"line":37,"column":1}},"type":"switch","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":14}},{"start":{"line":32,"column":4},"end":{"line":34,"column":14}},{"start":{"line":35,"column":4},"end":{"line":36,"column":58}}],"line":28}},"s":{"0":1,"1":11,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1},"f":{"0":11},"b":{"0":[1,1,1],"1":[0,11],"2":[11,11],"3":[0,0,1]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/common/constants.ts","sources":["/Users/albertsu/Desktop/sdk/src/common/constants.ts"],"names":[],"mappings":";;;;;;AAAA,yBAAyB;AACZ,QAAA,mBAAmB,GAAG,KAAK,CAAA;AAC3B,QAAA,oBAAoB,GAAG,oBAAoB,CAAA;AAC3C,QAAA,kBAAkB,GAAG,uBAAuB,CAAA;AAC5C,QAAA,aAAa,GAAG,uBAAuB,CAAA;AACvC,QAAA,iBAAiB,GAAG;IAC7B,IAAI,EAAE,4CAA4C;IAClD,IAAI,EAAE,4CAA4C;IAClD,GAAG,EAAE,4CAA4C;IACjD,IAAI,EAAE,4CAA4C;CACrD,CAAA;AACY,QAAA,sBAAsB,GAAG;IAClC,oBAAoB,EAAE,4CAA4C;CACrE,CAAA;AAED,0BAA0B;AACb,QAAA,oBAAoB,GAAG,KAAK,CAAA;AAC5B,QAAA,qBAAqB,GAAG,aAAa,CAAA;AACrC,QAAA,mBAAmB,GAAG,4BAA4B,CAAA;AAE/D,OAAO;AACP,IAAI,OAAO,CAAA;AAaF,0BAAO;AAXhB,QAAQ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;IAC1B,KAAK,SAAS;QACV,kBAAA,OAAO,GAAG,6BAA6B,CAAA;QACvC,MAAK;IACT,KAAK,UAAU;QACX,kBAAA,OAAO,GAAG,8BAA8B,CAAA;QACxC,MAAK;IACT;QACI,kBAAA,OAAO,GAAG,qBAAqB,CAAA;CACtC;AAIY,QAAA,iBAAiB,GAAG,6DAA6D,CAAA;AACjF,QAAA,oBAAoB,GAAG;IAChC,GAAG,EAAE;QACD,IAAI,EAAE,4CAA4C;KACrD;IACD,GAAG,EAAE;QACD,IAAI,EAAE,4CAA4C;KACrD;IACD,KAAK,EAAE;QACH,MAAM,EAAE,4CAA4C;KACvD;IACD,OAAO,EAAE;QACL,IAAI,EAAE,4CAA4C;KACrD;IACD,OAAO,EAAE;QACL,IAAI,EAAE,4CAA4C;KACrD;CACJ,CAAA;AAEY,QAAA,YAAY,GAAG,WAAW,CAAA;AAC1B,QAAA,mBAAmB,GAAG,0CAA0C,CAAA;AAChE,QAAA,gBAAgB,GAAG,sBAAsB,CAAA;AAEtD,OAAO;AACP,sFAAmE;AACnE,sFAAmE;AACnE,8EAAyD;AACzD,oEAA+C;AAC/C,sEAAkD;AAClD,4EAAwD;AACxD,0FAA4D;AAC5D,0FAAsE;AACtE,4FAAoE;AACpE,sFAAmE;AACnE,sFAAkE;AAErD,QAAA,oBAAoB,GAAG,6BAAyB,CAAC,GAAG,CAAA;AACpD,QAAA,oBAAoB,GAAG,6BAAyB,CAAC,GAAG,CAAA;AACpD,QAAA,cAAc,GAAG,yBAAmB,CAAC,GAAG,CAAA;AACxC,QAAA,SAAS,GAAG,oBAAc,CAAC,GAAG,CAAA;AAC9B,QAAA,UAAU,GAAG,wBAAmB,CAAC,GAAG,CAAA;AACpC,QAAA,WAAW,GAAG,+BAAgB,CAAC,GAAG,CAAA;AAClC,QAAA,qBAAqB,GAAG,+BAA0B,CAAC,GAAG,CAAA;AACtD,QAAA,oBAAoB,GAAG,6BAAyB,CAAC,GAAG,CAAA;AACpD,QAAA,mBAAmB,GAAG,6BAAwB,CAAC,GAAG,CAAA;AAClD,QAAA,kBAAkB,GAAG,gCAAuB,CAAC,GAAG,CAAA;AAChD,QAAA,WAAW,GAAG,qBAAgB,CAAC,GAAG,CAAA","sourcesContent":["// local fork environment\nexport const LOCAL_FORK_CHAIN_ID = 31337\nexport const LOCAL_FORK_CHAIN_KEY = \"ethereum-localfork\"\nexport const LOCAL_FORK_RPC_URL = \"http://127.0.0.1:8545\"\nexport const LOCAL_API_URL = \"http://127.0.0.1:3000\"\nexport const LOCAL_TOKEN_ADDRS = {\n    usdc: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    usdt: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n    dai: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n    weth: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n}\nexport const FORK_DEFAULT_ADDRESSES = {\n    \"1inchOracleAddress\": \"0x07D91f5fb9Bf7798734C3f606dB065549F6893bb\"\n}\n\n// fun testnet environment\nexport const FUN_TESTNET_CHAIN_ID = 36864\nexport const FUN_TESTNET_CHAIN_KEY = \"fun-testnet\"\nexport const FUN_TESTNET_RPC_URL = \"http://34.221.214.161:3001\"\n\n// prod\nlet API_URL\n\nswitch (process.env.NODE_ENV) {\n    case \"staging\":\n        API_URL = \"https://api.fun.xyz/staging\"\n        break\n    case \"internal\":\n        API_URL = \"https://api.fun.xyz/internal\"\n        break\n    default:\n        API_URL = \"https://api.fun.xyz\"\n}\n\nexport { API_URL }\n\nexport const DASHBOARD_API_URL = \"https://zl8bx9p7f4.execute-api.us-west-2.amazonaws.com/Prod\"\nexport const BASE_WRAP_TOKEN_ADDR = {\n    \"1\": {\n        weth: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n    },\n    \"5\": {\n        weth: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\"\n    },\n    \"137\": {\n        wmatic: \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\"\n    },\n    \"43113\": {\n        weth: \"0x1D308089a2D1Ced3f1Ce36B1FcaF815b07217be3\"\n    },\n    \"42161\": {\n        weth: \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\"\n    }\n}\n\nexport const TEST_API_KEY = \"localtest\"\nexport const OPTION_TEST_API_KEY = \"nbiQS2Ut932ewF5TqiCpl2ZTUqPWb1P29N8GcJjy\"\nexport const TRANSACTION_TYPE = \"FunWalletInteraction\"\n\n// abis\nimport APPROVE_AND_EXEC_CONTRACT from \"../abis/ApproveAndExec.json\"\nimport APPROVE_AND_SWAP_CONTRACT from \"../abis/ApproveAndSwap.json\"\nimport ENTRYPOINT_CONTRACT from \"../abis/EntryPoint.json\"\nimport ERC20_CONTRACT from \"../abis/ERC20.json\"\nimport ERC_721_CONTRACT from \"../abis/ERC721.json\"\nimport FUN_WALLET_CONTRACT from \"../abis/FunWallet.json\"\nimport FACTORY_CONTRACT from \"../abis/FunWalletFactory.json\"\nimport GASLESS_PAYMASTER_CONTRACT from \"../abis/GaslessPaymaster.json\"\nimport WITHDRAW_QUEUE_CONTRACT from \"../abis/LidoWithdrawQueue.json\"\nimport OFF_CHAIN_ORACLE_CONTRACT from \"../abis/OffChainOracle.json\"\nimport TOKEN_PAYMASTER_CONTRACT from \"../abis/TokenPaymaster.json\"\n\nexport const APPROVE_AND_EXEC_ABI = APPROVE_AND_EXEC_CONTRACT.abi\nexport const APPROVE_AND_SWAP_ABI = APPROVE_AND_SWAP_CONTRACT.abi\nexport const ENTRYPOINT_ABI = ENTRYPOINT_CONTRACT.abi\nexport const ERC20_ABI = ERC20_CONTRACT.abi\nexport const WALLET_ABI = FUN_WALLET_CONTRACT.abi\nexport const FACTORY_ABI = FACTORY_CONTRACT.abi\nexport const GASLESS_PAYMASTER_ABI = GASLESS_PAYMASTER_CONTRACT.abi\nexport const OFF_CHAIN_ORACLE_ABI = OFF_CHAIN_ORACLE_CONTRACT.abi\nexport const TOKEN_PAYMASTER_ABI = TOKEN_PAYMASTER_CONTRACT.abi\nexport const WITHDRAW_QUEUE_ABI = WITHDRAW_QUEUE_CONTRACT.abi\nexport const ERC_721_ABI = ERC_721_CONTRACT.abi\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a653b697e3226d8e6ecc7e580c9201c4b2c8ab5a","contentHash":"f664960e394a960b82a408a21df2ed118fe9602e55294d4ef8a685e791d99c7a"},"/Users/albertsu/Desktop/sdk/src/utils/ApiUtils.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/ApiUtils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":112}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":46}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":50}},"7":{"start":{"line":10,"column":0},"end":{"line":23,"column":2}},"8":{"start":{"line":24,"column":20},"end":{"line":41,"column":1}},"9":{"start":{"line":25,"column":4},"end":{"line":40,"column":5}},"10":{"start":{"line":26,"column":8},"end":{"line":36,"column":42}},"11":{"start":{"line":27,"column":12},"end":{"line":35,"column":37}},"12":{"start":{"line":35,"column":27},"end":{"line":35,"column":35}},"13":{"start":{"line":39,"column":8},"end":{"line":39,"column":23}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":34}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":79}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":40}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":86}},"18":{"start":{"line":50,"column":0},"end":{"line":50,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":20},"end":{"line":24,"column":21}},"loc":{"start":{"line":24,"column":57},"end":{"line":41,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":36},"end":{"line":26,"column":37}},"loc":{"start":{"line":26,"column":54},"end":{"line":36,"column":9}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":20},"end":{"line":35,"column":21}},"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":35}},"line":35},"4":{"name":"sendGetRequest","decl":{"start":{"line":43,"column":15},"end":{"line":43,"column":29}},"loc":{"start":{"line":43,"column":111},"end":{"line":45,"column":1}},"line":43},"5":{"name":"sendPostRequest","decl":{"start":{"line":47,"column":15},"end":{"line":47,"column":30}},"loc":{"start":{"line":47,"column":118},"end":{"line":49,"column":1}},"line":47}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":43,"column":30},"end":{"line":43,"column":55}},"type":"default-arg","locations":[{"start":{"line":43,"column":36},"end":{"line":43,"column":55}}],"line":43},"4":{"loc":{"start":{"line":43,"column":67},"end":{"line":43,"column":109}},"type":"default-arg","locations":[{"start":{"line":43,"column":76},"end":{"line":43,"column":109}}],"line":43},"5":{"loc":{"start":{"line":47,"column":31},"end":{"line":47,"column":56}},"type":"default-arg","locations":[{"start":{"line":47,"column":37},"end":{"line":47,"column":56}}],"line":47},"6":{"loc":{"start":{"line":47,"column":74},"end":{"line":47,"column":116}},"type":"default-arg","locations":[{"start":{"line":47,"column":83},"end":{"line":47,"column":116}}],"line":47}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":26,"10":26,"11":26,"12":26,"13":0,"14":1,"15":5,"16":1,"17":21,"18":1},"f":{"0":1,"1":26,"2":26,"3":26,"4":5,"5":21},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[0],"5":[0],"6":[21]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/ApiUtils.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/ApiUtils.ts"],"names":[],"mappings":";;;;;;AAAA,+CAAyC;AACzC,4DAA8B;AAC9B,mDAA6C;AAEhC,QAAA,qBAAqB,GAAG;IACjC,KAAK,EAAE,GAAG;IACV,YAAY,EAAE,CAAC;IACf,QAAQ,EAAE,IAAI;IACd,MAAM,EAAE,CAAC;IACT,WAAW,EAAE,CAAC;IACd,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,CAAC;IACX,WAAW,EAAE,IAAI;IACjB,aAAa,EAAE,IAAI;IACnB,aAAa,EAAE,IAAI;IACnB,cAAc,EAAE,IAAI;CACvB,CAAA;AAEM,MAAM,WAAW,GAAG,KAAK,EAAE,GAAW,EAAE,MAAc,EAAE,MAAc,EAAE,IAAa,EAAE,EAAE;IAC5F,IAAI;QACA,OAAO,IAAA,eAAK,EAAC,KAAK;YACd,OAAO,MAAM,IAAA,oBAAK,EAAC,GAAG,EAAE;gBACpB,MAAM;gBACN,OAAO,EAAE;oBACL,cAAc,EAAE,kBAAkB;oBAClC,WAAW,EAAE,MAAM;iBACtB;gBACD,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;QAC5B,CAAC,EAAE,6BAAqB,CAAC,CAAA;KAC5B;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;KACjB;AACL,CAAC,CAAA;AAhBY,QAAA,WAAW,eAgBvB;AAEM,KAAK,UAAU,cAAc,CAChC,MAAc,mBAAO,EACrB,QAAgB,EAChB,SAAkB,UAAkB,CAAC,eAAe,CAAC,MAAO;IAE5D,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAG,GAAG,IAAI,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;AACjE,CAAC;AAND,wCAMC;AAEM,KAAK,UAAU,eAAe,CACjC,MAAc,mBAAO,EACrB,QAAgB,EAChB,IAAY,EACZ,SAAkB,UAAkB,CAAC,eAAe,CAAC,MAAO;IAE5D,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAG,GAAG,IAAI,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;AACxE,CAAC;AAPD,0CAOC","sourcesContent":["import { retry } from \"@lifeomic/attempt\"\nimport fetch from \"node-fetch\"\nimport { API_URL } from \"../common/constants\"\n\nexport const DEFAULT_RETRY_OPTIONS = {\n    delay: 100,\n    initialDelay: 0,\n    maxDelay: 3000,\n    factor: 2,\n    maxAttempts: 5,\n    timeout: 0,\n    jitter: true,\n    minDelay: 0,\n    handleError: null,\n    handleTimeout: null,\n    beforeAttempt: null,\n    calculateDelay: null\n}\n\nexport const sendRequest = async (uri: string, method: string, apiKey: string, body?: object) => {\n    try {\n        return retry(async function () {\n            return await fetch(uri, {\n                method,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-Api-Key\": apiKey\n                },\n                redirect: \"follow\",\n                body: JSON.stringify(body)\n            }).then((r) => r.json())\n        }, DEFAULT_RETRY_OPTIONS)\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function sendGetRequest(\n    uri: string = API_URL,\n    endpoint: string,\n    apiKey: string = (globalThis as any).globalEnvOption.apiKey!\n): Promise<any> {\n    return await sendRequest(`${uri}/${endpoint}`, \"GET\", apiKey)\n}\n\nexport async function sendPostRequest(\n    uri: string = API_URL,\n    endpoint: string,\n    body: object,\n    apiKey: string = (globalThis as any).globalEnvOption.apiKey!\n): Promise<any> {\n    return await sendRequest(`${uri}/${endpoint}`, \"POST\", apiKey, body)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70a15d1ff8643f9447a7dd7e7afcef38452f0751","contentHash":"2271d823ba649b527ad10d1007cbb5c1ab9a0441c39e01af09e51ab30eb7f127"},"/Users/albertsu/Desktop/sdk/src/apis/AuthApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/AuthApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":89}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":47}},"4":{"start":{"line":7,"column":4},"end":{"line":12,"column":7}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"6":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"8":{"start":{"line":22,"column":4},"end":{"line":26,"column":7}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}},"10":{"start":{"line":30,"column":4},"end":{"line":35,"column":7}},"11":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"12":{"start":{"line":32,"column":12},"end":{"line":32,"column":47}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"14":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"fnMap":{"0":{"name":"setAuth","decl":{"start":{"line":6,"column":15},"end":{"line":6,"column":22}},"loc":{"start":{"line":6,"column":55},"end":{"line":13,"column":1}},"line":6},"1":{"name":"getAuth","decl":{"start":{"line":15,"column":15},"end":{"line":15,"column":22}},"loc":{"start":{"line":15,"column":31},"end":{"line":19,"column":1}},"line":15},"2":{"name":"setGroupById","decl":{"start":{"line":21,"column":15},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":67},"end":{"line":27,"column":1}},"line":21},"3":{"name":"getGroupById","decl":{"start":{"line":29,"column":15},"end":{"line":29,"column":27}},"loc":{"start":{"line":29,"column":38},"end":{"line":36,"column":1}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":96},"end":{"line":30,"column":97}},"loc":{"start":{"line":30,"column":103},"end":{"line":35,"column":5}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{"line":31,"column":8},"end":{"line":33,"column":9}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/AuthApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/AuthApis.ts"],"names":[],"mappings":";;;AAAA,mDAA6C;AAC7C,gDAAmE;AAE5D,KAAK,UAAU,OAAO,CAAC,MAAc,EAAE,MAAc,EAAE,IAAY,EAAE,QAAgB;IACxF,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,eAAe,EAAE;QAC5C,MAAM;QACN,MAAM;QACN,IAAI;QACJ,QAAQ;KACX,CAAC,CAAA;AACN,CAAC;AAPD,0BAOC;AAEM,KAAK,UAAU,OAAO,CAAC,MAAc;IACxC,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,eAAe,EAAE;QACnD,MAAM;KACT,CAAC,CAAA;AACN,CAAC;AAJD,0BAIC;AAEM,KAAK,UAAU,YAAY,CAAC,QAAgB,EAAE,OAAiB,EAAE,kBAA0B;IAC9F,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,QAAQ,EAAE;QAC5C,OAAO;QACP,QAAQ;QACR,kBAAkB;KACrB,CAAC,CAAA;AACN,CAAC;AAND,oCAMC;AAEM,KAAK,UAAU,YAAY,CAAC,QAAgB;IAC/C,OAAO,MAAM,IAAA,yBAAc,EAAC,mBAAO,EAAE,UAAU,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE;QACvE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;SACrC;QACD,OAAO,CAAC,CAAC,IAAI,CAAA;IACjB,CAAC,CAAC,CAAA;AACN,CAAC;AAPD,oCAOC","sourcesContent":["import { API_URL } from \"../common/constants\"\nimport { sendGetRequest, sendPostRequest } from \"../utils/ApiUtils\"\n\nexport async function setAuth(authId: string, method: string, addr: string, uniqueId: string) {\n    await sendPostRequest(API_URL, \"auth/set-auth\", {\n        authId,\n        method,\n        addr,\n        uniqueId\n    })\n}\n\nexport async function getAuth(authId: string): Promise<any> {\n    return await sendPostRequest(API_URL, \"auth/get-auth\", {\n        authId\n    })\n}\n\nexport async function setGroupById(uniqueId: string, userIds: string[], requiredSignatures: number) {\n    return await sendPostRequest(API_URL, \"groups\", {\n        userIds,\n        uniqueId,\n        requiredSignatures\n    })\n}\n\nexport async function getGroupById(uniqueId: string) {\n    return await sendGetRequest(API_URL, `groups/${uniqueId}`).then((r: any) => {\n        if (!r.data) {\n            throw new Error(JSON.stringify(r))\n        }\n        return r.data\n    })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"12e0214fef285de706b2dd07101a05869a06c572","contentHash":"9772ffa3b65b552e8c6e35ff71c75a459fc5bc34f63d28d7e5887695ad360b4f"},"/Users/albertsu/Desktop/sdk/src/apis/BundlerApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/BundlerApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":112}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":47}},"4":{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":89}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":138}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"8":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":96}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":146}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":46}},"12":{"start":{"line":25,"column":4},"end":{"line":31,"column":5}},"13":{"start":{"line":26,"column":22},"end":{"line":26,"column":60}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":21}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":116}},"16":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}},"17":{"start":{"line":35,"column":21},"end":{"line":35,"column":127}},"18":{"start":{"line":36,"column":4},"end":{"line":36,"column":28}},"19":{"start":{"line":38,"column":0},"end":{"line":38,"column":32}}},"fnMap":{"0":{"name":"sendUserOpToBundler","decl":{"start":{"line":6,"column":15},"end":{"line":6,"column":34}},"loc":{"start":{"line":6,"column":81},"end":{"line":13,"column":1}},"line":6},"1":{"name":"estimateUserOpGas","decl":{"start":{"line":15,"column":15},"end":{"line":15,"column":32}},"loc":{"start":{"line":15,"column":79},"end":{"line":22,"column":1}},"line":15},"2":{"name":"validateChainId","decl":{"start":{"line":24,"column":15},"end":{"line":24,"column":30}},"loc":{"start":{"line":24,"column":50},"end":{"line":32,"column":1}},"line":24},"3":{"name":"getChainId","decl":{"start":{"line":34,"column":15},"end":{"line":34,"column":25}},"loc":{"start":{"line":34,"column":38},"end":{"line":37,"column":1}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},{"start":{"line":7,"column":4},"end":{"line":12,"column":5}}],"line":7},"1":{"loc":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},{"start":{"line":16,"column":4},"end":{"line":21,"column":5}}],"line":16},"2":{"loc":{"start":{"line":25,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":31,"column":5}},{"start":{"line":25,"column":4},"end":{"line":31,"column":5}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":5,"13":0,"14":0,"15":5,"16":1,"17":0,"18":0,"19":1},"f":{"0":0,"1":0,"2":5,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/BundlerApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/BundlerApis.ts"],"names":[],"mappings":";;;AACA,mDAAkE;AAElE,gDAAmE;AAE5D,KAAK,UAAU,mBAAmB,CACrC,MAAW,EACX,iBAAyB,EACzB,OAAe,EACf,QAA0B;IAE1B,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,+BAAmB,EAAE;QACzC,OAAO,MAAM,QAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC,CAAA;KACpF;SAAM;QACH,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,sBAAsB,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,CAAC,CAAA;KACxG;AACL,CAAC;AAXD,kDAWC;AAEM,KAAK,UAAU,iBAAiB,CACnC,MAAqB,EACrB,iBAAyB,EACzB,OAAe,EACf,QAA0B;IAE1B,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,+BAAmB,EAAE;QACzC,OAAO,MAAM,QAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC,CAAA;KAC3F;SAAM;QACH,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,8BAA8B,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,CAAC,CAAA;KAChH;AACL,CAAC;AAXD,8CAWC;AAEM,KAAK,UAAU,eAAe,CAAC,OAAe,EAAE,QAA0B;IAC7E,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,+BAAmB,EAAE;QACzC,MAAM,KAAK,GAAG,MAAM,QAAS,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;QACrD,OAAO,KAAK,CAAA;KACf;SAAM;QACH,OAAO,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,2BAA2B,EAAE,EAAE,OAAO,EAAE,CAAC,CAAA;KAClF;AACL,CAAC;AAPD,0CAOC;AAEM,KAAK,UAAU,UAAU,CAAC,UAAkB;IAC/C,MAAM,QAAQ,GAAG,MAAM,IAAA,yBAAc,EAAC,mBAAO,EAAE,mCAAmC,UAAU,EAAE,CAAC,CAAA;IAC/F,OAAO,QAAQ,CAAC,OAAO,CAAA;AAC3B,CAAC;AAHD,gCAGC","sourcesContent":["import { JsonRpcProvider } from \"@ethersproject/providers\"\nimport { API_URL, LOCAL_FORK_CHAIN_ID } from \"../common/constants\"\nimport { UserOperation } from \"../data\"\nimport { sendGetRequest, sendPostRequest } from \"../utils/ApiUtils\"\n\nexport async function sendUserOpToBundler(\n    userOp: any,\n    entryPointAddress: string,\n    chainId: string,\n    provider?: JsonRpcProvider\n): Promise<any> {\n    if (Number(chainId) === LOCAL_FORK_CHAIN_ID) {\n        return await provider!.send(\"eth_sendUserOperation\", [userOp, entryPointAddress])\n    } else {\n        return await sendPostRequest(API_URL, \"bundler/send-user-op\", { userOp, entryPointAddress, chainId })\n    }\n}\n\nexport async function estimateUserOpGas(\n    userOp: UserOperation,\n    entryPointAddress: string,\n    chainId: string,\n    provider?: JsonRpcProvider\n): Promise<any> {\n    if (Number(chainId) === LOCAL_FORK_CHAIN_ID) {\n        return await provider!.send(\"eth_estimateUserOperationGas\", [userOp, entryPointAddress])\n    } else {\n        return await sendPostRequest(API_URL, \"bundler/estimate-user-op-gas\", { userOp, entryPointAddress, chainId })\n    }\n}\n\nexport async function validateChainId(chainId: string, provider?: JsonRpcProvider): Promise<any> {\n    if (Number(chainId) === LOCAL_FORK_CHAIN_ID) {\n        const chain = await provider!.send(\"eth_chainId\", [])\n        return chain\n    } else {\n        return await sendPostRequest(API_URL, \"bundler/validate-chain-id\", { chainId })\n    }\n}\n\nexport async function getChainId(bundlerUrl: string): Promise<any> {\n    const response = await sendGetRequest(API_URL, `bundler/get-chain-id?bundlerUrl=${bundlerUrl}`)\n    return response.chainId\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"424bff06eccfbca0efcf3f3fe765047f20fb66e7","contentHash":"c6784ffb15f0cc01307e81f27bc2bdb44f8019ec6188397277084818e36e37d7"},"/Users/albertsu/Desktop/sdk/src/apis/DashboardApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/DashboardApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":47}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":44}},"6":{"start":{"line":10,"column":4},"end":{"line":12,"column":7}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}}},"fnMap":{"0":{"name":"getOrgInfo","decl":{"start":{"line":6,"column":15},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":34},"end":{"line":13,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":102},"end":{"line":10,"column":103}},"loc":{"start":{"line":10,"column":109},"end":{"line":12,"column":5}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{"line":7,"column":4},"end":{"line":9,"column":5}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":5,"5":0,"6":5,"7":5,"8":1},"f":{"0":5,"1":5},"b":{"0":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/DashboardApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/DashboardApis.ts"],"names":[],"mappings":";;;AAAA,mDAAqE;AACrE,gDAAkD;AAE3C,KAAK,UAAU,UAAU,CAAC,MAAc;IAC3C,IAAI,MAAM,KAAK,wBAAY,EAAE;QACzB,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAA;KACtC;IACD,OAAO,MAAM,IAAA,yBAAc,EAAC,6BAAiB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;QACxE,OAAO,CAAC,CAAC,IAAI,CAAA;IACjB,CAAC,CAAC,CAAA;AACN,CAAC;AAPD,gCAOC","sourcesContent":["import { DASHBOARD_API_URL, TEST_API_KEY } from \"../common/constants\"\nimport { sendGetRequest } from \"../utils/ApiUtils\"\n\nexport async function getOrgInfo(apiKey: string): Promise<any> {\n    if (apiKey === TEST_API_KEY) {\n        return { id: \"test\", name: \"test\" }\n    }\n    return await sendGetRequest(DASHBOARD_API_URL, \"apikey\", apiKey).then((r) => {\n        return r.data\n    })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4b3a592e1d05d3979f5867c0b3da9e3224f22360","contentHash":"56733db74457b85f938c9d5ac2b2c1dc4f58fd847fa8dcba30ccece79f6c9201"},"/Users/albertsu/Desktop/sdk/src/apis/InfoApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/InfoApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":134}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":47}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":34}},"6":{"start":{"line":10,"column":4},"end":{"line":13,"column":6}},"7":{"start":{"line":14,"column":4},"end":{"line":23,"column":5}},"8":{"start":{"line":15,"column":21},"end":{"line":15,"column":58}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}},"11":{"start":{"line":19,"column":8},"end":{"line":22,"column":10}},"12":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":65}},"14":{"start":{"line":27,"column":22},"end":{"line":29,"column":6}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":22}},"16":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":42}},"18":{"start":{"line":33,"column":19},"end":{"line":33,"column":85}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":88}},"20":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}},"21":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":47}},"23":{"start":{"line":41,"column":17},"end":{"line":41,"column":35}},"24":{"start":{"line":42,"column":4},"end":{"line":59,"column":5}},"25":{"start":{"line":43,"column":20},"end":{"line":47,"column":35}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":21}},"27":{"start":{"line":47,"column":25},"end":{"line":47,"column":34}},"28":{"start":{"line":48,"column":18},"end":{"line":48,"column":81}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":113}},"30":{"start":{"line":50,"column":8},"end":{"line":50,"column":17}},"31":{"start":{"line":53,"column":8},"end":{"line":58,"column":11}},"32":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"33":{"start":{"line":55,"column":16},"end":{"line":55,"column":51}},"34":{"start":{"line":57,"column":12},"end":{"line":57,"column":26}},"35":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}},"36":{"start":{"line":63,"column":4},"end":{"line":72,"column":5}},"37":{"start":{"line":64,"column":8},"end":{"line":66,"column":11}},"38":{"start":{"line":65,"column":12},"end":{"line":65,"column":21}},"39":{"start":{"line":69,"column":8},"end":{"line":71,"column":11}},"40":{"start":{"line":70,"column":12},"end":{"line":70,"column":26}},"41":{"start":{"line":74,"column":0},"end":{"line":74,"column":44}},"42":{"start":{"line":76,"column":17},"end":{"line":79,"column":5}},"43":{"start":{"line":80,"column":4},"end":{"line":89,"column":5}},"44":{"start":{"line":81,"column":8},"end":{"line":83,"column":11}},"45":{"start":{"line":82,"column":12},"end":{"line":82,"column":26}},"46":{"start":{"line":86,"column":8},"end":{"line":88,"column":11}},"47":{"start":{"line":87,"column":12},"end":{"line":87,"column":21}},"48":{"start":{"line":91,"column":0},"end":{"line":91,"column":38}},"49":{"start":{"line":93,"column":69},"end":{"line":93,"column":96}},"50":{"start":{"line":94,"column":4},"end":{"line":94,"column":28}},"51":{"start":{"line":96,"column":0},"end":{"line":96,"column":50}}},"fnMap":{"0":{"name":"getTokenInfo","decl":{"start":{"line":7,"column":15},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":45},"end":{"line":35,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":109},"end":{"line":27,"column":110}},"loc":{"start":{"line":27,"column":116},"end":{"line":29,"column":5}},"line":27},"2":{"name":"getChainInfo","decl":{"start":{"line":37,"column":15},"end":{"line":37,"column":27}},"loc":{"start":{"line":37,"column":37},"end":{"line":60,"column":1}},"line":37},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":18},"end":{"line":44,"column":19}},"loc":{"start":{"line":44,"column":25},"end":{"line":46,"column":9}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":19},"end":{"line":47,"column":20}},"loc":{"start":{"line":47,"column":25},"end":{"line":47,"column":34}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":103},"end":{"line":53,"column":104}},"loc":{"start":{"line":53,"column":110},"end":{"line":58,"column":9}},"line":53},"6":{"name":"getChainFromName","decl":{"start":{"line":62,"column":15},"end":{"line":62,"column":31}},"loc":{"start":{"line":62,"column":38},"end":{"line":73,"column":1}},"line":62},"7":{"name":"(anonymous_7)","decl":{"start":{"line":64,"column":120},"end":{"line":64,"column":121}},"loc":{"start":{"line":64,"column":127},"end":{"line":66,"column":9}},"line":64},"8":{"name":"(anonymous_8)","decl":{"start":{"line":69,"column":112},"end":{"line":69,"column":113}},"loc":{"start":{"line":69,"column":119},"end":{"line":71,"column":9}},"line":69},"9":{"name":"getModuleInfo","decl":{"start":{"line":75,"column":15},"end":{"line":75,"column":28}},"loc":{"start":{"line":75,"column":50},"end":{"line":90,"column":1}},"line":75},"10":{"name":"(anonymous_10)","decl":{"start":{"line":81,"column":104},"end":{"line":81,"column":105}},"loc":{"start":{"line":81,"column":111},"end":{"line":83,"column":9}},"line":81},"11":{"name":"(anonymous_11)","decl":{"start":{"line":86,"column":110},"end":{"line":86,"column":111}},"loc":{"start":{"line":86,"column":117},"end":{"line":88,"column":9}},"line":86},"12":{"name":"getPaymasterAddress","decl":{"start":{"line":92,"column":15},"end":{"line":92,"column":34}},"loc":{"start":{"line":92,"column":44},"end":{"line":95,"column":1}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":23,"column":5}},{"start":{"line":14,"column":4},"end":{"line":23,"column":5}}],"line":14},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":115}},"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":59}},{"start":{"line":14,"column":63},"end":{"line":14,"column":115}}],"line":14},"2":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"3":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{"line":24,"column":4},"end":{"line":26,"column":5}}],"line":24},"4":{"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":95}},"type":"binary-expr","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":26}},{"start":{"line":24,"column":30},"end":{"line":24,"column":49}},{"start":{"line":24,"column":54},"end":{"line":24,"column":95}}],"line":24},"5":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{"line":30,"column":4},"end":{"line":32,"column":5}}],"line":30},"6":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{"line":38,"column":4},"end":{"line":40,"column":5}}],"line":38},"7":{"loc":{"start":{"line":42,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":59,"column":5}},{"start":{"line":42,"column":4},"end":{"line":59,"column":5}}],"line":42},"8":{"loc":{"start":{"line":48,"column":18},"end":{"line":48,"column":81}},"type":"cond-expr","locations":[{"start":{"line":48,"column":24},"end":{"line":48,"column":27}},{"start":{"line":48,"column":30},"end":{"line":48,"column":81}}],"line":48},"9":{"loc":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},{"start":{"line":54,"column":12},"end":{"line":56,"column":13}}],"line":54},"10":{"loc":{"start":{"line":63,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":72,"column":5}},{"start":{"line":63,"column":4},"end":{"line":72,"column":5}}],"line":63},"11":{"loc":{"start":{"line":80,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":89,"column":5}},{"start":{"line":80,"column":4},"end":{"line":89,"column":5}}],"line":80}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":5,"22":0,"23":5,"24":5,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":5,"32":5,"33":0,"34":5,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":1},"f":{"0":0,"1":0,"2":5,"3":0,"4":0,"5":5,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,5],"7":[0,5],"8":[0,0],"9":[0,5],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/InfoApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/InfoApis.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    API_URL,\n    BASE_WRAP_TOKEN_ADDR,\n    FORK_DEFAULT_ADDRESSES,\n    FUN_TESTNET_CHAIN_ID,\n    LOCAL_API_URL,\n    LOCAL_FORK_CHAIN_ID,\n    LOCAL_FORK_CHAIN_KEY,\n    LOCAL_TOKEN_ADDRS\n} from \"../common/constants\"\nimport { Helper, ServerMissingDataError } from \"../errors\"\nimport { sendPostRequest } from \"../utils/ApiUtils\"\n\nexport async function getTokenInfo(symbol: string, chainId: string): Promise<any> {\n    symbol = symbol.toLowerCase()\n    let body\n\n    body = {\n        symbol,\n        chain: chainId\n    }\n    if (Number(chainId) === LOCAL_FORK_CHAIN_ID || Number(chainId) === FUN_TESTNET_CHAIN_ID) {\n        const addr = (LOCAL_TOKEN_ADDRS as any)[symbol]\n        if (addr) {\n            return addr\n        }\n        body = {\n            symbol,\n            chain: \"1\"\n        }\n    }\n    if ((symbol === \"weth\" || symbol === \"wmatic\") && (BASE_WRAP_TOKEN_ADDR as any)[chainId]) {\n        return (BASE_WRAP_TOKEN_ADDR as any)[chainId][symbol]\n    }\n\n    const tokenInfo = await sendPostRequest(API_URL, \"get-erc-token\", body).then((r) => {\n        return r.data\n    })\n    if (tokenInfo.contract_address) {\n        return tokenInfo.contract_address\n    }\n    const helper = new Helper(\"token\", symbol, \"token symbol doesn't exist\")\n    throw new ServerMissingDataError(\"Token.getAddress\", \"DataServer\", helper)\n}\n\nexport async function getChainInfo(chainId: string): Promise<any> {\n    if (!Number(chainId)) {\n        return await getChainFromName(chainId)\n    }\n    const body = { chain: chainId }\n\n    if (Number(chainId) === LOCAL_FORK_CHAIN_ID) {\n        const req = await sendPostRequest(LOCAL_API_URL, \"get-chain-info\", body)\n            .then((r) => {\n                return r\n            })\n            .catch(() => undefined)\n        const r = req ? req : { chain: chainId, rpcUrl: \"http://localhost:8545\" }\n        r.moduleAddresses = { ...r.moduleAddresses, FORK_DEFAULT_ADDRESSES }\n        return r\n    } else {\n        return await sendPostRequest(API_URL, \"get-chain-info\", body).then((r) => {\n            if (!r.data) {\n                throw new Error(JSON.stringify(r))\n            }\n            return r.data\n        })\n    }\n}\n\nexport async function getChainFromName(name: string): Promise<any> {\n    if (name === LOCAL_FORK_CHAIN_KEY) {\n        return await sendPostRequest(LOCAL_API_URL, \"get-chain-info\", { chain: name }).then((r) => {\n            return r\n        })\n    } else {\n        return await sendPostRequest(API_URL, \"get-chain-from-name\", { name }).then((r) => {\n            return r.data\n        })\n    }\n}\n\nexport async function getModuleInfo(moduleName: string, chainId: string): Promise<any> {\n    const body = {\n        module: moduleName,\n        chain: chainId\n    }\n\n    if (Number(chainId) !== LOCAL_FORK_CHAIN_ID) {\n        return await sendPostRequest(API_URL, \"get-module-info\", body).then((r) => {\n            return r.data\n        })\n    } else {\n        return await sendPostRequest(LOCAL_API_URL, \"get-module-info\", body).then((r) => {\n            return r\n        })\n    }\n}\n\nexport async function getPaymasterAddress(chainId: string): Promise<any> {\n    const {\n        moduleAddresses: {\n            paymaster: { paymasterAddress }\n        }\n    } = await getChainInfo(chainId)\n    return paymasterAddress\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f2ae730dccaa2f9db4f428f6ce244ae984ffe080","contentHash":"2c6906bebe5291453c52c11aa598956b8fe6a7e2bd97f5b0016e556905629ffc"},"/Users/albertsu/Desktop/sdk/src/errors/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":51}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":53}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":11,"6":0,"7":11,"8":0,"9":0,"10":0,"11":1,"12":8,"13":11,"14":11,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"f":{"0":11,"1":0,"2":0,"3":8},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[11,0],"4":[11,11],"5":[0,11],"6":[11,0],"7":[0,0],"8":[1,1,1],"9":[11,0],"10":[11,11]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,8CAA2B;AAC3B,8CAA2B;AAC3B,2CAAwB;AACxB,mDAAgC;AAChC,gDAA6B;AAC7B,gDAA6B;AAC7B,qDAAkC;AAClC,0CAAuB","sourcesContent":["export * from \"./BaseError\"\nexport * from \"./DataError\"\nexport * from \"./Helper\"\nexport * from \"./ParameterError\"\nexport * from \"./ServerError\"\nexport * from \"./StatusError\"\nexport * from \"./TransactionError\"\nexport * from \"./types\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b77502bf4cfd6c393d1367d97487a2750867bb43","contentHash":"39d97c923a87918c46e1081e2db6912c9badd0c820dc9c6e59f68b45a841ad24"},"/Users/albertsu/Desktop/sdk/src/errors/BaseError.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/BaseError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":19}},"3":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":27}},"7":{"start":{"line":15,"column":8},"end":{"line":16,"column":180}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":65},"end":{"line":13,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":14},"end":{"line":17,"column":5}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":29},"end":{"line":5,"column":47}},"type":"default-arg","locations":[{"start":{"line":5,"column":42},"end":{"line":5,"column":47}}],"line":5},"1":{"loc":{"start":{"line":5,"column":49},"end":{"line":5,"column":63}},"type":"default-arg","locations":[{"start":{"line":5,"column":62},"end":{"line":5,"column":63}}],"line":5},"2":{"loc":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},{"start":{"line":7,"column":8},"end":{"line":9,"column":9}}],"line":7},"3":{"loc":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},{"start":{"line":10,"column":8},"end":{"line":12,"column":9}}],"line":10}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"f":{"0":0,"1":0},"b":{"0":[0],"1":[0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/BaseError.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/BaseError.ts"],"names":[],"mappings":";;;AAEA,MAAa,SAAU,SAAQ,KAAK;IAChC,YAAY,GAAW,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;QACvE,KAAK,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,OAAO,IAAI,MAAM,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAA;SACjD;QACD,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,OAAO,EAAE,CAAA;SACjB;IACL,CAAC;IAED,OAAO;QACH,IAAI,CAAC,OAAO;YACR,uKAAuK,CAAA;IAC/K,CAAC;CACJ;AAfD,8BAeC","sourcesContent":["import { Helper } from \"./Helper\"\n\nexport class BaseError extends Error {\n    constructor(msg: string, helper: Helper, isInternal = false, stackDepth = 1) {\n        super(msg)\n        if (helper) {\n            this.message += `.\\n${helper.log(stackDepth)}`\n        }\n        if (isInternal) {\n            this.loadEnd()\n        }\n    }\n\n    loadEnd() {\n        this.message +=\n            \"\\nThis is an internal sdk error please contact the fun team at these contacts for the fastest response.\\n\\nemail: support@fun.xyz\\ntwitter: https://twitter.com/fun\\n\"\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f5e8721bf03490c3592d2dbbc85a88ce8f98f61","contentHash":"646e82b9cd56ceb8a862e7bb623ba875d3177d283214114bccce41d051496be2"},"/Users/albertsu/Desktop/sdk/src/errors/DataError.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/DataError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":69}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":130}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":95},"end":{"line":10,"column":5}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":36},"end":{"line":7,"column":49}},"type":"default-arg","locations":[{"start":{"line":7,"column":47},"end":{"line":7,"column":49}}],"line":7},"1":{"loc":{"start":{"line":7,"column":59},"end":{"line":7,"column":77}},"type":"default-arg","locations":[{"start":{"line":7,"column":72},"end":{"line":7,"column":77}}],"line":7},"2":{"loc":{"start":{"line":7,"column":79},"end":{"line":7,"column":93}},"type":"default-arg","locations":[{"start":{"line":7,"column":92},"end":{"line":7,"column":93}}],"line":7},"3":{"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":68}},"type":"cond-expr","locations":[{"start":{"line":8,"column":26},"end":{"line":8,"column":32}},{"start":{"line":8,"column":35},"end":{"line":8,"column":68}}],"line":8},"4":{"loc":{"start":{"line":9,"column":61},"end":{"line":9,"column":94}},"type":"cond-expr","locations":[{"start":{"line":9,"column":72},"end":{"line":9,"column":89}},{"start":{"line":9,"column":92},"end":{"line":9,"column":94}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":1},"f":{"0":0},"b":{"0":[0],"1":[0],"2":[0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/DataError.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/DataError.ts"],"names":[],"mappings":";;;AAAA,2CAAuC;AACvC,qCAAiC;AAEjC,MAAa,eAAgB,SAAQ,qBAAS;IAC1C,YAAY,QAAgB,EAAE,QAAgB,EAAE,QAAQ,GAAG,EAAE,EAAE,MAAe,EAAE,UAAU,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;QAC9G,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,eAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;QACnD,KAAK,CAAC,GAAG,QAAQ,kBAAkB,QAAQ,UAAU,QAAQ,CAAC,CAAC,CAAC,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;IAC7H,CAAC;CACJ;AALD,0CAKC","sourcesContent":["import { BaseError } from \"./BaseError\"\nimport { Helper } from \"./Helper\"\n\nexport class DataFormatError extends BaseError {\n    constructor(dataName: string, dataType: string, location = \"\", helper?: Helper, isInternal = false, stackDepth = 1) {\n        helper = helper ? helper : new Helper(\"\", null, \"\")\n        super(`${dataName} has incorrect ${dataType} format${location ? ` in ${location}` : \"\"}`, helper, isInternal, stackDepth)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dd06832c99c67bf7eb8039809c3a3d7be218c30f","contentHash":"64b789b199536bceadf6720f5856b89b3ecd91feb1ef24ece6597a59d914d66e"},"/Users/albertsu/Desktop/sdk/src/errors/Helper.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/Helper.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":18},"end":{"line":12,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"4":{"start":{"line":6,"column":8},"end":{"line":6,"column":51}},"5":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":80}},"7":{"start":{"line":9,"column":36},"end":{"line":9,"column":67}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":14}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":45}},"12":{"start":{"line":20,"column":22},"end":{"line":20,"column":24}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":72}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":96}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":39}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":28}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":31}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":40},"end":{"line":12,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":27},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":36},"end":{"line":9,"column":67}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":38},"end":{"line":18,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":19},"end":{"line":24,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":21},"end":{"line":27,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":17},"end":{"line":30,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":8,"column":4},"end":{"line":10,"column":5}}],"line":8},"2":{"loc":{"start":{"line":17,"column":20},"end":{"line":17,"column":44}},"type":"cond-expr","locations":[{"start":{"line":17,"column":30},"end":{"line":17,"column":39}},{"start":{"line":17,"column":42},"end":{"line":17,"column":44}}],"line":17},"3":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":17}},"type":"default-arg","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":17}}],"line":19},"4":{"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":71}},"type":"cond-expr","locations":[{"start":{"line":21,"column":27},"end":{"line":21,"column":66}},{"start":{"line":21,"column":69},"end":{"line":21,"column":71}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/Helper.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/Helper.ts"],"names":[],"mappings":";;;AAAA,MAAM,SAAS,GAAG,CAAC,OAAe,EAAE,OAA0B,EAAE,EAAE;IAC9D,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC7B,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,EAAE,CAAA;KAC7C;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACxB,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAC1E;IACD,OAAO,EAAE,CAAA;AACb,CAAC,CAAA;AAED,MAAa,MAAM;IAIf,YAAY,KAAa,EAAE,IAAS,EAAE,OAAe;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IACxC,CAAC;IAED,GAAG,CAAC,KAAK,GAAG,CAAC;QACT,MAAM,KAAK,GAAa,EAAE,CAAA;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;QAC/D,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;QACvF,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;IAClC,CAAC;IAED,WAAW,CAAC,GAAW;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACvB,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA;IAC1B,CAAC;CACJ;AAxBD,wBAwBC","sourcesContent":["const logHelper = (tabwith: number, logData: string | string[]) => {\n    if (typeof logData === \"string\") {\n        return `${\"\\t\".repeat(tabwith)}${logData}`\n    }\n    if (Array.isArray(logData)) {\n        return logData.map((log) => `${\"\\t\".repeat(tabwith)}${log}`).join(\"\\n\")\n    }\n    return \"\"\n}\n\nexport class Helper {\n    title: string\n    data: any\n    msgs: string[]\n    constructor(title: string, data: any, message: string) {\n        this.title = title\n        this.data = data\n        this.msgs = message ? [message] : []\n    }\n\n    log(width = 1) {\n        const lines: string[] = []\n        this.msgs.length ? lines.push(logHelper(width, this.msgs)) : \"\"\n        lines.push(logHelper(width, `${this.title}: ${JSON.stringify(this.data, null, \"\\t\")}`))\n        return lines.join(\"\\n\") + \"\\n\"\n    }\n\n    pushMessage(msg: string) {\n        this.msgs.push(msg)\n    }\n\n    popMessage() {\n        return this.msgs.pop()\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"12b18a6b5173273275bc4c9fc26f29f32ac772c6","contentHash":"eca861f7cd13097bb524f0e79ecd0cd2a1ab59e87f1d422f0d8cbf875d997103"},"/Users/albertsu/Desktop/sdk/src/errors/ParameterError.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/ParameterError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":95}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":85}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":67}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":55}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":61}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":65},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":54},"end":{"line":17,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":54},"end":{"line":23,"column":5}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":45},"end":{"line":8,"column":63}},"type":"default-arg","locations":[{"start":{"line":8,"column":58},"end":{"line":8,"column":63}}],"line":8},"1":{"loc":{"start":{"line":14,"column":34},"end":{"line":14,"column":52}},"type":"default-arg","locations":[{"start":{"line":14,"column":47},"end":{"line":14,"column":52}}],"line":14},"2":{"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":66}},"type":"cond-expr","locations":[{"start":{"line":15,"column":26},"end":{"line":15,"column":32}},{"start":{"line":15,"column":35},"end":{"line":15,"column":66}}],"line":15},"3":{"loc":{"start":{"line":21,"column":34},"end":{"line":21,"column":52}},"type":"default-arg","locations":[{"start":{"line":21,"column":47},"end":{"line":21,"column":52}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0],"1":[0],"2":[0,0],"3":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/ParameterError.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/ParameterError.ts"],"names":[],"mappings":";;;AAAA,2CAAuC;AACvC,2CAA6C;AAC7C,qCAAiC;AAEjC,MAAa,cAAe,SAAQ,qBAAS;IACzC,YAAY,SAAiB,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK;QAC/E,KAAK,CAAC,GAAG,SAAS,2BAA2B,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;IAChF,CAAC;CACJ;AAJD,wCAIC;AAED,MAAa,qBAAsB,SAAQ,cAAc;IACrD,YAAY,QAAgB,EAAE,MAAe,EAAE,UAAU,GAAG,KAAK;QAC7D,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,eAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;QACjD,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;IAClD,CAAC;CACJ;AALD,sDAKC;AAED,MAAa,oBAAqB,SAAQ,2BAAe;IACrD,YAAY,QAAgB,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK;QAC5D,KAAK,CAAC,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;IACxD,CAAC;CACJ;AAJD,oDAIC","sourcesContent":["import { BaseError } from \"./BaseError\"\nimport { DataFormatError } from \"./DataError\"\nimport { Helper } from \"./Helper\"\n\nexport class ParameterError extends BaseError {\n    constructor(errorType: string, location: string, helper: Helper, isInternal = false) {\n        super(`${errorType} required parameters at ${location}`, helper, isInternal)\n    }\n}\n\nexport class MissingParameterError extends ParameterError {\n    constructor(location: string, helper?: Helper, isInternal = false) {\n        helper = helper ? helper : new Helper(\"\", \"\", \"\")\n        super(\"Missing\", location, helper, isInternal)\n    }\n}\n\nexport class ParameterFormatError extends DataFormatError {\n    constructor(location: string, helper: Helper, isInternal = false) {\n        super(location, \"parameter\", \"\", helper, isInternal)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c0be842ffa4027188022e7f32b85578bf038d72d","contentHash":"03019ce08037c36147c9c34c079b796da8f08452b403daa0b6ff0610355b5d7a"},"/Users/albertsu/Desktop/sdk/src/errors/ServerError.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/ServerError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":96}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":65}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":88}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":56}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":90}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":65},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":66},"end":{"line":14,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":66},"end":{"line":20,"column":5}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":45},"end":{"line":6,"column":63}},"type":"default-arg","locations":[{"start":{"line":6,"column":58},"end":{"line":6,"column":63}}],"line":6},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":64}},"type":"default-arg","locations":[{"start":{"line":12,"column":59},"end":{"line":12,"column":64}}],"line":12},"2":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":64}},"type":"default-arg","locations":[{"start":{"line":18,"column":59},"end":{"line":18,"column":64}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0],"1":[0],"2":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/ServerError.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/ServerError.ts"],"names":[],"mappings":";;;AAAA,2CAAuC;AAGvC,MAAa,WAAY,SAAQ,qBAAS;IACtC,YAAY,SAAS,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK;QACvE,KAAK,CAAC,GAAG,SAAS,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;IAC5D,CAAC;CACJ;AAJD,kCAIC;AAED,MAAa,sBAAuB,SAAQ,WAAW;IACnD,YAAY,QAAgB,EAAE,UAAkB,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK;QAChF,KAAK,CAAC,yBAAyB,UAAU,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;IACnF,CAAC;CACJ;AAJD,wDAIC;AAED,MAAa,uBAAwB,SAAQ,WAAW;IACpD,YAAY,QAAgB,EAAE,UAAkB,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK;QAChF,KAAK,CAAC,2BAA2B,UAAU,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;IACrF,CAAC;CACJ;AAJD,0DAIC","sourcesContent":["import { BaseError } from \"./BaseError\"\nimport { Helper } from \"./Helper\"\n\nexport class ServerError extends BaseError {\n    constructor(errorType, location: string, helper: Helper, isInternal = false) {\n        super(`${errorType} in ${location}`, helper, isInternal)\n    }\n}\n\nexport class ServerMissingDataError extends ServerError {\n    constructor(location: string, serverType: string, helper: Helper, isInternal = false) {\n        super(`Data not found during ${serverType} call`, location, helper, isInternal)\n    }\n}\n\nexport class NoServerConnectionError extends ServerError {\n    constructor(location: string, serverType: string, helper: Helper, isInternal = false) {\n        super(`Server not found during ${serverType} call`, location, helper, isInternal)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bc7969a62156a48d97f8f05942d02074c67216c1","contentHash":"95e9cf966de1d0685aeaab81382afad8b1ebc0454564f35082fb3637d209477e"},"/Users/albertsu/Desktop/sdk/src/errors/StatusError.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/StatusError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":85}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":92},"end":{"line":8,"column":5}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":46}},"type":"default-arg","locations":[{"start":{"line":6,"column":44},"end":{"line":6,"column":46}}],"line":6},"1":{"loc":{"start":{"line":6,"column":56},"end":{"line":6,"column":74}},"type":"default-arg","locations":[{"start":{"line":6,"column":69},"end":{"line":6,"column":74}}],"line":6},"2":{"loc":{"start":{"line":6,"column":76},"end":{"line":6,"column":90}},"type":"default-arg","locations":[{"start":{"line":6,"column":89},"end":{"line":6,"column":90}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1},"f":{"0":0},"b":{"0":[0],"1":[0],"2":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/StatusError.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/StatusError.ts"],"names":[],"mappings":";;;AAAA,2CAAuC;AAEvC,MAAa,WAAY,SAAQ,qBAAS;IACtC,YAAY,OAAe,EAAE,MAAc,EAAE,QAAQ,GAAG,EAAE,EAAE,MAAM,EAAE,UAAU,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;QAClG,KAAK,CAAC,GAAG,OAAO,IAAI,MAAM,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;IAChF,CAAC;CACJ;AAJD,kCAIC","sourcesContent":["import { BaseError } from \"./BaseError\"\n\nexport class StatusError extends BaseError {\n    constructor(service: string, status: string, location = \"\", helper, isInternal = false, stackDepth = 1) {\n        super(`${service} ${status} in ${location}`, helper, isInternal, stackDepth)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"36d8e6cb2c65f81296c59da3684c37dbad215972","contentHash":"530645f0f47abca955458f27b3db67b571f99f1612a7cec1c22e5e58563f9c52"},"/Users/albertsu/Desktop/sdk/src/errors/TransactionError.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/TransactionError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":83}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":75},"end":{"line":8,"column":5}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":29}},"type":"default-arg","locations":[{"start":{"line":6,"column":27},"end":{"line":6,"column":29}}],"line":6},"1":{"loc":{"start":{"line":6,"column":39},"end":{"line":6,"column":57}},"type":"default-arg","locations":[{"start":{"line":6,"column":52},"end":{"line":6,"column":57}}],"line":6},"2":{"loc":{"start":{"line":6,"column":59},"end":{"line":6,"column":73}},"type":"default-arg","locations":[{"start":{"line":6,"column":72},"end":{"line":6,"column":73}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1},"f":{"0":0},"b":{"0":[0],"1":[0],"2":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/TransactionError.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/TransactionError.ts"],"names":[],"mappings":";;;AAAA,2CAAuC;AAGvC,MAAa,gBAAiB,SAAQ,qBAAS;IAC3C,YAAY,QAAQ,GAAG,EAAE,EAAE,MAAc,EAAE,UAAU,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;QACzE,KAAK,CAAC,yBAAyB,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;IAC9E,CAAC;CACJ;AAJD,4CAIC","sourcesContent":["import { BaseError } from \"./BaseError\"\nimport { Helper } from \"./Helper\"\n\nexport class TransactionError extends BaseError {\n    constructor(location = \"\", helper: Helper, isInternal = false, stackDepth = 1) {\n        super(`Transaction failed at ${location}`, helper, isInternal, stackDepth)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1ee0fb4c4557115a08ac8f0bd3b18e6ae1ad04c5","contentHash":"d48137ab0e47b9fb73b01041f0a27aa29a3a3fd378c1955f431ade621ed1d405"},"/Users/albertsu/Desktop/sdk/src/errors/types.ts":{"path":"/Users/albertsu/Desktop/sdk/src/errors/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/errors/types.ts","sources":["/Users/albertsu/Desktop/sdk/src/errors/types.ts"],"names":[],"mappings":"","sourcesContent":["export type ErrorData = {\n    location: string\n    error?: {\n        txDetails?: ErrorTransactionDetails\n        reasonData?: {\n            title: string\n            reasons: string[]\n        }\n    }\n}\n\nexport type ErrorTransactionDetails = {\n    method: string\n    params: any[]\n    contractAddress?: string\n    chainId?: number | string\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9d1d4de4c05374d8b43bba26569206d45b664736","contentHash":"d4da33298c3e2f53b98860b8b703bfb5e134c48524c27c34603c4604ca642650"},"/Users/albertsu/Desktop/sdk/src/apis/StoreApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/StoreApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":35}},"6":{"start":{"line":8,"column":19},"end":{"line":8,"column":47}},"7":{"start":{"line":10,"column":28},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":87}},"10":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":15}},"12":{"start":{"line":17,"column":19},"end":{"line":17,"column":58}},"13":{"start":{"line":18,"column":18},"end":{"line":18,"column":75}},"14":{"start":{"line":19,"column":17},"end":{"line":27,"column":5}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":85}},"16":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"17":{"start":{"line":32,"column":28},"end":{"line":32,"column":54}},"18":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"19":{"start":{"line":34,"column":8},"end":{"line":34,"column":87}},"20":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":15}},"22":{"start":{"line":39,"column":17},"end":{"line":44,"column":5}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":89}},"24":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}}},"fnMap":{"0":{"name":"storeUserOp","decl":{"start":{"line":9,"column":15},"end":{"line":9,"column":26}},"loc":{"start":{"line":9,"column":58},"end":{"line":29,"column":1}},"line":9},"1":{"name":"storeEVMCall","decl":{"start":{"line":31,"column":15},"end":{"line":31,"column":27}},"loc":{"start":{"line":31,"column":37},"end":{"line":46,"column":1}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":31},"end":{"line":9,"column":42}},"type":"default-arg","locations":[{"start":{"line":9,"column":41},"end":{"line":9,"column":42}}],"line":9},"1":{"loc":{"start":{"line":9,"column":44},"end":{"line":9,"column":56}},"type":"default-arg","locations":[{"start":{"line":9,"column":54},"end":{"line":9,"column":56}}],"line":9},"2":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}],"line":11},"3":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14},"4":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{"line":33,"column":4},"end":{"line":35,"column":5}}],"line":33},"5":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":36,"column":4},"end":{"line":38,"column":5}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"f":{"0":0,"1":0},"b":{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/StoreApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/StoreApis.ts"],"names":[],"mappings":";;;AACA,mDAA6E;AAE7E,kCAAyD;AACzD,sCAA2C;AAC3C,oCAA2C;AAC3C,gDAAmD;AAE5C,KAAK,UAAU,WAAW,CAAC,EAAiB,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,EAAE;IAC1E,MAAM,eAAe,GAAqB,UAAkB,CAAC,eAAe,CAAA;IAC5E,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;QACzB,MAAM,IAAI,wBAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,CAAC,CAAA;KACxE;IACD,IAAI,eAAe,CAAC,MAAM,KAAK,wBAAY,EAAE;QACzC,OAAM;KACT;IACD,MAAM,MAAM,GAAG,MAAM,IAAA,wBAAgB,EAAC,EAAE,CAAC,CAAA;IACzC,MAAM,KAAK,GAAG,MAAM,IAAA,uBAAgB,EAAC,eAAe,CAAC,KAAK,CAAC,CAAA;IAC3D,MAAM,IAAI,GAAG;QACT,MAAM;QACN,IAAI,EAAE,4BAAgB;QACtB,OAAO;QACP,OAAO;QACP,YAAY,EAAE,eAAe,CAAC,OAAO,EAAE,EAAE;QACzC,OAAO,EAAE,eAAe,CAAC,OAAO,EAAE,IAAI;QACtC,OAAO,EAAE,KAAK,CAAC,EAAE;KACpB,CAAA;IACD,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,cAAc,EAAE,IAAI,CAAC,CAAA;AACxD,CAAC;AApBD,kCAoBC;AAEM,KAAK,UAAU,YAAY,CAAC,OAA2B;IAC1D,MAAM,eAAe,GAAqB,UAAkB,CAAC,eAAe,CAAA;IAC5E,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;QACzB,MAAM,IAAI,wBAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,CAAC,CAAA;KACxE;IACD,IAAI,eAAe,CAAC,MAAM,KAAK,wBAAY,EAAE;QACzC,OAAM;KACT;IAED,MAAM,IAAI,GAAG;QACT,OAAO;QACP,MAAM,EAAE,OAAO,CAAC,eAAe;QAC/B,YAAY,EAAE,eAAe,CAAC,OAAO,EAAE,EAAE;QACzC,OAAO,EAAE,eAAe,CAAC,OAAO,EAAE,IAAI;KACzC,CAAA;IACD,MAAM,IAAA,0BAAe,EAAC,mBAAO,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAA;AAC5D,CAAC;AAhBD,oCAgBC","sourcesContent":["import { TransactionReceipt } from \"@ethersproject/providers\"\nimport { API_URL, TEST_API_KEY, TRANSACTION_TYPE } from \"../common/constants\"\nimport { GlobalEnvOption } from \"../config\"\nimport { UserOperation, getChainFromData } from \"../data\"\nimport { DataFormatError } from \"../errors\"\nimport { getPromiseFromOp } from \"../utils\"\nimport { sendPostRequest } from \"../utils/ApiUtils\"\n\nexport async function storeUserOp(op: UserOperation, balance = 0, receipt = {}) {\n    const globalEnvOption: GlobalEnvOption = (globalThis as any).globalEnvOption\n    if (!globalEnvOption.apiKey) {\n        throw new DataFormatError(\"apiKey\", \"string\", \"configureEnvironment\")\n    }\n    if (globalEnvOption.apiKey === TEST_API_KEY) {\n        return\n    }\n    const userOp = await getPromiseFromOp(op)\n    const chain = await getChainFromData(globalEnvOption.chain)\n    const body = {\n        userOp,\n        type: TRANSACTION_TYPE,\n        balance,\n        receipt,\n        organization: globalEnvOption.orgInfo?.id,\n        orgName: globalEnvOption.orgInfo?.name,\n        chainId: chain.id\n    }\n    await sendPostRequest(API_URL, \"save-user-op\", body)\n}\n\nexport async function storeEVMCall(receipt: TransactionReceipt) {\n    const globalEnvOption: GlobalEnvOption = (globalThis as any).globalEnvOption\n    if (!globalEnvOption.apiKey) {\n        throw new DataFormatError(\"apiKey\", \"string\", \"configureEnvironment\")\n    }\n    if (globalEnvOption.apiKey === TEST_API_KEY) {\n        return\n    }\n\n    const body = {\n        receipt,\n        txHash: receipt.transactionHash,\n        organization: globalEnvOption.orgInfo?.id,\n        orgName: globalEnvOption.orgInfo?.name\n    }\n    await sendPostRequest(API_URL, \"save-evm-receipt\", body)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c2c62f83e086ca1d2ebba84e39c9aa3cdedd27c3","contentHash":"20513fd44a54b7fc0dbb39d94ddf7b50fedd07487c5b2ce3c397662c5c5ec81f"},"/Users/albertsu/Desktop/sdk/src/data/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":49}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":40}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":10,"2":10,"3":10,"4":10,"5":10,"6":23,"7":10,"8":0,"9":0,"10":0,"11":1,"12":7,"13":10,"14":10,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":10,"1":23,"2":0,"3":7},"b":{"0":[1,1,1],"1":[1,0],"2":[10,0],"3":[10,0],"4":[10,10],"5":[0,10],"6":[10,0],"7":[0,0],"8":[1,1,1],"9":[10,0],"10":[10,10]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,0CAAuB;AACvB,0CAAuB;AACvB,2CAAwB;AACxB,qDAAkC;AAClC,iDAA8B;AAC9B,wCAAqB;AACrB,0CAAuB","sourcesContent":["export * from \"./Chain\"\nexport * from \"./Token\"\nexport * from \"./UserOp\"\nexport * from \"./WalletIdentifier\"\nexport * from \"./SolidityData\"\nexport * from \"./NFT\"\nexport * from \"./types\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ecc194945b27db3a0b44bf2e93e9bfe8e57bf9c7","contentHash":"8dacf907eb9b347f609238827a1c115550141b14c4ea09be993e8808dc842512"},"/Users/albertsu/Desktop/sdk/src/data/Chain.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/Chain.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":33}},"9":{"start":{"line":12,"column":20},"end":{"line":12,"column":50}},"10":{"start":{"line":13,"column":17},"end":{"line":13,"column":37}},"11":{"start":{"line":14,"column":18},"end":{"line":14,"column":47}},"12":{"start":{"line":15,"column":20},"end":{"line":15,"column":49}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":28}},"14":{"start":{"line":19,"column":8},"end":{"line":30,"column":9}},"15":{"start":{"line":20,"column":12},"end":{"line":20,"column":46}},"16":{"start":{"line":22,"column":13},"end":{"line":30,"column":9}},"17":{"start":{"line":23,"column":12},"end":{"line":23,"column":44}},"18":{"start":{"line":25,"column":13},"end":{"line":30,"column":9}},"19":{"start":{"line":26,"column":12},"end":{"line":26,"column":50}},"20":{"start":{"line":28,"column":13},"end":{"line":30,"column":9}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":52}},"22":{"start":{"line":33,"column":8},"end":{"line":48,"column":9}},"23":{"start":{"line":34,"column":12},"end":{"line":34,"column":62}},"24":{"start":{"line":36,"column":13},"end":{"line":48,"column":9}},"25":{"start":{"line":37,"column":12},"end":{"line":37,"column":53}},"26":{"start":{"line":39,"column":13},"end":{"line":48,"column":9}},"27":{"start":{"line":40,"column":12},"end":{"line":40,"column":38}},"28":{"start":{"line":41,"column":32},"end":{"line":41,"column":64}},"29":{"start":{"line":42,"column":12},"end":{"line":42,"column":57}},"30":{"start":{"line":44,"column":13},"end":{"line":48,"column":9}},"31":{"start":{"line":45,"column":35},"end":{"line":45,"column":86}},"32":{"start":{"line":46,"column":12},"end":{"line":46,"column":53}},"33":{"start":{"line":47,"column":12},"end":{"line":47,"column":37}},"34":{"start":{"line":49,"column":8},"end":{"line":54,"column":9}},"35":{"start":{"line":50,"column":12},"end":{"line":50,"column":37}},"36":{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},"37":{"start":{"line":56,"column":12},"end":{"line":56,"column":38}},"38":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"39":{"start":{"line":64,"column":12},"end":{"line":64,"column":73}},"40":{"start":{"line":68,"column":8},"end":{"line":77,"column":9}},"41":{"start":{"line":69,"column":12},"end":{"line":74,"column":13}},"42":{"start":{"line":70,"column":40},"end":{"line":70,"column":59}},"43":{"start":{"line":71,"column":42},"end":{"line":71,"column":113}},"44":{"start":{"line":72,"column":31},"end":{"line":72,"column":124}},"45":{"start":{"line":73,"column":16},"end":{"line":73,"column":82}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":109}},"47":{"start":{"line":76,"column":12},"end":{"line":76,"column":49}},"48":{"start":{"line":81,"column":8},"end":{"line":97,"column":9}},"49":{"start":{"line":82,"column":12},"end":{"line":91,"column":13}},"50":{"start":{"line":83,"column":16},"end":{"line":83,"column":64}},"51":{"start":{"line":84,"column":16},"end":{"line":84,"column":38}},"52":{"start":{"line":85,"column":16},"end":{"line":85,"column":38}},"53":{"start":{"line":86,"column":16},"end":{"line":86,"column":47}},"54":{"start":{"line":87,"column":38},"end":{"line":87,"column":73}},"55":{"start":{"line":88,"column":34},"end":{"line":88,"column":126}},"56":{"start":{"line":89,"column":16},"end":{"line":89,"column":78}},"57":{"start":{"line":90,"column":16},"end":{"line":90,"column":39}},"58":{"start":{"line":94,"column":27},"end":{"line":94,"column":84}},"59":{"start":{"line":95,"column":12},"end":{"line":95,"column":72}},"60":{"start":{"line":96,"column":12},"end":{"line":96,"column":99}},"61":{"start":{"line":100,"column":8},"end":{"line":100,"column":26}},"62":{"start":{"line":101,"column":20},"end":{"line":101,"column":40}},"63":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"64":{"start":{"line":103,"column":36},"end":{"line":103,"column":54}},"65":{"start":{"line":104,"column":38},"end":{"line":104,"column":65}},"66":{"start":{"line":105,"column":27},"end":{"line":105,"column":120}},"67":{"start":{"line":106,"column":12},"end":{"line":106,"column":78}},"68":{"start":{"line":108,"column":8},"end":{"line":108,"column":19}},"69":{"start":{"line":111,"column":8},"end":{"line":111,"column":26}},"70":{"start":{"line":112,"column":8},"end":{"line":112,"column":62}},"71":{"start":{"line":115,"column":8},"end":{"line":115,"column":26}},"72":{"start":{"line":116,"column":28},"end":{"line":116,"column":60}},"73":{"start":{"line":117,"column":8},"end":{"line":117,"column":34}},"74":{"start":{"line":120,"column":8},"end":{"line":120,"column":26}},"75":{"start":{"line":121,"column":8},"end":{"line":121,"column":23}},"76":{"start":{"line":124,"column":8},"end":{"line":124,"column":26}},"77":{"start":{"line":125,"column":8},"end":{"line":125,"column":29}},"78":{"start":{"line":128,"column":8},"end":{"line":129,"column":32}},"79":{"start":{"line":129,"column":12},"end":{"line":129,"column":32}},"80":{"start":{"line":130,"column":8},"end":{"line":130,"column":39}},"81":{"start":{"line":133,"column":8},"end":{"line":133,"column":26}},"82":{"start":{"line":134,"column":8},"end":{"line":134,"column":62}},"83":{"start":{"line":137,"column":25},"end":{"line":137,"column":49}},"84":{"start":{"line":138,"column":35},"end":{"line":138,"column":128}},"85":{"start":{"line":139,"column":19},"end":{"line":139,"column":110}},"86":{"start":{"line":140,"column":8},"end":{"line":140,"column":48}},"87":{"start":{"line":143,"column":8},"end":{"line":143,"column":26}},"88":{"start":{"line":144,"column":8},"end":{"line":144,"column":48}},"89":{"start":{"line":147,"column":8},"end":{"line":147,"column":26}},"90":{"start":{"line":148,"column":20},"end":{"line":148,"column":67}},"91":{"start":{"line":149,"column":39},"end":{"line":149,"column":42}},"92":{"start":{"line":150,"column":51},"end":{"line":150,"column":54}},"93":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"94":{"start":{"line":152,"column":12},"end":{"line":152,"column":49}},"95":{"start":{"line":154,"column":8},"end":{"line":154,"column":55}},"96":{"start":{"line":155,"column":8},"end":{"line":155,"column":64}},"97":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"98":{"start":{"line":157,"column":12},"end":{"line":157,"column":56}},"99":{"start":{"line":159,"column":8},"end":{"line":159,"column":74}},"100":{"start":{"line":162,"column":30},"end":{"line":173,"column":9}},"101":{"start":{"line":174,"column":8},"end":{"line":179,"column":11}},"102":{"start":{"line":175,"column":31},"end":{"line":175,"column":65}},"103":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"104":{"start":{"line":177,"column":16},"end":{"line":177,"column":49}},"105":{"start":{"line":182,"column":24},"end":{"line":182,"column":71}},"106":{"start":{"line":183,"column":24},"end":{"line":183,"column":26}},"107":{"start":{"line":184,"column":8},"end":{"line":190,"column":9}},"108":{"start":{"line":185,"column":12},"end":{"line":185,"column":58}},"109":{"start":{"line":188,"column":12},"end":{"line":188,"column":72}},"110":{"start":{"line":189,"column":12},"end":{"line":189,"column":22}},"111":{"start":{"line":191,"column":26},"end":{"line":191,"column":28}},"112":{"start":{"line":192,"column":8},"end":{"line":213,"column":9}},"113":{"start":{"line":193,"column":29},"end":{"line":193,"column":67}},"114":{"start":{"line":194,"column":30},"end":{"line":194,"column":32}},"115":{"start":{"line":195,"column":12},"end":{"line":201,"column":13}},"116":{"start":{"line":196,"column":16},"end":{"line":196,"column":74}},"117":{"start":{"line":199,"column":16},"end":{"line":199,"column":72}},"118":{"start":{"line":200,"column":16},"end":{"line":200,"column":25}},"119":{"start":{"line":203,"column":12},"end":{"line":209,"column":13}},"120":{"start":{"line":204,"column":16},"end":{"line":204,"column":54}},"121":{"start":{"line":207,"column":16},"end":{"line":207,"column":85}},"122":{"start":{"line":208,"column":16},"end":{"line":208,"column":25}},"123":{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},"124":{"start":{"line":211,"column":16},"end":{"line":211,"column":77}},"125":{"start":{"line":214,"column":8},"end":{"line":214,"column":25}},"126":{"start":{"line":217,"column":0},"end":{"line":217,"column":22}},"127":{"start":{"line":218,"column":25},"end":{"line":222,"column":1}},"128":{"start":{"line":219,"column":21},"end":{"line":219,"column":57}},"129":{"start":{"line":220,"column":17},"end":{"line":220,"column":62}},"130":{"start":{"line":221,"column":4},"end":{"line":221,"column":42}},"131":{"start":{"line":223,"column":25},"end":{"line":240,"column":1}},"132":{"start":{"line":224,"column":4},"end":{"line":227,"column":5}},"133":{"start":{"line":225,"column":23},"end":{"line":225,"column":110}},"134":{"start":{"line":226,"column":8},"end":{"line":226,"column":83}},"135":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"136":{"start":{"line":229,"column":8},"end":{"line":229,"column":31}},"137":{"start":{"line":231,"column":4},"end":{"line":238,"column":5}},"138":{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},"139":{"start":{"line":233,"column":12},"end":{"line":233,"column":62}},"140":{"start":{"line":236,"column":12},"end":{"line":236,"column":58}},"141":{"start":{"line":239,"column":4},"end":{"line":239,"column":53}},"142":{"start":{"line":241,"column":0},"end":{"line":241,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":28},"end":{"line":31,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":17},"end":{"line":61,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":25},"end":{"line":66,"column":5}},"line":62},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":24},"end":{"line":78,"column":5}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":33},"end":{"line":98,"column":5}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":27},"end":{"line":109,"column":5}},"line":99},"7":{"name":"(anonymous_7)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":35},"end":{"line":113,"column":5}},"line":110},"8":{"name":"(anonymous_8)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":29},"end":{"line":118,"column":5}},"line":114},"9":{"name":"(anonymous_9)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":23},"end":{"line":122,"column":5}},"line":119},"10":{"name":"(anonymous_10)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":24},"end":{"line":126,"column":5}},"line":123},"11":{"name":"(anonymous_11)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":30},"end":{"line":131,"column":5}},"line":127},"12":{"name":"(anonymous_12)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":34},"end":{"line":135,"column":5}},"line":132},"13":{"name":"(anonymous_13)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":45},"end":{"line":141,"column":5}},"line":136},"14":{"name":"(anonymous_14)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":23},"end":{"line":145,"column":5}},"line":142},"15":{"name":"(anonymous_15)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":35},"end":{"line":160,"column":5}},"line":146},"16":{"name":"(anonymous_16)","decl":{"start":{"line":161,"column":4},"end":{"line":161,"column":5}},"loc":{"start":{"line":161,"column":22},"end":{"line":180,"column":5}},"line":161},"17":{"name":"(anonymous_17)","decl":{"start":{"line":174,"column":43},"end":{"line":174,"column":44}},"loc":{"start":{"line":174,"column":52},"end":{"line":179,"column":9}},"line":174},"18":{"name":"(anonymous_18)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":35},"end":{"line":215,"column":5}},"line":181},"19":{"name":"(anonymous_19)","decl":{"start":{"line":218,"column":25},"end":{"line":218,"column":26}},"loc":{"start":{"line":218,"column":40},"end":{"line":222,"column":1}},"line":218},"20":{"name":"(anonymous_20)","decl":{"start":{"line":223,"column":25},"end":{"line":223,"column":26}},"loc":{"start":{"line":223,"column":52},"end":{"line":240,"column":1}},"line":223}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":19,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":30,"column":9}},{"start":{"line":19,"column":8},"end":{"line":30,"column":9}}],"line":19},"4":{"loc":{"start":{"line":22,"column":13},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":13},"end":{"line":30,"column":9}},{"start":{"line":22,"column":13},"end":{"line":30,"column":9}}],"line":22},"5":{"loc":{"start":{"line":25,"column":13},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":13},"end":{"line":30,"column":9}},{"start":{"line":25,"column":13},"end":{"line":30,"column":9}}],"line":25},"6":{"loc":{"start":{"line":28,"column":13},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":13},"end":{"line":30,"column":9}},{"start":{"line":28,"column":13},"end":{"line":30,"column":9}}],"line":28},"7":{"loc":{"start":{"line":33,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":48,"column":9}},{"start":{"line":33,"column":8},"end":{"line":48,"column":9}}],"line":33},"8":{"loc":{"start":{"line":36,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":13},"end":{"line":48,"column":9}},{"start":{"line":36,"column":13},"end":{"line":48,"column":9}}],"line":36},"9":{"loc":{"start":{"line":39,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":48,"column":9}},{"start":{"line":39,"column":13},"end":{"line":48,"column":9}}],"line":39},"10":{"loc":{"start":{"line":44,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":48,"column":9}},{"start":{"line":44,"column":13},"end":{"line":48,"column":9}}],"line":44},"11":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{"line":63,"column":8},"end":{"line":65,"column":9}}],"line":63},"12":{"loc":{"start":{"line":68,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":77,"column":9}},{"start":{"line":68,"column":8},"end":{"line":77,"column":9}}],"line":68},"13":{"loc":{"start":{"line":69,"column":12},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":74,"column":13}},{"start":{"line":69,"column":12},"end":{"line":74,"column":13}}],"line":69},"14":{"loc":{"start":{"line":69,"column":16},"end":{"line":69,"column":100}},"type":"binary-expr","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":24}},{"start":{"line":69,"column":28},"end":{"line":69,"column":44}},{"start":{"line":69,"column":48},"end":{"line":69,"column":63}},{"start":{"line":69,"column":67},"end":{"line":69,"column":100}}],"line":69},"15":{"loc":{"start":{"line":82,"column":12},"end":{"line":91,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":91,"column":13}},{"start":{"line":82,"column":12},"end":{"line":91,"column":13}}],"line":82},"16":{"loc":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},{"start":{"line":102,"column":8},"end":{"line":107,"column":9}}],"line":102},"17":{"loc":{"start":{"line":128,"column":8},"end":{"line":129,"column":32}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":129,"column":32}},{"start":{"line":128,"column":8},"end":{"line":129,"column":32}}],"line":128},"18":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{"line":151,"column":8},"end":{"line":153,"column":9}}],"line":151},"19":{"loc":{"start":{"line":151,"column":14},"end":{"line":151,"column":72}},"type":"binary-expr","locations":[{"start":{"line":151,"column":14},"end":{"line":151,"column":32}},{"start":{"line":151,"column":36},"end":{"line":151,"column":56}},{"start":{"line":151,"column":60},"end":{"line":151,"column":72}}],"line":151},"20":{"loc":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},{"start":{"line":156,"column":8},"end":{"line":158,"column":9}}],"line":156},"21":{"loc":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},{"start":{"line":176,"column":12},"end":{"line":178,"column":13}}],"line":176},"22":{"loc":{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},"type":"if","locations":[{"start":{"line":210,"column":12},"end":{"line":212,"column":13}},{"start":{"line":210,"column":12},"end":{"line":212,"column":13}}],"line":210},"23":{"loc":{"start":{"line":210,"column":16},"end":{"line":210,"column":71}},"type":"binary-expr","locations":[{"start":{"line":210,"column":16},"end":{"line":210,"column":37}},{"start":{"line":210,"column":41},"end":{"line":210,"column":71}}],"line":210},"24":{"loc":{"start":{"line":224,"column":4},"end":{"line":227,"column":5}},"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":227,"column":5}},{"start":{"line":224,"column":4},"end":{"line":227,"column":5}}],"line":224},"25":{"loc":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},{"start":{"line":228,"column":4},"end":{"line":230,"column":5}}],"line":228},"26":{"loc":{"start":{"line":231,"column":4},"end":{"line":238,"column":5}},"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":238,"column":5}},{"start":{"line":231,"column":4},"end":{"line":238,"column":5}}],"line":231},"27":{"loc":{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":237,"column":9}},{"start":{"line":232,"column":8},"end":{"line":237,"column":9}}],"line":232}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":6,"14":6,"15":0,"16":6,"17":0,"18":6,"19":6,"20":0,"21":0,"22":20,"23":0,"24":20,"25":20,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":20,"35":20,"36":20,"37":20,"38":20,"39":5,"40":20,"41":5,"42":0,"43":0,"44":0,"45":0,"46":5,"47":5,"48":20,"49":20,"50":5,"51":5,"52":5,"53":5,"54":5,"55":5,"56":5,"57":5,"58":0,"59":0,"60":0,"61":10,"62":10,"63":10,"64":0,"65":0,"66":0,"67":0,"68":10,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":10,"77":10,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":5,"101":5,"102":50,"103":50,"104":0,"105":5,"106":5,"107":5,"108":5,"109":0,"110":0,"111":5,"112":5,"113":80,"114":80,"115":80,"116":80,"117":0,"118":0,"119":80,"120":80,"121":0,"122":0,"123":80,"124":0,"125":5,"126":1,"127":1,"128":0,"129":0,"130":0,"131":1,"132":13,"133":0,"134":0,"135":13,"136":7,"137":6,"138":0,"139":0,"140":0,"141":6,"142":1},"f":{"0":2,"1":6,"2":20,"3":20,"4":20,"5":20,"6":10,"7":0,"8":0,"9":0,"10":10,"11":0,"12":0,"13":0,"14":0,"15":0,"16":5,"17":50,"18":5,"19":0,"20":13},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,6],"4":[0,6],"5":[6,0],"6":[0,0],"7":[0,20],"8":[20,0],"9":[0,0],"10":[0,0],"11":[5,15],"12":[5,15],"13":[0,5],"14":[5,5,5,5],"15":[5,15],"16":[0,10],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,50],"22":[0,80],"23":[80,0],"24":[0,13],"25":[7,6],"26":[0,6],"27":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/Chain.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/Chain.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAmB;AACnB,gDAAuB;AACvB,wDAAwF;AACxF,mCAAoD;AAEpD,kCAAqD;AAErD,mDAAoD;AACpD,sCAAiF;AACjF,gDAA4C;AAC5C,kDAA+C;AAE/C,MAAa,KAAK;IAYd,YAAY,UAAsB;QAHlC,cAAS,GAAc,EAAE,CAAA;QAIrB,IAAI,UAAU,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAA;SACpC;aAAM,IAAI,UAAU,CAAC,MAAM,EAAE;YAC1B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAA;SAClC;aAAM,IAAI,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAA;SACxC;aAAM,IAAI,UAAU,CAAC,UAAU,EAAE;YAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAA;SAC1C;IACL,CAAC;IAED,KAAK,CAAC,IAAI;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAA;SACpD;aAAM,IAAI,IAAI,CAAC,SAAS,EAAE;YACvB,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SAC3C;aAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,MAAM,IAAI,CAAC,YAAY,EAAE,CAAA;YACzB,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,CAAC,QAAS,CAAC,UAAU,EAAE,CAAA;YACrD,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAA;SAC/C;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YACxB,MAAM,cAAc,GAAG,MAAM,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YAChE,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAA;YACxC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAA;SAC3B;QAED,IAAI;YACA,MAAM,IAAI,CAAC,WAAW,EAAE,CAAA;SAC3B;QAAC,MAAM;YACJ,SAAS;SACZ;QAED,IAAI;YACA,MAAM,IAAI,CAAC,YAAY,EAAE,CAAA;SAC5B;QAAC,MAAM;YACJ,SAAS;SACZ;IACL,CAAC;IAED,KAAK,CAAC,YAAY;QACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,2BAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACnD;IACL,CAAC;IAED,KAAK,CAAC,WAAW;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;gBACtF,MAAM,eAAe,GAAG,mBAAmB,CAAA;gBAC3C,MAAM,iBAAiB,GAAG,uEAAuE,CAAA;gBACjG,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,GAAG,eAAe,6BAA6B,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAA;gBACnG,MAAM,IAAI,8BAAqB,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;aAC3D;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAA;YACtF,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAA;SACvC;IACL,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAe;QAC/B,IAAI,KAAK,CAAA;QACT,IAAI;YACA,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;gBACV,KAAK,GAAG,MAAM,IAAA,mBAAY,EAAC,OAAO,CAAC,CAAA;gBACnC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAA;gBACrB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAA;gBACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;gBAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;gBACzD,MAAM,SAAS,GAAG,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,IAAA,sBAAU,EAAC,KAAK,CAAC,eAAe,CAAC,EAAE,GAAG,aAAa,EAAE,CAAA;gBAC7F,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,CAAA;gBAC7D,IAAI,CAAC,eAAe,EAAE,CAAA;aACzB;SACJ;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,cAAc,EAAE,KAAK,EAAE,aAAa,CAAC,CAAA;YAC/D,MAAM,CAAC,WAAW,CAAC,oBAAoB,OAAO,YAAY,CAAC,CAAA;YAE3D,MAAM,IAAI,+BAAsB,CAAC,qBAAqB,EAAE,YAAY,EAAE,MAAM,CAAC,CAAA;SAChF;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAY;QACzB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,GAAG,GAAG,IAAI,CAAC,SAAU,CAAC,IAAI,CAAC,CAAA;QACjC,IAAI,CAAC,GAAG,EAAE;YACN,MAAM,eAAe,GAAG,kBAAkB,CAAA;YAC1C,MAAM,iBAAiB,GAAG,2BAA2B,CAAA;YACrD,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,GAAG,eAAe,6BAA6B,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAA;YACnG,MAAM,IAAI,8BAAqB,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;SAC3D;QACD,OAAO,GAAG,CAAA;IACd,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,IAAY;QACjC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,OAAO,MAAM,IAAA,oBAAa,EAAC,IAAI,EAAE,IAAI,CAAC,EAAG,CAAC,CAAA;IAC9C,CAAC;IAED,KAAK,CAAC,gBAAgB;QAClB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,CAAC,QAAS,CAAC,UAAU,EAAE,CAAA;QACrD,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAA;IAC7B,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,OAAO,IAAI,CAAC,EAAG,CAAA;IACnB,CAAC;IAED,KAAK,CAAC,WAAW;QACb,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,OAAO,IAAI,CAAC,QAAS,CAAA;IACzB,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,OAAe;QACpC,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAA;QACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAA;IAClC,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,MAAqB;QACvC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,OAAO,MAAM,IAAI,CAAC,OAAQ,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA;IAC1D,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAqB,EAAE,MAAc;QAC1D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAA;QACzC,MAAM,kBAAkB,GAAG,IAAI,iBAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,0BAAc,EAAE,QAAQ,CAAC,CAAA;QACnG,MAAM,EAAE,GAAG,MAAM,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,MAAM,CAAC,UAAU,EAAE,CAAC,CAAA;QACtG,OAAO,MAAM,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAA;IAC3C,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,OAAO,MAAM,IAAI,CAAC,QAAS,CAAC,UAAU,EAAE,CAAA;IAC5C,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,SAAwB;QACxC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;QAC5D,IAAI,EAAE,oBAAoB,EAAE,GAAG,GAAG,CAAA;QAClC,IAAI,EAAE,kBAAkB,EAAE,YAAY,EAAE,GAAG,GAAG,CAAA;QAC9C,IAAI,CAAC,CAAC,kBAAkB,IAAI,oBAAoB,IAAI,YAAY,CAAC,EAAE;YAC/D,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAA;SACvC;QAED,kBAAkB,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QAC9C,oBAAoB,GAAG,oBAAoB,CAAC,GAAG,CAAC,MAAO,CAAC,CAAA;QACxD,IAAI,SAAS,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC7B,YAAY,GAAG,kBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACrC;QACD,OAAO,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,YAAY,EAAE,CAAA;IACrE,CAAC;IAED,eAAe;QACX,MAAM,aAAa,GAAG;YAClB,sBAAsB,EAAE,cAAc;YACtC,qBAAqB,EAAE,gBAAgB;YACvC,gBAAgB,EAAE,gBAAgB;YAClC,qBAAqB,EAAE,kBAAkB;YACzC,mBAAmB,EAAE,gBAAgB;YACrC,MAAM,EAAE,kBAAkB;YAC1B,iBAAiB,EAAE,YAAY;YAC/B,cAAc,EAAE,kBAAkB;YAClC,SAAS,EAAE,kBAAkB;YAC7B,mBAAmB,EAAE,oBAAoB;SAC5C,CAAA;QAED,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAA;YACrD,IAAI,UAAU,EAAE;gBACZ,IAAI,CAAC,SAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAA;aACpC;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAEO,qBAAqB,CAAC,OAAe;QACzC,MAAM,OAAO,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;QACrD,IAAI,SAAS,GAAa,EAAE,CAAA;QAE5B,IAAI;YACA,SAAS,GAAG,YAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;SACtC;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,2BAA2B,OAAO,KAAK,GAAG,EAAE,CAAC,CAAA;YAC3D,OAAO,EAAE,CAAA;SACZ;QAED,MAAM,SAAS,GAA8B,EAAE,CAAA;QAE/C,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAC9B,MAAM,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;YAC7C,IAAI,WAAW,GAAG,EAAE,CAAA;YAEpB,IAAI;gBACA,WAAW,GAAG,YAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;aAClD;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,sBAAsB,QAAQ,KAAK,GAAG,EAAE,CAAC,CAAA;gBACvD,SAAQ;aACX;YAED,IAAI,WAAW,CAAA;YAEf,IAAI;gBACA,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;aACxC;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,mCAAmC,QAAQ,KAAK,GAAG,EAAE,CAAC,CAAA;gBACpE,SAAQ;aACX;YAED,IAAI,WAAW,CAAC,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBACzD,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;aAC/D;SACJ;QACD,OAAO,SAAS,CAAA;IACpB,CAAC;CACJ;AAjOD,sBAiOC;AAED,MAAM,gBAAgB,GAAG,KAAK,EAAE,GAAW,EAAE,EAAE;IAC3C,MAAM,QAAQ,GAAG,IAAI,2BAAe,CAAC,GAAG,CAAC,CAAA;IACzC,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAA;IAC1D,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;AACzC,CAAC,CAAA;AAEM,MAAM,gBAAgB,GAAG,KAAK,EAAE,eAAgC,EAAkB,EAAE;IACvF,IAAI,CAAC,eAAe,EAAE;QAClB,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,kBAAkB,EAAE,eAAe,EAAE,6BAA6B,CAAC,CAAA;QAC7F,MAAM,IAAI,8BAAqB,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAA;KACpE;IACD,IAAI,eAAe,YAAY,KAAK,EAAE;QAClC,OAAO,eAAe,CAAA;KACzB;IAED,IAAI,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QACrC,IAAI,MAAM,gBAAgB,CAAC,eAAe,CAAC,EAAE;YACzC,OAAO,IAAI,KAAK,CAAC,EAAE,UAAU,EAAE,eAAe,EAAE,CAAC,CAAA;SACpD;aAAM;YACH,OAAO,IAAI,KAAK,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,CAAA;SAChD;KACJ;IACD,OAAO,IAAI,KAAK,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC,CAAA;AACpD,CAAC,CAAA;AAjBY,QAAA,gBAAgB,oBAiB5B","sourcesContent":["import fs from \"fs\"\nimport path from \"path\"\nimport { FeeData, JsonRpcProvider, TransactionResponse } from \"@ethersproject/providers\"\nimport { BigNumber, Contract, Signer } from \"ethers\"\nimport { Addresses, ChainInput, UserOperation } from \"./types\"\nimport { getChainInfo, getModuleInfo } from \"../apis\"\nimport { EstimateGasResult } from \"../common\"\nimport { ENTRYPOINT_ABI } from \"../common/constants\"\nimport { Helper, MissingParameterError, ServerMissingDataError } from \"../errors\"\nimport { Bundler } from \"../servers/Bundler\"\nimport { flattenObj } from \"../utils/DataUtils\"\n\nexport class Chain {\n    chainId?: string\n    rpcUrl?: string\n    chainName?: string\n    bundlerUrl?: string\n    provider?: JsonRpcProvider\n    bundler?: Bundler\n    id?: string\n    name?: string\n    addresses: Addresses = {}\n    currency?: string\n\n    constructor(chainInput: ChainInput) {\n        if (chainInput.chainId) {\n            this.chainId = chainInput.chainId\n        } else if (chainInput.rpcUrl) {\n            this.rpcUrl = chainInput.rpcUrl\n        } else if (chainInput.chainName) {\n            this.chainName = chainInput.chainName\n        } else if (chainInput.bundlerUrl) {\n            this.bundlerUrl = chainInput.bundlerUrl\n        }\n    }\n\n    async init() {\n        if (this.chainId) {\n            await this.loadChainData(this.chainId.toString())\n        } else if (this.chainName) {\n            await this.loadChainData(this.chainName)\n        } else if (this.rpcUrl) {\n            await this.loadProvider()\n            const { chainId } = await this.provider!.getNetwork()\n            await this.loadChainData(chainId.toString())\n        } else if (this.bundlerUrl) {\n            const bundlerChainId = await Bundler.getChainId(this.bundlerUrl)\n            await this.loadChainData(bundlerChainId)\n            await this.loadBundler()\n        }\n\n        try {\n            await this.loadBundler()\n        } catch {\n            // ignore\n        }\n\n        try {\n            await this.loadProvider()\n        } catch {\n            // ignore\n        }\n    }\n\n    async loadProvider() {\n        if (!this.provider) {\n            this.provider = new JsonRpcProvider(this.rpcUrl)\n        }\n    }\n\n    async loadBundler() {\n        if (!this.bundler) {\n            if (!this.id || !this.bundlerUrl || !this.addresses || !this.addresses.entryPointAddress) {\n                const currentLocation = \"Chain.loadBundler\"\n                const helperMainMessage = \"{id,bundlerUrl,addresses, or addresses.entryPointAddress} are missing\"\n                const helper = new Helper(`${currentLocation} was given these parameters`, this, helperMainMessage)\n                throw new MissingParameterError(currentLocation, helper)\n            }\n            this.bundler = new Bundler(this.id, this.bundlerUrl, this.addresses.entryPointAddress)\n            await this.bundler.validateChainId()\n        }\n    }\n\n    async loadChainData(chainId: string) {\n        let chain\n        try {\n            if (!this.id) {\n                chain = await getChainInfo(chainId)\n                this.id = chain.chain\n                this.name = chain.key\n                this.currency = chain.currency\n                const abisAddresses = this.loadAddressesFromAbis(chainId)\n                const addresses = { ...chain.aaData, ...flattenObj(chain.moduleAddresses), ...abisAddresses }\n                Object.assign(this, { ...this, addresses, ...chain.rpcdata })\n                this.modifyAddresses()\n            }\n        } catch (e) {\n            const helper = new Helper(\"getChainInfo\", chain, \"call failed\")\n            helper.pushMessage(`Chain identifier ${chainId} not found`)\n\n            throw new ServerMissingDataError(\"Chain.loadChainData\", \"DataServer\", helper)\n        }\n    }\n\n    async getAddress(name: string): Promise<string> {\n        await this.init()\n        const res = this.addresses![name]\n        if (!res) {\n            const currentLocation = \"Chain.getAddress\"\n            const helperMainMessage = \"Search key does not exist\"\n            const helper = new Helper(`${currentLocation} was given these parameters`, name, helperMainMessage)\n            throw new MissingParameterError(currentLocation, helper)\n        }\n        return res\n    }\n\n    async getModuleAddresses(name: string): Promise<string[]> {\n        await this.init()\n        return await getModuleInfo(name, this.id!)\n    }\n\n    async getActualChainId(): Promise<string> {\n        await this.init()\n        const { chainId } = await this.provider!.getNetwork()\n        return chainId.toString()\n    }\n\n    async getChainId(): Promise<string> {\n        await this.init()\n        return this.id!\n    }\n\n    async getProvider(): Promise<JsonRpcProvider> {\n        await this.init()\n        return this.provider!\n    }\n\n    setAddress(name: string, address: string) {\n        if (!this.addresses) this.addresses = {}\n        this.addresses[name] = address\n    }\n\n    async sendOpToBundler(userOp: UserOperation): Promise<string> {\n        await this.init()\n        return await this.bundler!.sendUserOpToBundler(userOp)\n    }\n\n    async sendOpToEntryPoint(userOp: UserOperation, signer: Signer): Promise<TransactionResponse> {\n        const provider = await this.getProvider()\n        const entrypointContract = new Contract(this.addresses.entryPointAddress, ENTRYPOINT_ABI, provider)\n        const tx = await entrypointContract.populateTransaction.handleOps([userOp], await signer.getAddress())\n        return await signer.sendTransaction(tx)\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        await this.init()\n        return await this.provider!.getFeeData()\n    }\n\n    async estimateOpGas(partialOp: UserOperation): Promise<EstimateGasResult> {\n        await this.init()\n        const res = await this.bundler!.estimateUserOpGas(partialOp)\n        let { verificationGasLimit } = res\n        let { preVerificationGas, callGasLimit } = res\n        if (!(preVerificationGas || verificationGasLimit || callGasLimit)) {\n            throw new Error(JSON.stringify(res))\n        }\n\n        preVerificationGas = preVerificationGas.mul(2)\n        verificationGasLimit = verificationGasLimit.add(100_000)\n        if (partialOp.initCode !== \"0x\") {\n            callGasLimit = BigNumber.from(5e6)\n        }\n        return { preVerificationGas, verificationGasLimit, callGasLimit }\n    }\n\n    modifyAddresses() {\n        const modifications = {\n            eoaAaveWithdrawAddress: \"AaveWithdraw\",\n            approveAndExecAddress: \"ApproveAndExec\",\n            tokenSwapAddress: \"ApproveAndSwap\",\n            gaslessSponsorAddress: \"GaslessPaymaster\",\n            tokenSponsorAddress: \"TokenPaymaster\",\n            oracle: \"TokenPriceOracle\",\n            entryPointAddress: \"EntryPoint\",\n            factoryAddress: \"FunWalletFactory\",\n            feeOracle: \"FeePercentOracle\",\n            verificationAddress: \"UserAuthentication\"\n        }\n\n        Object.keys(modifications).forEach((key) => {\n            const newAddress = this.addresses[modifications[key]]\n            if (newAddress) {\n                this.addresses![key] = newAddress\n            }\n        })\n    }\n\n    private loadAddressesFromAbis(chainId: string): { [key: string]: string } {\n        const abisDir = path.resolve(__dirname, \"..\", \"abis\")\n        let fileNames: string[] = []\n\n        try {\n            fileNames = fs.readdirSync(abisDir)\n        } catch (err) {\n            console.error(`Error reading directory ${abisDir}: ${err}`)\n            return {}\n        }\n\n        const addresses: { [key: string]: string } = {}\n\n        for (const fileName of fileNames) {\n            const filePath = path.join(abisDir, fileName)\n            let fileContent = \"\"\n\n            try {\n                fileContent = fs.readFileSync(filePath, \"utf8\")\n            } catch (err) {\n                console.error(`Error reading file ${filePath}: ${err}`)\n                continue\n            }\n\n            let jsonContent\n\n            try {\n                jsonContent = JSON.parse(fileContent)\n            } catch (err) {\n                console.error(`Error parsing JSON content from ${filePath}: ${err}`)\n                continue\n            }\n\n            if (jsonContent.addresses && jsonContent.addresses[chainId]) {\n                addresses[jsonContent.name] = jsonContent.addresses[chainId]\n            }\n        }\n        return addresses\n    }\n}\n\nconst verifyBundlerUrl = async (url: string) => {\n    const provider = new JsonRpcProvider(url)\n    const data = await provider.send(\"web3_clientVersion\", [])\n    return data.indexOf(\"aa-bundler\") + 1\n}\n\nexport const getChainFromData = async (chainIdentifier?: string | Chain): Promise<Chain> => {\n    if (!chainIdentifier) {\n        const helper = new Helper(\"getChainFromData\", chainIdentifier, \"chainIdentifier is required\")\n        throw new MissingParameterError(\"Chain.getChainFromData\", helper)\n    }\n    if (chainIdentifier instanceof Chain) {\n        return chainIdentifier\n    }\n\n    if (chainIdentifier.indexOf(\"http\") + 1) {\n        if (await verifyBundlerUrl(chainIdentifier)) {\n            return new Chain({ bundlerUrl: chainIdentifier })\n        } else {\n            return new Chain({ rpcUrl: chainIdentifier })\n        }\n    }\n    return new Chain({ chainName: chainIdentifier })\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"166a81751e13067450eb7bbeff1bd2755732d37f","contentHash":"762633ef47a427ea2a19c7bcce84926eb2c57b8fc2aff2c134c10138dd9f2b79"},"/Users/albertsu/Desktop/sdk/src/servers/Bundler.ts":{"path":"/Users/albertsu/Desktop/sdk/src/servers/Bundler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":33}},"6":{"start":{"line":8,"column":20},"end":{"line":8,"column":50}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":20},"end":{"line":10,"column":49}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":37}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":51}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":152}},"13":{"start":{"line":21,"column":8},"end":{"line":28,"column":9}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":99}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":27}},"16":{"start":{"line":26,"column":27},"end":{"line":26,"column":102}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":101}},"18":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"19":{"start":{"line":30,"column":12},"end":{"line":30,"column":107}},"20":{"start":{"line":34,"column":31},"end":{"line":34,"column":105}},"21":{"start":{"line":35,"column":25},"end":{"line":35,"column":144}},"22":{"start":{"line":36,"column":8},"end":{"line":36,"column":24}},"23":{"start":{"line":39,"column":31},"end":{"line":39,"column":105}},"24":{"start":{"line":40,"column":20},"end":{"line":40,"column":137}},"25":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"26":{"start":{"line":42,"column":12},"end":{"line":42,"column":49}},"27":{"start":{"line":44,"column":8},"end":{"line":48,"column":10}},"28":{"start":{"line":51,"column":8},"end":{"line":51,"column":56}},"29":{"start":{"line":54,"column":0},"end":{"line":54,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":56},"end":{"line":17,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":28},"end":{"line":32,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":38},"end":{"line":37,"column":5}},"line":33},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":36},"end":{"line":49,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":40},"end":{"line":52,"column":5}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":151}},"type":"cond-expr","locations":[{"start":{"line":16,"column":91},"end":{"line":16,"column":139}},{"start":{"line":16,"column":142},"end":{"line":16,"column":151}}],"line":16},"1":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"2":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"3":{"loc":{"start":{"line":41,"column":14},"end":{"line":41,"column":79}},"type":"binary-expr","locations":[{"start":{"line":41,"column":14},"end":{"line":41,"column":36}},{"start":{"line":41,"column":40},"end":{"line":41,"column":59}},{"start":{"line":41,"column":63},"end":{"line":41,"column":79}}],"line":41}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":5,"10":5,"11":5,"12":5,"13":5,"14":5,"15":0,"16":0,"17":0,"18":5,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"f":{"0":5,"1":5,"2":0,"3":0,"4":0},"b":{"0":[0,5],"1":[0,5],"2":[0,0],"3":[0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/servers/Bundler.ts","sources":["/Users/albertsu/Desktop/sdk/src/servers/Bundler.ts"],"names":[],"mappings":";;;AAAA,wDAA0D;AAC1D,mCAAkC;AAClC,4CAAoD;AACpD,kCAA6F;AAE7F,mDAAyD;AAEzD,sCAA2D;AAC3D,kDAAgD;AAEhD,MAAa,OAAO;IAMhB,YAAY,OAAe,EAAE,UAAkB,EAAE,iBAAyB;QACtE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;QAC1C,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,+BAAmB,CAAC,CAAC,CAAC,IAAI,2BAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAC3H,CAAC;IACD,KAAK,CAAC,eAAe;QACjB,oDAAoD;QACpD,IAAI,QAAQ,CAAA;QACZ,IAAI;YACA,QAAQ,GAAG,MAAM,IAAA,sBAAe,EAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAA;SAC7E;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YACd,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAA;YACjF,MAAM,IAAI,gCAAuB,CAAC,mBAAmB,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;SAClF;QAED,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,mBAAmB,QAAQ,oCAAoC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;SACjG;IACL,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,MAAqB;QAC3C,MAAM,cAAc,GAAG,IAAA,uBAAW,EAAC,MAAM,IAAA,yBAAiB,EAAC,MAAM,CAAC,CAAC,CAAA;QACnE,MAAM,QAAQ,GAAG,MAAM,IAAA,0BAAmB,EAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAA;QAC5H,OAAO,QAAQ,CAAA;IACnB,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,MAAqB;QACzC,MAAM,cAAc,GAAG,IAAA,uBAAW,EAAC,MAAM,IAAA,yBAAiB,EAAC,MAAM,CAAC,CAAC,CAAA;QACnE,MAAM,GAAG,GAAG,MAAM,IAAA,wBAAiB,EAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAA;QACrH,IAAI,CAAC,CAAC,GAAG,CAAC,kBAAkB,IAAI,GAAG,CAAC,eAAe,IAAI,GAAG,CAAC,YAAY,CAAC,EAAE;YACtE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAA;SACvC;QACD,OAAO;YACH,YAAY,EAAE,kBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;YAC9C,oBAAoB,EAAE,kBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;YACzD,kBAAkB,EAAE,kBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC;SAC7D,CAAA;IACL,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAkB;QACtC,OAAO,MAAM,IAAA,iBAAU,EAAC,UAAU,CAAC,CAAA;IACvC,CAAC;CACJ;AAlDD,0BAkDC","sourcesContent":["import { JsonRpcProvider } from \"@ethersproject/providers\"\nimport { BigNumber } from \"ethers\"\nimport { resolveProperties } from \"ethers/lib/utils\"\nimport { estimateUserOpGas, getChainId, sendUserOpToBundler, validateChainId } from \"../apis\"\nimport { EstimateGasResult } from \"../common\"\nimport { LOCAL_FORK_CHAIN_ID } from \"../common/constants\"\nimport { UserOperation } from \"../data/\"\nimport { Helper, NoServerConnectionError } from \"../errors\"\nimport { deepHexlify } from \"../utils/DataUtils\"\n\nexport class Bundler {\n    chainId: string\n    bundlerUrl: string\n    entryPointAddress: string\n    userOpJsonRpcProvider?: JsonRpcProvider\n\n    constructor(chainId: string, bundlerUrl: string, entryPointAddress: string) {\n        this.chainId = chainId\n        this.bundlerUrl = bundlerUrl\n        this.entryPointAddress = entryPointAddress\n        this.userOpJsonRpcProvider = Number(chainId) === LOCAL_FORK_CHAIN_ID ? new JsonRpcProvider(this.bundlerUrl) : undefined\n    }\n    async validateChainId() {\n        // validate chainId is in sync with expected chainid\n        let response\n        try {\n            response = await validateChainId(this.chainId, this.userOpJsonRpcProvider)\n        } catch (e) {\n            console.log(e)\n            const helper = new Helper(\"Chain ID\", this.chainId, \"Cannot connect to bundler.\")\n            throw new NoServerConnectionError(\"Chain.loadBundler\", \"Bundler\", helper, true)\n        }\n\n        if (Number(response) !== Number(this.chainId)) {\n            throw new Error(`Bundler chainId ${response} does not match expected chainId ${this.chainId}`)\n        }\n    }\n\n    async sendUserOpToBundler(userOp: UserOperation): Promise<string> {\n        const hexifiedUserOp = deepHexlify(await resolveProperties(userOp))\n        const response = await sendUserOpToBundler(hexifiedUserOp, this.entryPointAddress, this.chainId, this.userOpJsonRpcProvider)\n        return response\n    }\n\n    async estimateUserOpGas(userOp: UserOperation): Promise<EstimateGasResult> {\n        const hexifiedUserOp = deepHexlify(await resolveProperties(userOp))\n        const res = await estimateUserOpGas(hexifiedUserOp, this.entryPointAddress, this.chainId, this.userOpJsonRpcProvider)\n        if (!(res.preVerificationGas || res.verificationGas || res.callGasLimit)) {\n            throw new Error(JSON.stringify(res))\n        }\n        return {\n            callGasLimit: BigNumber.from(res.callGasLimit),\n            verificationGasLimit: BigNumber.from(res.verificationGas),\n            preVerificationGas: BigNumber.from(res.preVerificationGas)\n        }\n    }\n\n    static async getChainId(bundlerUrl: string): Promise<string> {\n        return await getChainId(bundlerUrl)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c0cf858662c88636b6ab2744b8cc62281a65d5b8","contentHash":"359227875b21545454915728b15cd0dcded1e65f47e64a1d90a31a4683d97e70"},"/Users/albertsu/Desktop/sdk/src/utils/DataUtils.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/DataUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":186}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":32},"end":{"line":22,"column":1}},"6":{"start":{"line":8,"column":4},"end":{"line":21,"column":7}},"7":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"8":{"start":{"line":10,"column":12},"end":{"line":10,"column":31}},"9":{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},"10":{"start":{"line":13,"column":12},"end":{"line":17,"column":13}},"11":{"start":{"line":14,"column":16},"end":{"line":16,"column":17}},"12":{"start":{"line":15,"column":20},"end":{"line":15,"column":33}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":24}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"15":{"start":{"line":23,"column":29},"end":{"line":30,"column":1}},"16":{"start":{"line":24,"column":20},"end":{"line":24,"column":60}},"17":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"18":{"start":{"line":26,"column":34},"end":{"line":26,"column":108}},"19":{"start":{"line":27,"column":23},"end":{"line":27,"column":110}},"20":{"start":{"line":28,"column":8},"end":{"line":28,"column":67}},"21":{"start":{"line":31,"column":0},"end":{"line":31,"column":52}},"22":{"start":{"line":32,"column":30},"end":{"line":43,"column":1}},"23":{"start":{"line":33,"column":14},"end":{"line":33,"column":16}},"24":{"start":{"line":34,"column":4},"end":{"line":41,"column":5}},"25":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"26":{"start":{"line":36,"column":12},"end":{"line":36,"column":31}},"27":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"28":{"start":{"line":39,"column":12},"end":{"line":39,"column":60}},"29":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"30":{"start":{"line":44,"column":0},"end":{"line":44,"column":54}},"31":{"start":{"line":45,"column":36},"end":{"line":51,"column":1}},"32":{"start":{"line":46,"column":14},"end":{"line":46,"column":17}},"33":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"34":{"start":{"line":48,"column":8},"end":{"line":48,"column":29}},"35":{"start":{"line":50,"column":4},"end":{"line":50,"column":34}},"36":{"start":{"line":52,"column":20},"end":{"line":54,"column":1}},"37":{"start":{"line":53,"column":4},"end":{"line":53,"column":49}},"38":{"start":{"line":53,"column":36},"end":{"line":53,"column":47}},"39":{"start":{"line":55,"column":0},"end":{"line":55,"column":34}},"40":{"start":{"line":56,"column":25},"end":{"line":66,"column":1}},"41":{"start":{"line":57,"column":20},"end":{"line":57,"column":22}},"42":{"start":{"line":58,"column":23},"end":{"line":58,"column":60}},"43":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"44":{"start":{"line":60,"column":8},"end":{"line":60,"column":64}},"45":{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},"46":{"start":{"line":63,"column":23},"end":{"line":63,"column":74}},"47":{"start":{"line":64,"column":8},"end":{"line":64,"column":100}},"48":{"start":{"line":67,"column":0},"end":{"line":67,"column":44}},"49":{"start":{"line":68,"column":22},"end":{"line":73,"column":1}},"50":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"51":{"start":{"line":70,"column":23},"end":{"line":70,"column":87}},"52":{"start":{"line":71,"column":8},"end":{"line":71,"column":90}},"53":{"start":{"line":74,"column":0},"end":{"line":74,"column":38}},"54":{"start":{"line":75,"column":19},"end":{"line":86,"column":1}},"55":{"start":{"line":76,"column":14},"end":{"line":76,"column":16}},"56":{"start":{"line":77,"column":4},"end":{"line":84,"column":7}},"57":{"start":{"line":78,"column":8},"end":{"line":83,"column":9}},"58":{"start":{"line":79,"column":12},"end":{"line":79,"column":67}},"59":{"start":{"line":82,"column":12},"end":{"line":82,"column":32}},"60":{"start":{"line":85,"column":4},"end":{"line":85,"column":15}},"61":{"start":{"line":87,"column":0},"end":{"line":87,"column":32}},"62":{"start":{"line":88,"column":20},"end":{"line":102,"column":1}},"63":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"64":{"start":{"line":90,"column":8},"end":{"line":90,"column":25}},"65":{"start":{"line":92,"column":4},"end":{"line":97,"column":5}},"66":{"start":{"line":93,"column":8},"end":{"line":93,"column":19}},"67":{"start":{"line":95,"column":9},"end":{"line":97,"column":5}},"68":{"start":{"line":96,"column":8},"end":{"line":96,"column":63}},"69":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"70":{"start":{"line":99,"column":8},"end":{"line":99,"column":69}},"71":{"start":{"line":99,"column":35},"end":{"line":99,"column":67}},"72":{"start":{"line":101,"column":4},"end":{"line":101,"column":139}},"73":{"start":{"line":101,"column":49},"end":{"line":101,"column":133}},"74":{"start":{"line":103,"column":0},"end":{"line":103,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":32},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":53},"end":{"line":22,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":27},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":36},"end":{"line":21,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":29},"end":{"line":23,"column":30}},"loc":{"start":{"line":23,"column":60},"end":{"line":30,"column":1}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":30},"end":{"line":32,"column":31}},"loc":{"start":{"line":32,"column":43},"end":{"line":43,"column":1}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":36},"end":{"line":45,"column":37}},"loc":{"start":{"line":45,"column":49},"end":{"line":51,"column":1}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":20},"end":{"line":52,"column":21}},"loc":{"start":{"line":52,"column":43},"end":{"line":54,"column":1}},"line":52},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":26},"end":{"line":53,"column":27}},"loc":{"start":{"line":53,"column":36},"end":{"line":53,"column":47}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":25},"end":{"line":56,"column":26}},"loc":{"start":{"line":56,"column":71},"end":{"line":66,"column":1}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":68,"column":22},"end":{"line":68,"column":23}},"loc":{"start":{"line":68,"column":68},"end":{"line":73,"column":1}},"line":68},"9":{"name":"(anonymous_9)","decl":{"start":{"line":75,"column":19},"end":{"line":75,"column":20}},"loc":{"start":{"line":75,"column":28},"end":{"line":86,"column":1}},"line":75},"10":{"name":"(anonymous_10)","decl":{"start":{"line":77,"column":29},"end":{"line":77,"column":30}},"loc":{"start":{"line":77,"column":38},"end":{"line":84,"column":5}},"line":77},"11":{"name":"(anonymous_11)","decl":{"start":{"line":88,"column":20},"end":{"line":88,"column":21}},"loc":{"start":{"line":88,"column":29},"end":{"line":102,"column":1}},"line":88},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":23},"end":{"line":99,"column":24}},"loc":{"start":{"line":99,"column":35},"end":{"line":99,"column":67}},"line":99},"13":{"name":"(anonymous_13)","decl":{"start":{"line":101,"column":35},"end":{"line":101,"column":36}},"loc":{"start":{"line":101,"column":49},"end":{"line":101,"column":133}},"line":101}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9},"1":{"loc":{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},{"start":{"line":12,"column":8},"end":{"line":19,"column":9}}],"line":12},"2":{"loc":{"start":{"line":14,"column":16},"end":{"line":16,"column":17}},"type":"if","locations":[{"start":{"line":14,"column":16},"end":{"line":16,"column":17}},{"start":{"line":14,"column":16},"end":{"line":16,"column":17}}],"line":14},"3":{"loc":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},{"start":{"line":25,"column":4},"end":{"line":29,"column":5}}],"line":25},"4":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"5":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"6":{"loc":{"start":{"line":56,"column":33},"end":{"line":56,"column":46}},"type":"default-arg","locations":[{"start":{"line":56,"column":44},"end":{"line":56,"column":46}}],"line":56},"7":{"loc":{"start":{"line":56,"column":48},"end":{"line":56,"column":66}},"type":"default-arg","locations":[{"start":{"line":56,"column":61},"end":{"line":56,"column":66}}],"line":56},"8":{"loc":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},{"start":{"line":59,"column":4},"end":{"line":61,"column":5}}],"line":59},"9":{"loc":{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},{"start":{"line":62,"column":4},"end":{"line":65,"column":5}}],"line":62},"10":{"loc":{"start":{"line":62,"column":8},"end":{"line":62,"column":58}},"type":"binary-expr","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":44}},{"start":{"line":62,"column":48},"end":{"line":62,"column":58}}],"line":62},"11":{"loc":{"start":{"line":68,"column":30},"end":{"line":68,"column":43}},"type":"default-arg","locations":[{"start":{"line":68,"column":41},"end":{"line":68,"column":43}}],"line":68},"12":{"loc":{"start":{"line":68,"column":45},"end":{"line":68,"column":63}},"type":"default-arg","locations":[{"start":{"line":68,"column":58},"end":{"line":68,"column":63}}],"line":68},"13":{"loc":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},{"start":{"line":69,"column":4},"end":{"line":72,"column":5}}],"line":69},"14":{"loc":{"start":{"line":78,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":83,"column":9}},{"start":{"line":78,"column":8},"end":{"line":83,"column":9}}],"line":78},"15":{"loc":{"start":{"line":78,"column":12},"end":{"line":78,"column":68}},"type":"binary-expr","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":40}},{"start":{"line":78,"column":44},"end":{"line":78,"column":68}}],"line":78},"16":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{"line":89,"column":4},"end":{"line":91,"column":5}}],"line":89},"17":{"loc":{"start":{"line":92,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":97,"column":5}},{"start":{"line":92,"column":4},"end":{"line":97,"column":5}}],"line":92},"18":{"loc":{"start":{"line":92,"column":8},"end":{"line":92,"column":67}},"type":"binary-expr","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":12}},{"start":{"line":92,"column":16},"end":{"line":92,"column":39}},{"start":{"line":92,"column":43},"end":{"line":92,"column":67}}],"line":92},"19":{"loc":{"start":{"line":95,"column":9},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":9},"end":{"line":97,"column":5}},{"start":{"line":95,"column":9},"end":{"line":97,"column":5}}],"line":95},"20":{"loc":{"start":{"line":95,"column":13},"end":{"line":95,"column":56}},"type":"binary-expr","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":29}},{"start":{"line":95,"column":33},"end":{"line":95,"column":56}}],"line":95},"21":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":0,"51":0,"52":0,"53":1,"54":1,"55":20,"56":20,"57":60,"58":15,"59":45,"60":20,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":20,"10":60,"11":0,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0],"7":[0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0],"12":[0],"13":[0,0],"14":[15,45],"15":[60,15],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/DataUtils.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/DataUtils.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAClC,4CAAuD;AACvD,sCAA0E;AAE1E,MAAM,uBAAuB,GAAG,CAAC,KAAU,EAAE,QAAkB,EAAE,EAAE;IAC/D,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,EAAE;QAChC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACzB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;SACrB;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACpB,KAAK,MAAM,MAAM,IAAI,GAAG,EAAE;gBACtB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;oBACf,OAAO,KAAK,CAAA;iBACf;aACJ;YACD,OAAO,IAAI,CAAA;SACd;QACD,OAAO,SAAS,CAAA;IACpB,CAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAEM,MAAM,oBAAoB,GAAG,CAAC,QAAgB,EAAE,KAAU,EAAE,QAAkB,EAAE,EAAE;IACrF,MAAM,OAAO,GAAG,uBAAuB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IACxD,IAAI,OAAO,CAAC,MAAM,EAAE;QAChB,MAAM,iBAAiB,GAAG,4BAA4B,GAAG,IAAA,6BAAqB,EAAC,OAAO,CAAC,CAAA;QACvF,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,GAAG,QAAQ,6BAA6B,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAA;QAC7F,MAAM,IAAI,8BAAqB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;KACpD;AACL,CAAC,CAAA;AAPY,QAAA,oBAAoB,wBAOhC;AAEM,MAAM,qBAAqB,GAAG,CAAC,OAAY,EAAE,EAAE;IAClD,IAAI,GAAG,GAAG,EAAE,CAAA;IACZ,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;QACxB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC1B,GAAG,IAAI,GAAG,IAAI,IAAI,CAAA;SACrB;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,GAAG,IAAI,GAAG,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAA;SAClD;KACJ;IACD,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3B,CAAC,CAAA;AAXY,QAAA,qBAAqB,yBAWjC;AAED,MAAM,2BAA2B,GAAG,CAAC,OAAY,EAAE,EAAE;IACjD,IAAI,GAAG,GAAG,GAAG,CAAA;IACb,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;QACxB,GAAG,IAAI,GAAG,IAAI,MAAM,CAAA;KACvB;IACD,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;AACjC,CAAC,CAAA;AAEM,MAAM,WAAW,GAAG,CAAC,UAAe,EAAE,KAAU,EAAE,EAAE;IACvD,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;AACrD,CAAC,CAAA;AAFY,QAAA,WAAW,eAEvB;AAEM,MAAM,gBAAgB,GAAG,CAAC,KAAa,EAAE,QAAQ,GAAG,EAAE,EAAE,UAAU,GAAG,KAAK,EAAE,EAAE;IACjF,IAAI,SAAS,GAAG,EAAE,CAAA;IAClB,MAAM,UAAU,GAAG,KAAK,KAAK,kBAAS,CAAC,QAAQ,CAAA;IAC/C,IAAI,UAAU,EAAE;QACZ,SAAS,GAAG,2CAA2C,CAAA;KAC1D;IACD,IAAI,CAAC,IAAA,mBAAW,EAAC,KAAK,EAAE,EAAE,CAAC,IAAI,UAAU,EAAE;QACvC,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,YAAY,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;QACzD,MAAM,IAAI,wBAAe,CAAC,YAAY,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;KACrF;AACL,CAAC,CAAA;AAVY,QAAA,gBAAgB,oBAU5B;AAEM,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,QAAQ,GAAG,EAAE,EAAE,UAAU,GAAG,KAAK,EAAE,EAAE;IAC3E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACvB,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,MAAM,EAAE,KAAK,EAAE,4BAA4B,CAAC,CAAA;QACtE,MAAM,IAAI,wBAAe,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;KAC3E;AACL,CAAC,CAAA;AALY,QAAA,aAAa,iBAKzB;AAEM,MAAM,UAAU,GAAG,CAAC,GAAQ,EAAE,EAAE;IACnC,IAAI,GAAG,GAAQ,EAAE,CAAA;IACjB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAQ,EAAE,EAAE;QAClC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1D,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAA,kBAAU,EAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAA;SAC5C;aAAM;YACH,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;SACtB;IACL,CAAC,CAAC,CAAA;IACF,OAAO,GAAG,CAAA;AACd,CAAC,CAAA;AAVY,QAAA,UAAU,cAUtB;AAEM,MAAM,WAAW,GAAG,CAAC,GAAQ,EAAO,EAAE;IACzC,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;QAC3B,OAAO,SAAS,CAAA;KACnB;IACD,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;QAC7D,OAAO,GAAG,CAAA;KACb;SAAM,IAAI,GAAG,CAAC,YAAY,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QACpD,OAAO,IAAA,eAAO,EAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;KAC5C;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACpB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAA,mBAAW,EAAC,MAAM,CAAC,CAAC,CAAA;KAClD;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,IAAA,mBAAW,EAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;AAC7H,CAAC,CAAA;AAbY,QAAA,WAAW,eAavB","sourcesContent":["import { constants } from \"ethers\"\nimport { hexlify, isHexString } from \"ethers/lib/utils\"\nimport { DataFormatError, Helper, MissingParameterError } from \"../errors\"\n\nconst compareToExpectedParams = (input: any, expected: string[]) => {\n    return expected.filter((key: any) => {\n        if (typeof key === \"string\") {\n            return !input[key]\n        }\n        if (Array.isArray(key)) {\n            for (const subkey of key) {\n                if (input[subkey]) {\n                    return false\n                }\n            }\n            return true\n        }\n        return undefined\n    })\n}\n\nexport const verifyFunctionParams = (location: string, input: any, expected: string[]) => {\n    const missing = compareToExpectedParams(input, expected)\n    if (missing.length) {\n        const helperMainMessage = \"Missing these parameters: \" + formatMissingForError(missing)\n        const helper = new Helper(`${location} was given these parameters`, input, helperMainMessage)\n        throw new MissingParameterError(location, helper)\n    }\n}\n\nexport const formatMissingForError = (missing: any) => {\n    let out = \"\"\n    for (const term of missing) {\n        if (typeof term === \"string\") {\n            out += `${term}, `\n        }\n        if (Array.isArray(term)) {\n            out += `${formatMissingForErrorOrMode(term)}, `\n        }\n    }\n    return out.slice(0, -2)\n}\n\nconst formatMissingForErrorOrMode = (missing: any) => {\n    let out = \"(\"\n    for (const term of missing) {\n        out += `${term} or `\n    }\n    return out.slice(0, -4) + \")\"\n}\n\nexport const orderParams = (paramOrder: any, input: any) => {\n    return paramOrder.map((item: any) => input[item])\n}\n\nexport const verifyPrivateKey = (value: string, location = \"\", isInternal = false) => {\n    let helperMsg = \"\"\n    const isHashZero = value === constants.HashZero\n    if (isHashZero) {\n        helperMsg = \"privateKey can not be equal to bytes32(0)\"\n    }\n    if (!isHexString(value, 32) || isHashZero) {\n        const helper = new Helper(\"privateKey\", value, helperMsg)\n        throw new DataFormatError(\"privateKey\", \"{bytes32}\", location, helper, isInternal)\n    }\n}\n\nexport const verifyIsArray = (value: any, location = \"\", isInternal = false) => {\n    if (!Array.isArray(value)) {\n        const helper = new Helper(\"Data\", value, \"Data must be of type Array\")\n        throw new DataFormatError(\"Data\", \"array\", location, helper, isInternal)\n    }\n}\n\nexport const flattenObj = (obj: any) => {\n    let out: any = {}\n    Object.keys(obj).forEach((key: any) => {\n        if (typeof obj[key] === \"object\" && !Array.isArray(obj[key])) {\n            out = { ...out, ...flattenObj(obj[key]) }\n        } else {\n            out[key] = obj[key]\n        }\n    })\n    return out\n}\n\nexport const deepHexlify = (obj: any): any => {\n    if (typeof obj === \"function\") {\n        return undefined\n    }\n    if (!obj || typeof obj === \"string\" || typeof obj === \"boolean\") {\n        return obj\n    } else if (obj._isBigNumber || typeof obj !== \"object\") {\n        return hexlify(obj).replace(/^0x0/, \"0x\")\n    }\n    if (Array.isArray(obj)) {\n        return obj.map((member) => deepHexlify(member))\n    }\n    return Object.keys(obj).reduce((set, key) => Object.assign(Object.assign({}, set), { [key]: deepHexlify(obj[key]) }), {})\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fa35b29c4626625fb278d230be12208481abe5c1","contentHash":"58be70914bc4e3443a1e884f604c0a887da68fcb6daff9b35b9934f958f84851"},"/Users/albertsu/Desktop/sdk/src/data/Token.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/Token.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":33}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":21},"end":{"line":10,"column":37}},"9":{"start":{"line":11,"column":28},"end":{"line":11,"column":60}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":30}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"13":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"14":{"start":{"line":18,"column":12},"end":{"line":18,"column":63}},"15":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"16":{"start":{"line":21,"column":12},"end":{"line":21,"column":33}},"17":{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},"18":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"19":{"start":{"line":25,"column":12},"end":{"line":25,"column":33}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":28}},"21":{"start":{"line":30,"column":22},"end":{"line":30,"column":72}},"22":{"start":{"line":31,"column":24},"end":{"line":31,"column":48}},"23":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"24":{"start":{"line":33,"column":12},"end":{"line":33,"column":32}},"25":{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},"26":{"start":{"line":37,"column":31},"end":{"line":37,"column":63}},"27":{"start":{"line":38,"column":12},"end":{"line":38,"column":76}},"28":{"start":{"line":40,"column":13},"end":{"line":42,"column":9}},"29":{"start":{"line":41,"column":12},"end":{"line":41,"column":77}},"30":{"start":{"line":43,"column":8},"end":{"line":43,"column":25}},"31":{"start":{"line":46,"column":22},"end":{"line":46,"column":72}},"32":{"start":{"line":47,"column":8},"end":{"line":51,"column":9}},"33":{"start":{"line":48,"column":29},"end":{"line":48,"column":54}},"34":{"start":{"line":49,"column":25},"end":{"line":49,"column":48}},"35":{"start":{"line":50,"column":12},"end":{"line":50,"column":93}},"36":{"start":{"line":52,"column":8},"end":{"line":52,"column":29}},"37":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"38":{"start":{"line":56,"column":12},"end":{"line":56,"column":22}},"39":{"start":{"line":58,"column":25},"end":{"line":58,"column":56}},"40":{"start":{"line":59,"column":8},"end":{"line":59,"column":41}},"41":{"start":{"line":62,"column":23},"end":{"line":62,"column":64}},"42":{"start":{"line":63,"column":25},"end":{"line":63,"column":56}},"43":{"start":{"line":64,"column":8},"end":{"line":64,"column":58}},"44":{"start":{"line":67,"column":22},"end":{"line":67,"column":72}},"45":{"start":{"line":69,"column":8},"end":{"line":76,"column":9}},"46":{"start":{"line":70,"column":29},"end":{"line":70,"column":54}},"47":{"start":{"line":71,"column":12},"end":{"line":71,"column":56}},"48":{"start":{"line":74,"column":29},"end":{"line":74,"column":60}},"49":{"start":{"line":75,"column":12},"end":{"line":75,"column":55}},"50":{"start":{"line":77,"column":8},"end":{"line":77,"column":22}},"51":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"52":{"start":{"line":81,"column":27},"end":{"line":81,"column":96}},"53":{"start":{"line":82,"column":12},"end":{"line":82,"column":77}},"54":{"start":{"line":84,"column":25},"end":{"line":84,"column":56}},"55":{"start":{"line":85,"column":8},"end":{"line":85,"column":56}},"56":{"start":{"line":88,"column":25},"end":{"line":88,"column":56}},"57":{"start":{"line":89,"column":8},"end":{"line":89,"column":62}},"58":{"start":{"line":92,"column":22},"end":{"line":92,"column":72}},"59":{"start":{"line":93,"column":25},"end":{"line":93,"column":56}},"60":{"start":{"line":94,"column":26},"end":{"line":94,"column":61}},"61":{"start":{"line":95,"column":25},"end":{"line":95,"column":87}},"62":{"start":{"line":96,"column":36},"end":{"line":96,"column":44}},"63":{"start":{"line":97,"column":8},"end":{"line":97,"column":59}},"64":{"start":{"line":100,"column":22},"end":{"line":100,"column":72}},"65":{"start":{"line":101,"column":25},"end":{"line":101,"column":56}},"66":{"start":{"line":102,"column":26},"end":{"line":102,"column":61}},"67":{"start":{"line":103,"column":25},"end":{"line":103,"column":88}},"68":{"start":{"line":104,"column":36},"end":{"line":104,"column":44}},"69":{"start":{"line":105,"column":8},"end":{"line":105,"column":59}},"70":{"start":{"line":108,"column":22},"end":{"line":108,"column":37}},"71":{"start":{"line":109,"column":8},"end":{"line":109,"column":47}},"72":{"start":{"line":112,"column":22},"end":{"line":112,"column":37}},"73":{"start":{"line":113,"column":8},"end":{"line":113,"column":48}},"74":{"start":{"line":116,"column":22},"end":{"line":116,"column":37}},"75":{"start":{"line":117,"column":8},"end":{"line":117,"column":56}},"76":{"start":{"line":120,"column":22},"end":{"line":120,"column":37}},"77":{"start":{"line":121,"column":8},"end":{"line":121,"column":58}},"78":{"start":{"line":124,"column":22},"end":{"line":124,"column":37}},"79":{"start":{"line":125,"column":8},"end":{"line":125,"column":64}},"80":{"start":{"line":128,"column":22},"end":{"line":128,"column":37}},"81":{"start":{"line":129,"column":8},"end":{"line":129,"column":61}},"82":{"start":{"line":132,"column":22},"end":{"line":132,"column":37}},"83":{"start":{"line":133,"column":8},"end":{"line":133,"column":61}},"84":{"start":{"line":136,"column":22},"end":{"line":136,"column":37}},"85":{"start":{"line":137,"column":8},"end":{"line":137,"column":62}},"86":{"start":{"line":140,"column":8},"end":{"line":140,"column":57}},"87":{"start":{"line":143,"column":0},"end":{"line":143,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":55},"end":{"line":28,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":59},"end":{"line":44,"column":5}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":60},"end":{"line":53,"column":5}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":60},"end":{"line":60,"column":5}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":68},"end":{"line":65,"column":5}},"line":61},"5":{"name":"(anonymous_5)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":70},"end":{"line":78,"column":5}},"line":66},"6":{"name":"(anonymous_6)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":76},"end":{"line":86,"column":5}},"line":79},"7":{"name":"(anonymous_7)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":73},"end":{"line":90,"column":5}},"line":87},"8":{"name":"(anonymous_8)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":73},"end":{"line":98,"column":5}},"line":91},"9":{"name":"(anonymous_9)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":74},"end":{"line":106,"column":5}},"line":99},"10":{"name":"(anonymous_10)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":72},"end":{"line":110,"column":5}},"line":107},"11":{"name":"(anonymous_11)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":73},"end":{"line":114,"column":5}},"line":111},"12":{"name":"(anonymous_12)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":81},"end":{"line":118,"column":5}},"line":115},"13":{"name":"(anonymous_13)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":83},"end":{"line":122,"column":5}},"line":119},"14":{"name":"(anonymous_14)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":89},"end":{"line":126,"column":5}},"line":123},"15":{"name":"(anonymous_15)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":86},"end":{"line":130,"column":5}},"line":127},"16":{"name":"(anonymous_16)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":86},"end":{"line":134,"column":5}},"line":131},"17":{"name":"(anonymous_17)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":87},"end":{"line":138,"column":5}},"line":135},"18":{"name":"(anonymous_18)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":26},"end":{"line":141,"column":5}},"line":139}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":23},"end":{"line":13,"column":53}},"type":"default-arg","locations":[{"start":{"line":13,"column":34},"end":{"line":13,"column":53}}],"line":13},"1":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},{"start":{"line":20,"column":8},"end":{"line":23,"column":9}}],"line":20},"3":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"4":{"loc":{"start":{"line":29,"column":21},"end":{"line":29,"column":57}},"type":"default-arg","locations":[{"start":{"line":29,"column":31},"end":{"line":29,"column":57}}],"line":29},"5":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"6":{"loc":{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},{"start":{"line":36,"column":8},"end":{"line":42,"column":9}}],"line":36},"7":{"loc":{"start":{"line":40,"column":13},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":42,"column":9}},{"start":{"line":40,"column":13},"end":{"line":42,"column":9}}],"line":40},"8":{"loc":{"start":{"line":45,"column":22},"end":{"line":45,"column":58}},"type":"default-arg","locations":[{"start":{"line":45,"column":32},"end":{"line":45,"column":58}}],"line":45},"9":{"loc":{"start":{"line":47,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":51,"column":9}},{"start":{"line":47,"column":8},"end":{"line":51,"column":9}}],"line":47},"10":{"loc":{"start":{"line":54,"column":22},"end":{"line":54,"column":58}},"type":"default-arg","locations":[{"start":{"line":54,"column":32},"end":{"line":54,"column":58}}],"line":54},"11":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"12":{"loc":{"start":{"line":61,"column":30},"end":{"line":61,"column":66}},"type":"default-arg","locations":[{"start":{"line":61,"column":40},"end":{"line":61,"column":66}}],"line":61},"13":{"loc":{"start":{"line":66,"column":32},"end":{"line":66,"column":68}},"type":"default-arg","locations":[{"start":{"line":66,"column":42},"end":{"line":66,"column":68}}],"line":66},"14":{"loc":{"start":{"line":69,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":76,"column":9}},{"start":{"line":69,"column":8},"end":{"line":76,"column":9}}],"line":69},"15":{"loc":{"start":{"line":79,"column":38},"end":{"line":79,"column":74}},"type":"default-arg","locations":[{"start":{"line":79,"column":48},"end":{"line":79,"column":74}}],"line":79},"16":{"loc":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},{"start":{"line":80,"column":8},"end":{"line":83,"column":9}}],"line":80},"17":{"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":71}},"type":"default-arg","locations":[{"start":{"line":87,"column":45},"end":{"line":87,"column":71}}],"line":87},"18":{"loc":{"start":{"line":91,"column":35},"end":{"line":91,"column":71}},"type":"default-arg","locations":[{"start":{"line":91,"column":45},"end":{"line":91,"column":71}}],"line":91},"19":{"loc":{"start":{"line":99,"column":36},"end":{"line":99,"column":72}},"type":"default-arg","locations":[{"start":{"line":99,"column":46},"end":{"line":99,"column":72}}],"line":99},"20":{"loc":{"start":{"line":107,"column":34},"end":{"line":107,"column":70}},"type":"default-arg","locations":[{"start":{"line":107,"column":44},"end":{"line":107,"column":70}}],"line":107},"21":{"loc":{"start":{"line":111,"column":35},"end":{"line":111,"column":71}},"type":"default-arg","locations":[{"start":{"line":111,"column":45},"end":{"line":111,"column":71}}],"line":111},"22":{"loc":{"start":{"line":115,"column":43},"end":{"line":115,"column":79}},"type":"default-arg","locations":[{"start":{"line":115,"column":53},"end":{"line":115,"column":79}}],"line":115},"23":{"loc":{"start":{"line":119,"column":45},"end":{"line":119,"column":81}},"type":"default-arg","locations":[{"start":{"line":119,"column":55},"end":{"line":119,"column":81}}],"line":119},"24":{"loc":{"start":{"line":123,"column":51},"end":{"line":123,"column":87}},"type":"default-arg","locations":[{"start":{"line":123,"column":61},"end":{"line":123,"column":87}}],"line":123},"25":{"loc":{"start":{"line":127,"column":48},"end":{"line":127,"column":84}},"type":"default-arg","locations":[{"start":{"line":127,"column":58},"end":{"line":127,"column":84}}],"line":127},"26":{"loc":{"start":{"line":131,"column":48},"end":{"line":131,"column":84}},"type":"default-arg","locations":[{"start":{"line":131,"column":58},"end":{"line":131,"column":84}}],"line":131},"27":{"loc":{"start":{"line":135,"column":49},"end":{"line":135,"column":85}},"type":"default-arg","locations":[{"start":{"line":135,"column":59},"end":{"line":135,"column":85}}],"line":135}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0],"9":[0,0],"10":[0],"11":[0,0],"12":[0],"13":[0],"14":[0,0],"15":[0],"16":[0,0],"17":[0],"18":[0],"19":[0],"20":[0],"21":[0],"22":[0],"23":[0],"24":[0],"25":[0],"26":[0],"27":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/Token.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/Token.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber, Contract, ethers } from \"ethers\"\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\"\nimport { getChainFromData } from \"./Chain\"\nimport { getTokenInfo } from \"../apis\"\nimport { ERC20_ABI, TransactionData } from \"../common\"\nimport { EnvOption } from \"../config\"\nimport { Helper, MissingParameterError, TransactionError } from \"../errors\"\n\nconst nativeTokens = [\"eth\", \"matic\"]\nconst wrappedNativeTokens = { eth: \"weth\", matic: \"wmatic\" }\n\nexport class Token {\n    address = \"\"\n    isNative = false\n    symbol = \"\"\n    contract?: Contract\n\n    constructor(input: string, location = \"Token constructor\") {\n        if (!input) {\n            throw new MissingParameterError(location)\n        }\n        if (ethers.utils.isAddress(input)) {\n            this.address = input\n            return\n        }\n\n        if (nativeTokens.includes(input.toLowerCase())) {\n            this.isNative = true\n        }\n        this.symbol = input\n    }\n\n    async getAddress(options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const chain = await getChainFromData(options.chain)\n        const chainId = await chain.getChainId()\n        if (this.address) {\n            return this.address\n        }\n        let tokenInfo\n        if (this.isNative) {\n            const nativeName = (wrappedNativeTokens as any)[this.symbol]\n            tokenInfo = await getTokenInfo(nativeName, chainId)\n        } else if (this.symbol) {\n            tokenInfo = await getTokenInfo(this.symbol, chainId)\n        }\n        return tokenInfo\n    }\n\n    async getContract(options: EnvOption = (globalThis as any).globalEnvOption): Promise<Contract> {\n        const chain = await getChainFromData(options.chain)\n        if (!this.contract) {\n            const provider = await chain.getProvider()\n            const addr = await this.getAddress()\n            this.contract = new ethers.Contract(addr, ERC20_ABI, provider)\n        }\n        return this.contract\n    }\n\n    async getDecimals(options: EnvOption = (globalThis as any).globalEnvOption): Promise<number> {\n        if (this.isNative) {\n            return 18\n        }\n        const contract = await this.getContract(options)\n        return await contract.decimals()\n    }\n\n    async getBalance(address: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const amount = await this.getBalanceBN(address, options)\n        const decimals = await this.getDecimals(options)\n        return formatUnits(amount, decimals)\n    }\n\n    async getBalanceBN(address: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<BigNumber> {\n        const chain = await getChainFromData(options.chain)\n        let amount: BigNumber\n        if (this.isNative) {\n            const provider = await chain.getProvider()\n            amount = await provider.getBalance(address)\n        } else {\n            const contract = await this.getContract(options)\n            amount = await contract.balanceOf(address)\n        }\n        return amount\n    }\n\n    async getApproval(owner: string, spender: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<BigNumber> {\n        if (this.isNative) {\n            const helper = new Helper(\"approval\", this, \"Native token can not approve\")\n            throw new TransactionError(\"Token.getApproval\", helper)\n        }\n        const contract = await this.getContract(options)\n        return await contract.allowance(owner, spender)\n    }\n\n    async getDecimalAmount(amount: number, options: EnvOption = (globalThis as any).globalEnvOption): Promise<BigNumber> {\n        const decimals = await this.getDecimals(options)\n        return parseUnits(`${amount}`, decimals)\n    }\n\n    async approve(spender: string, amount: number, options: EnvOption = (globalThis as any).globalEnvOption): Promise<TransactionData> {\n        const chain = await getChainFromData(options.chain)\n        const contract = await this.getContract(options)\n        const amountDec = await this.getDecimalAmount(amount)\n        const calldata = await contract.populateTransaction.approve(spender, amountDec)\n        const { to, data, value } = calldata\n        return { to: to!, data: data!, value: value!, chain }\n    }\n\n    async transfer(spender: string, amount: number, options: EnvOption = (globalThis as any).globalEnvOption): Promise<TransactionData> {\n        const chain = await getChainFromData(options.chain)\n        const contract = await this.getContract(options)\n        const amountDec = await this.getDecimalAmount(amount)\n        const calldata = await contract.populateTransaction.transfer(spender, amountDec)\n        const { to, data, value } = calldata\n        return { to: to!, data: data!, value: value!, chain }\n    }\n\n    static async getAddress(data: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const token = new Token(data)\n        return await token.getAddress(options)\n    }\n\n    static async getDecimals(data: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<number> {\n        const token = new Token(data)\n        return await token.getDecimals(options)\n    }\n\n    static async getBalance(data: string, address: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const token = new Token(data)\n        return await token.getBalance(address, options)\n    }\n\n    static async getBalanceBN(data: string, address: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<BigNumber> {\n        const token = new Token(data)\n        return await token.getBalanceBN(address, options)\n    }\n\n    static async getApproval(\n        data: string,\n        owner: string,\n        spender: string,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<BigNumber> {\n        const token = new Token(data)\n        return await token.getApproval(owner, spender, options)\n    }\n    static async getDecimalAmount(\n        data: string,\n        amount: number,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<BigNumber> {\n        const token = new Token(data)\n        return await token.getDecimalAmount(amount, options)\n    }\n\n    static async approve(\n        data: string,\n        spender: string,\n        amount: number,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<TransactionData> {\n        const token = new Token(data)\n        return await token.approve(spender, amount, options)\n    }\n\n    static async transfer(\n        data: string,\n        spender: string,\n        amount: number,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<TransactionData> {\n        const token = new Token(data)\n        return await token.transfer(spender, amount, options)\n    }\n\n    static isNative(data: string): boolean {\n        return nativeTokens.includes(data.toLowerCase())\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6193703015eddd1a0cd60189200df1522721aefd","contentHash":"ede92f32c17fae9108c30a98662467dd7bfa11144cfee354eafafbf31e0817d7"},"/Users/albertsu/Desktop/sdk/src/common/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/common/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":26,"2":26,"3":26,"4":26,"5":26,"6":1,"7":26,"8":0,"9":0,"10":0,"11":1,"12":2,"13":26,"14":26,"15":1,"16":1,"17":1},"f":{"0":26,"1":1,"2":0,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[26,0],"3":[26,0],"4":[26,26],"5":[0,26],"6":[26,0],"7":[0,0],"8":[1,1,1],"9":[26,0],"10":[26,26]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/common/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/common/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,8CAA2B;AAC3B,0CAAuB","sourcesContent":["export * from \"./constants\"\nexport * from \"./types\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96c1ea47600de0f2163afcb989af15f752d40780","contentHash":"1f01b2f49fd7df679158c34a4291628bd2c3aa481e384964fcf24f044c5b5ed7"},"/Users/albertsu/Desktop/sdk/src/common/types.ts":{"path":"/Users/albertsu/Desktop/sdk/src/common/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/common/types.ts","sources":["/Users/albertsu/Desktop/sdk/src/common/types.ts"],"names":[],"mappings":"","sourcesContent":["import { BigNumber, BigNumberish } from \"ethers\"\nimport { Chain } from \"../data\"\n\nexport type TransactionParams = {\n    to: string\n    value?: BigNumberish\n    data?: string\n}\n\nexport interface TransactionData extends TransactionParams {\n    chain?: Chain\n}\n\nexport interface TransactionDataWithFee extends TransactionData {\n    token?: string\n    amount?: number\n    gasPercent?: number\n    recipient?: string\n    oracle?: string\n}\nexport interface ExecutionReceipt {\n    opHash: string\n    txid?: string\n    gasUsed: number\n    gasUSD: number\n}\n\nexport type EstimateGasResult = {\n    preVerificationGas: BigNumber\n    verificationGasLimit: BigNumber\n    callGasLimit: BigNumber\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d1df3a4e7b7dba31be71b6b5fb76a1f07d4f8da4","contentHash":"449290efd7e1b59c6a4e5b80429ee56817565b26cf325e6adb76c50a1b42de34"},"/Users/albertsu/Desktop/sdk/src/data/UserOp.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/UserOp.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":50}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":35}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":130}},"9":{"start":{"line":15,"column":23},"end":{"line":15,"column":54}},"10":{"start":{"line":16,"column":32},"end":{"line":19,"column":9}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":87}},"12":{"start":{"line":23,"column":34},"end":{"line":23,"column":77}},"13":{"start":{"line":24,"column":25},"end":{"line":24,"column":50}},"14":{"start":{"line":25,"column":25},"end":{"line":25,"column":103}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":53}},"16":{"start":{"line":29,"column":87},"end":{"line":29,"column":94}},"17":{"start":{"line":30,"column":20},"end":{"line":30,"column":61}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":61}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":78}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":61}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":77}},"22":{"start":{"line":35,"column":28},"end":{"line":35,"column":99}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":45}},"24":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":69}},"26":{"start":{"line":42,"column":22},"end":{"line":42,"column":71}},"27":{"start":{"line":43,"column":20},"end":{"line":51,"column":10}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":60}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":64}},"30":{"start":{"line":54,"column":8},"end":{"line":54,"column":48}},"31":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"32":{"start":{"line":58,"column":0},"end":{"line":58,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":20},"end":{"line":13,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":21,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":31},"end":{"line":27,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":19},"end":{"line":37,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":65},"end":{"line":56,"column":5}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":129}},"type":"cond-expr","locations":[{"start":{"line":12,"column":61},"end":{"line":12,"column":82}},{"start":{"line":12,"column":85},"end":{"line":12,"column":129}}],"line":12},"1":{"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":61}},"type":"cond-expr","locations":[{"start":{"line":30,"column":56},"end":{"line":30,"column":57}},{"start":{"line":30,"column":60},"end":{"line":30,"column":61}}],"line":30},"2":{"loc":{"start":{"line":32,"column":53},"end":{"line":32,"column":76}},"type":"binary-expr","locations":[{"start":{"line":32,"column":53},"end":{"line":32,"column":71}},{"start":{"line":32,"column":75},"end":{"line":32,"column":76}}],"line":32},"3":{"loc":{"start":{"line":38,"column":28},"end":{"line":38,"column":63}},"type":"default-arg","locations":[{"start":{"line":38,"column":37},"end":{"line":38,"column":63}}],"line":38},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"5":{"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":60}},"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":30}},{"start":{"line":39,"column":34},"end":{"line":39,"column":60}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/UserOp.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/UserOp.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber, Contract } from \"ethers\"\nimport { Chain, getChainFromData } from \"./Chain\"\nimport { encodeWalletSignature } from \"./SolidityData\"\nimport { UserOperation, WalletSignature } from \"./types\"\nimport { Auth } from \"../auth/Auth\"\nimport { ENTRYPOINT_ABI } from \"../common/constants\"\nimport { EnvOption } from \"../config\"\nimport { calcPreVerificationGas } from \"../utils\"\n\nexport class UserOp {\n    op: UserOperation\n\n    constructor(op: UserOperation) {\n        this.op = op\n        this.op.preVerificationGas = op.preVerificationGas ? op.preVerificationGas : calcPreVerificationGas(this.op)\n    }\n\n    async sign(auth: Auth, chain: Chain) {\n        const opHash = await this.getOpHashData(chain)\n        const walletSignature: WalletSignature = {\n            signature: await auth.signHash(opHash),\n            userId: await auth.getUniqueId()\n        }\n        this.op.signature = encodeWalletSignature(walletSignature)\n    }\n\n    async getOpHashData(chain: Chain) {\n        const entryPointAddress = await chain.getAddress(\"entryPointAddress\")\n        const provider = await chain.getProvider()\n        const contract = new Contract(entryPointAddress, ENTRYPOINT_ABI, provider)\n        return await contract.getUserOpHash(this.op)\n    }\n\n    getMaxTxCost() {\n        let { maxFeePerGas, preVerificationGas, callGasLimit, verificationGasLimit } = this.op\n        const mul = this.op.paymasterAndData !== \"0x\" ? 3 : 1\n        maxFeePerGas = BigNumber.from(maxFeePerGas)\n        preVerificationGas = BigNumber.from(preVerificationGas ?? 0)\n        callGasLimit = BigNumber.from(callGasLimit)\n        verificationGasLimit = BigNumber.from(verificationGasLimit)\n        const requiredGas = callGasLimit.add(verificationGasLimit.mul(mul)).add(preVerificationGas!)\n        return maxFeePerGas.mul(requiredGas)\n    }\n\n    async estimateGas(auth: Auth, option: EnvOption = (globalThis as any).globalEnvOption): Promise<UserOp> {\n        if (!this.op.signature || this.op.signature === \"0x\") {\n            this.op.signature = await auth.getEstimateGasSignature()\n        }\n        const chain = await getChainFromData(option.chain)\n        const res = await chain.estimateOpGas({\n            ...this.op,\n            paymasterAndData: \"0x\",\n            maxFeePerGas: BigNumber.from(0),\n            maxPriorityFeePerGas: BigNumber.from(0),\n            preVerificationGas: BigNumber.from(0),\n            callGasLimit: BigNumber.from(0),\n            verificationGasLimit: BigNumber.from(10e6)\n        })\n\n        this.op.preVerificationGas = res.preVerificationGas\n        this.op.verificationGasLimit = res.verificationGasLimit\n        this.op.callGasLimit = res.callGasLimit\n\n        return this\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b89ce0947cd1af50d39e2a30aed54011d1608315","contentHash":"40fb3cbd2521ff13ea3cf4279d51796fe062053cef8f6fa88a1dd665753218d2"},"/Users/albertsu/Desktop/sdk/src/data/SolidityData.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/SolidityData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":115}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":7,"column":70},"end":{"line":7,"column":74}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":95}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":53}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":42}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":151}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"12":{"start":{"line":17,"column":34},"end":{"line":17,"column":38}},"13":{"start":{"line":18,"column":34},"end":{"line":18,"column":38}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":39}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":45}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":124}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":54}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":63}},"19":{"start":{"line":27,"column":0},"end":{"line":27,"column":44}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":65}},"21":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"fnMap":{"0":{"name":"encodeLoginData","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":24}},"loc":{"start":{"line":6,"column":31},"end":{"line":14,"column":1}},"line":6},"1":{"name":"encodeWalletSignature","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":30}},"loc":{"start":{"line":16,"column":37},"end":{"line":22,"column":1}},"line":16},"2":{"name":"addresstoBytes32","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":25}},"loc":{"start":{"line":24,"column":32},"end":{"line":26,"column":1}},"line":24},"3":{"name":"toBytes32Arr","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":21}},"loc":{"start":{"line":28,"column":28},"end":{"line":30,"column":1}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":94}},"type":"cond-expr","locations":[{"start":{"line":8,"column":44},"end":{"line":8,"column":61}},{"start":{"line":8,"column":64},"end":{"line":8,"column":94}}],"line":8},"1":{"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":29}},"type":"cond-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":25}},{"start":{"line":9,"column":28},"end":{"line":9,"column":29}}],"line":9},"2":{"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":53}},"type":"cond-expr","locations":[{"start":{"line":10,"column":34},"end":{"line":10,"column":46}},{"start":{"line":10,"column":49},"end":{"line":10,"column":53}}],"line":10},"3":{"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":52}},"type":"cond-expr","locations":[{"start":{"line":11,"column":18},"end":{"line":11,"column":22}},{"start":{"line":11,"column":25},"end":{"line":11,"column":52}}],"line":11},"4":{"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":41}},"type":"cond-expr","locations":[{"start":{"line":12,"column":28},"end":{"line":12,"column":37}},{"start":{"line":12,"column":40},"end":{"line":12,"column":41}}],"line":12},"5":{"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":38}},"type":"cond-expr","locations":[{"start":{"line":19,"column":26},"end":{"line":19,"column":34}},{"start":{"line":19,"column":37},"end":{"line":19,"column":38}}],"line":19},"6":{"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":44}},"type":"cond-expr","locations":[{"start":{"line":20,"column":28},"end":{"line":20,"column":37}},{"start":{"line":20,"column":40},"end":{"line":20,"column":44}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":5,"5":5,"6":5,"7":5,"8":5,"9":5,"10":5,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1},"f":{"0":5,"1":0,"2":0,"3":0},"b":{"0":[0,5],"1":[0,5],"2":[0,5],"3":[5,0],"4":[0,5],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/SolidityData.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/SolidityData.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAClC,4CAAkD;AAGlD,SAAgB,eAAe,CAAC,IAAe;IAC3C,IAAI,EAAE,SAAS,EAAE,iBAAiB,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,IAAI,CAAA;IACtE,iBAAiB,GAAG,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAS,CAAC,WAAW,CAAA;IACjF,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IACzB,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAA;IACjD,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAS,CAAC,QAAQ,CAAA;IACvC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACrC,OAAO,uBAAe,CAAC,MAAM,CACzB,CAAC,4CAA4C,CAAC,EAC9C,CAAC,CAAC,SAAS,EAAE,iBAAiB,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC,CAC9D,CAAA;AACL,CAAC;AAXD,0CAWC;AAED,SAAgB,qBAAqB,CAAC,IAAqB;IACvD,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAA;IAClC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAA;IAClC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;IAClC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAA;IACxC,OAAO,uBAAe,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAA;AACnH,CAAC;AAND,sDAMC;AACD,SAAgB,gBAAgB,CAAC,IAAY;IACzC,OAAO,uBAAe,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAA;AACtD,CAAC;AAFD,4CAEC;AACD,SAAgB,YAAY,CAAC,IAAc;IACvC,OAAO,uBAAe,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAA;AACxD,CAAC;AAFD,oCAEC","sourcesContent":["import { constants } from \"ethers\"\nimport { defaultAbiCoder } from \"ethers/lib/utils\"\nimport { LoginData, WalletSignature } from \"./types\"\n\nexport function encodeLoginData(data: LoginData): string {\n    let { loginType, newFunWalletOwner, index, socialHandle, salt } = data\n    newFunWalletOwner = newFunWalletOwner ? newFunWalletOwner : constants.AddressZero\n    index = index ? index : 0\n    socialHandle = socialHandle ? socialHandle : \"0x\"\n    salt = salt ? salt : constants.HashZero\n    loginType = loginType ? loginType : 0\n    return defaultAbiCoder.encode(\n        [\"tuple(uint8,address,bytes32,uint256,bytes)\"],\n        [[loginType, newFunWalletOwner, salt, index, socialHandle]]\n    )\n}\n\nexport function encodeWalletSignature(data: WalletSignature): string {\n    const { userId, signature } = data\n    let { authType, extraData } = data\n    authType = authType ? authType : 0\n    extraData = extraData ? extraData : \"0x\"\n    return defaultAbiCoder.encode([\"uint8\", \"address\", \"bytes\", \"bytes\"], [authType, userId, signature, extraData])\n}\nexport function addresstoBytes32(data: string): string {\n    return defaultAbiCoder.encode([\"address\"], [data])\n}\nexport function toBytes32Arr(data: string[]): string {\n    return defaultAbiCoder.encode([\"bytes32[]\"], [data])\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a70ef71f397353c7204735d947581c80a68fadc2","contentHash":"8b3f62dfafd9d3626ae4f6b4b7053826bcaad446e2d2905a0a55c785f16b9a8e"},"/Users/albertsu/Desktop/sdk/src/utils/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":47}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":25,"2":25,"3":25,"4":25,"5":25,"6":5,"7":25,"8":0,"9":0,"10":0,"11":1,"12":6,"13":25,"14":25,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":25,"1":5,"2":0,"3":6},"b":{"0":[1,1,1],"1":[1,0],"2":[25,0],"3":[25,0],"4":[25,25],"5":[0,25],"6":[25,0],"7":[0,0],"8":[1,1,1],"9":[25,0],"10":[25,25]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,6CAA0B;AAC1B,8CAA2B;AAC3B,+CAA4B;AAC5B,8CAA2B;AAC3B,8CAA2B;AAC3B,gDAA6B","sourcesContent":["export * from \"./ApiUtils\"\nexport * from \"./AuthUtils\"\nexport * from \"./ChainUtils\"\nexport * from \"./DataUtils\"\nexport * from \"./SwapUtils\"\nexport * from \"./UseropUtils\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"41b46de94bb997ef253c67bf39162cc44c744565","contentHash":"6ab82185ec5decc6cebef52d10531652c549cdb0efc4b13217192329ef9a0a39"},"/Users/albertsu/Desktop/sdk/src/utils/AuthUtils.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/AuthUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":85}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":26},"end":{"line":9,"column":1}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":50}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":49}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"8":{"start":{"line":11,"column":26},"end":{"line":21,"column":1}},"9":{"start":{"line":12,"column":18},"end":{"line":12,"column":37}},"10":{"start":{"line":14,"column":4},"end":{"line":19,"column":5}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":62}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"15":{"start":{"line":23,"column":20},"end":{"line":34,"column":1}},"16":{"start":{"line":25,"column":27},"end":{"line":25,"column":71}},"17":{"start":{"line":26,"column":4},"end":{"line":32,"column":5}},"18":{"start":{"line":27,"column":8},"end":{"line":27,"column":34}},"19":{"start":{"line":30,"column":8},"end":{"line":30,"column":36}},"20":{"start":{"line":31,"column":8},"end":{"line":31,"column":69}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"22":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":26},"end":{"line":6,"column":27}},"loc":{"start":{"line":6,"column":44},"end":{"line":9,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":26},"end":{"line":11,"column":27}},"loc":{"start":{"line":11,"column":65},"end":{"line":21,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":20},"end":{"line":23,"column":21}},"loc":{"start":{"line":23,"column":59},"end":{"line":34,"column":1}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":48}},"type":"cond-expr","locations":[{"start":{"line":8,"column":23},"end":{"line":8,"column":41}},{"start":{"line":8,"column":44},"end":{"line":8,"column":48}}],"line":8},"1":{"loc":{"start":{"line":11,"column":51},"end":{"line":11,"column":60}},"type":"default-arg","locations":[{"start":{"line":11,"column":58},"end":{"line":11,"column":60}}],"line":11},"2":{"loc":{"start":{"line":14,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":19,"column":5}},{"start":{"line":14,"column":4},"end":{"line":19,"column":5}}],"line":14},"3":{"loc":{"start":{"line":23,"column":35},"end":{"line":23,"column":54}},"type":"default-arg","locations":[{"start":{"line":23,"column":42},"end":{"line":23,"column":54}}],"line":23},"4":{"loc":{"start":{"line":26,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":32,"column":5}},{"start":{"line":26,"column":4},"end":{"line":32,"column":5}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0],"2":[0,0],"3":[0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/AuthUtils.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/AuthUtils.ts"],"names":[],"mappings":";;;AAAA,+BAAmC;AACnC,kCAA0C;AAEnC,MAAM,iBAAiB,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IACtD,MAAM,IAAI,GAAG,MAAM,IAAA,cAAO,EAAC,MAAM,CAAC,CAAA;IAClC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA;AAChD,CAAC,CAAA;AAHY,QAAA,iBAAiB,qBAG7B;AAEM,MAAM,iBAAiB,GAAG,KAAK,EAAE,MAAc,EAAE,QAAgB,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE;IACnF,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACjC,IAAI,MAAM,CAAA;IACV,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC3B,MAAM,GAAG,KAAK,CAAA;KACjB;SAAM;QACH,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;KACpB;IACD,MAAM,IAAA,cAAO,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;AACjD,CAAC,CAAA;AATY,QAAA,iBAAiB,qBAS7B;AAEM,MAAM,WAAW,GAAG,KAAK,EAAE,MAAc,EAAE,IAAI,GAAG,YAAY,EAAE,EAAE;IACrE,IAAI,QAAQ,CAAA;IACZ,MAAM,cAAc,GAAG,MAAM,IAAA,yBAAiB,EAAC,MAAM,CAAC,CAAA;IACtD,IAAI,cAAc,EAAE;QAChB,QAAQ,GAAG,cAAc,CAAA;KAC5B;SAAM;QACH,QAAQ,GAAG,IAAA,SAAM,GAAE,CAAA;QACnB,MAAM,IAAA,yBAAiB,EAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;KAClD;IACD,OAAO,QAAQ,CAAA;AACnB,CAAC,CAAA;AAVY,QAAA,WAAW,eAUvB","sourcesContent":["import { v4 as uuidv4 } from \"uuid\"\nimport { getAuth, setAuth } from \"../apis\"\n\nexport const getStoredUniqueId = async (authId: string) => {\n    const auth = await getAuth(authId)\n    return auth.data ? auth.data.uniqueId : null\n}\n\nexport const setStoredUniqueId = async (authId: string, uniqueId: string, addr = \"\") => {\n    const words = authId.split(\"###\")\n    let method\n    if (words[0].startsWith(\"0x\")) {\n        method = \"eoa\"\n    } else {\n        method = words[0]\n    }\n    await setAuth(authId, method, addr, uniqueId)\n}\n\nexport const getUniqueId = async (authId: string, addr = \"NO_ADDRESS\") => {\n    let uniqueId\n    const storedUniqueId = await getStoredUniqueId(authId)\n    if (storedUniqueId) {\n        uniqueId = storedUniqueId\n    } else {\n        uniqueId = uuidv4()\n        await setStoredUniqueId(authId, uniqueId, addr)\n    }\n    return uniqueId\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7c052009c6d03cae5498594a0b5064d4236f8591","contentHash":"c953f946fcaaabb82c38ec9f3fda43fa2bbd0cdbfb079977b2151aab09be8757"},"/Users/albertsu/Desktop/sdk/src/utils/ChainUtils.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/ChainUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":132}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":43},"end":{"line":15,"column":1}},"7":{"start":{"line":9,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":59}},"10":{"start":{"line":11,"column":47},"end":{"line":11,"column":57}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":21}},"12":{"start":{"line":16,"column":17},"end":{"line":30,"column":1}},"13":{"start":{"line":17,"column":4},"end":{"line":29,"column":5}},"14":{"start":{"line":18,"column":8},"end":{"line":19,"column":23}},"15":{"start":{"line":19,"column":12},"end":{"line":19,"column":23}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":42}},"17":{"start":{"line":23,"column":34},"end":{"line":23,"column":166}},"18":{"start":{"line":24,"column":23},"end":{"line":24,"column":73}},"19":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"20":{"start":{"line":26,"column":12},"end":{"line":26,"column":60}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":86}},"22":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}},"23":{"start":{"line":32,"column":33},"end":{"line":52,"column":1}},"24":{"start":{"line":33,"column":4},"end":{"line":51,"column":5}},"25":{"start":{"line":34,"column":8},"end":{"line":50,"column":9}},"26":{"start":{"line":35,"column":28},"end":{"line":44,"column":43}},"27":{"start":{"line":37,"column":29},"end":{"line":37,"column":47}},"28":{"start":{"line":38,"column":35},"end":{"line":38,"column":53}},"29":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"30":{"start":{"line":40,"column":20},"end":{"line":40,"column":88}},"31":{"start":{"line":42,"column":16},"end":{"line":42,"column":35}},"32":{"start":{"line":44,"column":32},"end":{"line":44,"column":42}},"33":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"34":{"start":{"line":46,"column":42},"end":{"line":46,"column":120}},"35":{"start":{"line":47,"column":31},"end":{"line":47,"column":119}},"36":{"start":{"line":48,"column":16},"end":{"line":48,"column":87}},"37":{"start":{"line":53,"column":0},"end":{"line":53,"column":60}},"38":{"start":{"line":54,"column":27},"end":{"line":59,"column":1}},"39":{"start":{"line":55,"column":4},"end":{"line":55,"column":109}},"40":{"start":{"line":56,"column":23},"end":{"line":56,"column":85}},"41":{"start":{"line":57,"column":26},"end":{"line":57,"column":73}},"42":{"start":{"line":58,"column":4},"end":{"line":58,"column":72}},"43":{"start":{"line":60,"column":0},"end":{"line":60,"column":48}},"44":{"start":{"line":61,"column":34},"end":{"line":71,"column":1}},"45":{"start":{"line":62,"column":4},"end":{"line":63,"column":15}},"46":{"start":{"line":63,"column":8},"end":{"line":63,"column":15}},"47":{"start":{"line":64,"column":4},"end":{"line":70,"column":5}},"48":{"start":{"line":65,"column":8},"end":{"line":65,"column":67}},"49":{"start":{"line":68,"column":23},"end":{"line":68,"column":70}},"50":{"start":{"line":69,"column":8},"end":{"line":69,"column":113}},"51":{"start":{"line":72,"column":25},"end":{"line":72,"column":46}},"52":{"start":{"line":73,"column":19},"end":{"line":91,"column":1}},"53":{"start":{"line":74,"column":18},"end":{"line":74,"column":69}},"54":{"start":{"line":75,"column":15},"end":{"line":75,"column":40}},"55":{"start":{"line":76,"column":19},"end":{"line":76,"column":41}},"56":{"start":{"line":77,"column":19},"end":{"line":77,"column":25}},"57":{"start":{"line":78,"column":4},"end":{"line":81,"column":5}},"58":{"start":{"line":79,"column":25},"end":{"line":79,"column":50}},"59":{"start":{"line":80,"column":8},"end":{"line":80,"column":44}},"60":{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},"61":{"start":{"line":84,"column":8},"end":{"line":84,"column":118}},"62":{"start":{"line":87,"column":8},"end":{"line":87,"column":80}},"63":{"start":{"line":89,"column":15},"end":{"line":89,"column":53}},"64":{"start":{"line":90,"column":4},"end":{"line":90,"column":27}},"65":{"start":{"line":92,"column":0},"end":{"line":92,"column":32}},"66":{"start":{"line":93,"column":19},"end":{"line":105,"column":1}},"67":{"start":{"line":94,"column":18},"end":{"line":94,"column":69}},"68":{"start":{"line":95,"column":21},"end":{"line":95,"column":46}},"69":{"start":{"line":96,"column":4},"end":{"line":103,"column":5}},"70":{"start":{"line":97,"column":21},"end":{"line":97,"column":52}},"71":{"start":{"line":98,"column":8},"end":{"line":99,"column":24}},"72":{"start":{"line":99,"column":12},"end":{"line":99,"column":24}},"73":{"start":{"line":102,"column":8},"end":{"line":102,"column":21}},"74":{"start":{"line":104,"column":4},"end":{"line":104,"column":17}},"75":{"start":{"line":106,"column":0},"end":{"line":106,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":43},"end":{"line":8,"column":44}},"loc":{"start":{"line":8,"column":61},"end":{"line":15,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":36},"end":{"line":11,"column":37}},"loc":{"start":{"line":11,"column":47},"end":{"line":11,"column":57}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":17},"end":{"line":16,"column":18}},"loc":{"start":{"line":16,"column":62},"end":{"line":30,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":33},"end":{"line":32,"column":34}},"loc":{"start":{"line":32,"column":86},"end":{"line":52,"column":1}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":24},"end":{"line":36,"column":25}},"loc":{"start":{"line":36,"column":35},"end":{"line":43,"column":13}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":21},"end":{"line":44,"column":22}},"loc":{"start":{"line":44,"column":32},"end":{"line":44,"column":42}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":27},"end":{"line":54,"column":28}},"loc":{"start":{"line":54,"column":96},"end":{"line":59,"column":1}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":61,"column":34},"end":{"line":61,"column":35}},"loc":{"start":{"line":61,"column":75},"end":{"line":71,"column":1}},"line":61},"8":{"name":"(anonymous_8)","decl":{"start":{"line":73,"column":19},"end":{"line":73,"column":20}},"loc":{"start":{"line":73,"column":90},"end":{"line":91,"column":1}},"line":73},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":19},"end":{"line":93,"column":20}},"loc":{"start":{"line":93,"column":78},"end":{"line":105,"column":1}},"line":93}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},{"start":{"line":10,"column":8},"end":{"line":12,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":60}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":31}},{"start":{"line":10,"column":35},"end":{"line":10,"column":60}}],"line":10},"2":{"loc":{"start":{"line":16,"column":39},"end":{"line":16,"column":57}},"type":"default-arg","locations":[{"start":{"line":16,"column":52},"end":{"line":16,"column":57}}],"line":16},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":19,"column":23}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":19,"column":23}},{"start":{"line":18,"column":8},"end":{"line":19,"column":23}}],"line":18},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"5":{"loc":{"start":{"line":32,"column":63},"end":{"line":32,"column":81}},"type":"default-arg","locations":[{"start":{"line":32,"column":76},"end":{"line":32,"column":81}}],"line":32},"6":{"loc":{"start":{"line":34,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":50,"column":9}},{"start":{"line":34,"column":8},"end":{"line":50,"column":9}}],"line":34},"7":{"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":60}},"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},{"start":{"line":34,"column":41},"end":{"line":34,"column":60}}],"line":34},"8":{"loc":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},{"start":{"line":39,"column":16},"end":{"line":41,"column":17}}],"line":39},"9":{"loc":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},{"start":{"line":45,"column":12},"end":{"line":49,"column":13}}],"line":45},"10":{"loc":{"start":{"line":54,"column":73},"end":{"line":54,"column":91}},"type":"default-arg","locations":[{"start":{"line":54,"column":86},"end":{"line":54,"column":91}}],"line":54},"11":{"loc":{"start":{"line":61,"column":52},"end":{"line":61,"column":70}},"type":"default-arg","locations":[{"start":{"line":61,"column":65},"end":{"line":61,"column":70}}],"line":61},"12":{"loc":{"start":{"line":62,"column":4},"end":{"line":63,"column":15}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":63,"column":15}},{"start":{"line":62,"column":4},"end":{"line":63,"column":15}}],"line":62},"13":{"loc":{"start":{"line":73,"column":47},"end":{"line":73,"column":85}},"type":"default-arg","locations":[{"start":{"line":73,"column":59},"end":{"line":73,"column":85}}],"line":73},"14":{"loc":{"start":{"line":78,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":81,"column":5}},{"start":{"line":78,"column":4},"end":{"line":81,"column":5}}],"line":78},"15":{"loc":{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},{"start":{"line":83,"column":4},"end":{"line":88,"column":5}}],"line":83},"16":{"loc":{"start":{"line":93,"column":35},"end":{"line":93,"column":73}},"type":"default-arg","locations":[{"start":{"line":93,"column":47},"end":{"line":93,"column":73}}],"line":93},"17":{"loc":{"start":{"line":98,"column":8},"end":{"line":99,"column":24}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":99,"column":24}},{"start":{"line":98,"column":8},"end":{"line":99,"column":24}}],"line":98}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":10,"14":10,"15":0,"16":10,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"f":{"0":0,"1":0,"2":10,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0],"3":[0,10],"4":[0,0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0],"11":[0],"12":[0,0],"13":[0],"14":[0,0],"15":[0,0],"16":[0],"17":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/ChainUtils.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/ChainUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { ContractInterface } from \"ethers\"\nimport { Interface, defaultAbiCoder, parseEther } from \"ethers/lib/utils\"\nimport { formatMissingForError, orderParams } from \"./DataUtils\"\nimport { Auth } from \"../auth\"\nimport { EnvOption } from \"../config\"\nimport { getChainFromData } from \"../data\"\nimport { DataFormatError, Helper, MissingParameterError } from \"../errors\"\nimport { FunWallet } from \"../wallet\"\n\nconst getFunctionParamOrderFromInterface = (interf: Interface, func: string) => {\n    for (const field of interf.fragments) {\n        if (field.name === func && field.type === \"function\") {\n            return field.inputs.map((input) => input.name)\n        }\n    }\n    return undefined\n}\n\nexport const checkAbi = (abi: ContractInterface, name: string, location: string, isInternal = false) => {\n    try {\n        if (abi instanceof Interface) return abi\n        return new Interface(abi)\n    } catch {\n        const helperMainMessage =\n            \"Abi is not formatted correctly, please refer to ethers 5.7.2 documentation at: https://docs.ethers.org/v5/api/utils/abi/interface/\"\n        const helper = new Helper(\"Abi\", abi, helperMainMessage)\n        if (!Array.isArray(abi)) {\n            helper.pushMessage(\"Abi must be of type Array\")\n        }\n\n        throw new DataFormatError(name, \"abi\", location, helper, isInternal)\n    }\n}\n\nexport const verifyValidParamsFromAbi = (abi: any, func: string, params: any, location: string, isInternal = false) => {\n    for (const field of abi) {\n        if (field.type === \"function\" && field.name === func) {\n            const missing = field.inputs\n                .filter((input: any) => {\n                    const data = params[input.name]\n                    const dataExists = data !== undefined\n                    if (dataExists) {\n                        verifyParamIsSolidityType({ ...input, data }, location, isInternal)\n                    }\n                    return !dataExists\n                })\n                .map((field: any) => field.name)\n            if (missing.length) {\n                const helperMainMessage = \"Missing these parameters: \" + formatMissingForError(missing)\n                const helper = new Helper(`${location} was given these parameters`, params, helperMainMessage)\n                throw new MissingParameterError(location, helper, isInternal)\n            }\n        }\n    }\n}\n\nexport const encodeContractCall = (interf: Interface, encodeFunctionName: string, input: any, location: string, isInternal = false) => {\n    verifyValidParamsFromAbi(interf.fragments, encodeFunctionName, input, location, isInternal)\n    const paramOrder = getFunctionParamOrderFromInterface(interf, encodeFunctionName)\n    const paramsInOrder = orderParams(paramOrder, input)\n    return interf.encodeFunctionData(encodeFunctionName, paramsInOrder)\n}\n\nconst verifyParamIsSolidityType = (param: any, location: string, isInternal = false) => {\n    if (Array.isArray(param.data)) return\n    try {\n        defaultAbiCoder.encode([param.type], [param.data])\n    } catch {\n        const helper = new Helper(param.name, param.data, \"\")\n        throw new DataFormatError(param.name, `{solidity ${param.type}}`, location, helper, isInternal)\n    }\n}\n\nconst gasSpecificChain = { 137: 350_000_000_000 }\nexport const fundWallet = async (\n    auth: Auth,\n    wallet: FunWallet,\n    value: number,\n    txOptions: EnvOption = (globalThis as any).globalEnvOption\n) => {\n    const chain = await getChainFromData(txOptions.chain)\n    const to = await wallet.getAddress()\n    const signer = await auth.getSigner()\n    let txSigner = signer\n    if (!signer?.provider) {\n        const provider = await chain.getProvider()\n        txSigner = signer.connect(provider)\n    }\n    let txData\n    if ((gasSpecificChain as any)[chain.id!]) {\n        txData = { to, data: \"0x\", value: parseEther(`${value}`), gasPrice: (gasSpecificChain as any)[chain.id!] }\n    } else {\n        txData = { to, data: \"0x\", value: parseEther(`${value}`) }\n    }\n    const tx = await txSigner.sendTransaction(txData)\n    return await tx.wait()\n}\n\nexport const isContract = async (address: string, txOptions: EnvOption = (globalThis as any).globalEnvOption) => {\n    const chain = await getChainFromData(txOptions.chain)\n    const provider = await chain.getProvider()\n    try {\n        const code = await provider.getCode(address)\n        if (code !== \"0x\") return true\n    } catch (error) {\n        return false\n    }\n    return false\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3674ad8167e2ce2d275073d056328b1c06884825","contentHash":"25533d16bb5ea3b0a14085eec312efa89fda87378a9c83021290f84f0ed02a0a"},"/Users/albertsu/Desktop/sdk/src/utils/SwapUtils.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/SwapUtils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":83}},"4":{"start":{"line":7,"column":14},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":30},"end":{"line":9,"column":144}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":43}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}},"9":{"start":{"line":12,"column":17},"end":{"line":12,"column":37}},"10":{"start":{"line":13,"column":15},"end":{"line":13,"column":33}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":47}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":73}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}},"15":{"start":{"line":22,"column":8},"end":{"line":22,"column":53}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":63}},"17":{"start":{"line":26,"column":29},"end":{"line":28,"column":10}},"18":{"start":{"line":29,"column":36},"end":{"line":32,"column":10}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":94}},"20":{"start":{"line":36,"column":35},"end":{"line":41,"column":10}},"21":{"start":{"line":42,"column":29},"end":{"line":42,"column":127}},"22":{"start":{"line":43,"column":69},"end":{"line":50,"column":10}},"23":{"start":{"line":51,"column":8},"end":{"line":59,"column":10}},"24":{"start":{"line":62,"column":25},"end":{"line":62,"column":99}},"25":{"start":{"line":63,"column":8},"end":{"line":63,"column":41}},"26":{"start":{"line":66,"column":25},"end":{"line":66,"column":75}},"27":{"start":{"line":67,"column":21},"end":{"line":67,"column":146}},"28":{"start":{"line":68,"column":26},"end":{"line":68,"column":71}},"29":{"start":{"line":69,"column":26},"end":{"line":69,"column":81}},"30":{"start":{"line":70,"column":30},"end":{"line":70,"column":87}},"31":{"start":{"line":71,"column":31},"end":{"line":76,"column":10}},"32":{"start":{"line":77,"column":8},"end":{"line":77,"column":49}},"33":{"start":{"line":80,"column":24},"end":{"line":84,"column":9}},"34":{"start":{"line":85,"column":36},"end":{"line":85,"column":90}},"35":{"start":{"line":86,"column":8},"end":{"line":90,"column":10}},"36":{"start":{"line":93,"column":13},"end":{"line":98,"column":1}},"37":{"start":{"line":100,"column":55},"end":{"line":100,"column":67}},"38":{"start":{"line":101,"column":108},"end":{"line":101,"column":118}},"39":{"start":{"line":102,"column":21},"end":{"line":102,"column":34}},"40":{"start":{"line":103,"column":20},"end":{"line":103,"column":70}},"41":{"start":{"line":104,"column":24},"end":{"line":104,"column":51}},"42":{"start":{"line":105,"column":27},"end":{"line":105,"column":73}},"43":{"start":{"line":106,"column":28},"end":{"line":106,"column":75}},"44":{"start":{"line":107,"column":20},"end":{"line":107,"column":81}},"45":{"start":{"line":108,"column":21},"end":{"line":108,"column":84}},"46":{"start":{"line":109,"column":46},"end":{"line":109,"column":110}},"47":{"start":{"line":110,"column":17},"end":{"line":110,"column":107}},"48":{"start":{"line":111,"column":4},"end":{"line":111,"column":46}},"49":{"start":{"line":113,"column":0},"end":{"line":113,"column":28}},"50":{"start":{"line":114,"column":16},"end":{"line":114,"column":30}},"51":{"start":{"line":116,"column":18},"end":{"line":116,"column":67}},"52":{"start":{"line":117,"column":20},"end":{"line":117,"column":69}},"53":{"start":{"line":118,"column":4},"end":{"line":118,"column":97}},"54":{"start":{"line":120,"column":0},"end":{"line":120,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"fromReadableAmount","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":46},"end":{"line":17,"column":1}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":71},"end":{"line":24,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":50},"end":{"line":34,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":50},"end":{"line":60,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":38},"end":{"line":64,"column":5}},"line":61},"6":{"name":"(anonymous_6)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":60},"end":{"line":78,"column":5}},"line":65},"7":{"name":"(anonymous_7)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":88},"end":{"line":91,"column":5}},"line":79},"8":{"name":"swapExec","decl":{"start":{"line":99,"column":15},"end":{"line":99,"column":23}},"loc":{"start":{"line":99,"column":60},"end":{"line":112,"column":1}},"line":99},"9":{"name":"oneInchAPIRequest","decl":{"start":{"line":115,"column":15},"end":{"line":115,"column":32}},"loc":{"start":{"line":115,"column":96},"end":{"line":119,"column":1}},"line":115}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":79,"column":51},"end":{"line":79,"column":66}},"type":"default-arg","locations":[{"start":{"line":79,"column":62},"end":{"line":79,"column":66}}],"line":79},"4":{"loc":{"start":{"line":79,"column":68},"end":{"line":79,"column":86}},"type":"default-arg","locations":[{"start":{"line":79,"column":81},"end":{"line":79,"column":86}}],"line":79},"5":{"loc":{"start":{"line":115,"column":58},"end":{"line":115,"column":94}},"type":"default-arg","locations":[{"start":{"line":115,"column":68},"end":{"line":115,"column":94}}],"line":115},"6":{"loc":{"start":{"line":117,"column":20},"end":{"line":117,"column":69}},"type":"cond-expr","locations":[{"start":{"line":117,"column":57},"end":{"line":117,"column":58}},{"start":{"line":117,"column":61},"end":{"line":117,"column":69}}],"line":117}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[0],"5":[0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/SwapUtils.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/SwapUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Provider } from \"@ethersproject/providers\"\nimport { JSBI } from \"@uniswap/sdk\"\nimport { Currency, CurrencyAmount, Percent, Token, TradeType } from \"@uniswap/sdk-core\"\nimport IUniswapV3PoolABI from \"@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json\"\nimport { FeeAmount, Pool, Route, SwapQuoter, SwapRouter, Trade, computePoolAddress } from \"@uniswap/v3-sdk\"\nimport { ethers } from \"ethers\"\nimport { ERC20_ABI } from \"../common\"\nimport { EnvOption } from \"../config\"\nimport { getChainFromData } from \"../data\"\nconst apiBaseUrl = \"https://api.1inch.io/v5.0/\"\n\nexport function fromReadableAmount(amount: number, decimals: number) {\n    return ethers.utils.parseUnits(amount.toString(), decimals)\n}\n\nclass SwapToken {\n    provider: Provider\n    quoterContractAddr: string\n    poolFactoryContractAddr: string\n\n    constructor(provider: Provider, quoterContractAddr: string, poolFactoryContractAddr: string) {\n        this.provider = provider\n        this.quoterContractAddr = quoterContractAddr\n        this.poolFactoryContractAddr = poolFactoryContractAddr\n    }\n\n    async getOutputQuote(route: Route<Currency, Currency>, token0: Token, amountIn: number) {\n        const { calldata } = await SwapQuoter.quoteCallParameters(\n            route,\n            CurrencyAmount.fromRawAmount(token0, fromReadableAmount(amountIn, token0.decimals).toString()),\n            TradeType.EXACT_INPUT,\n            {\n                useQuoterV2: true\n            }\n        )\n\n        const quoteCallReturnData = await this.provider.call({\n            to: this.quoterContractAddr,\n            data: calldata\n        })\n        return ethers.utils.defaultAbiCoder.decode([\"uint256\"], quoteCallReturnData)\n    }\n\n    async getPoolInfo(tokenIn: Token, tokenOut: Token, poolFee: FeeAmount) {\n        const currentPoolAddress = computePoolAddress({\n            factoryAddress: this.poolFactoryContractAddr,\n            tokenA: tokenIn,\n            tokenB: tokenOut,\n            fee: poolFee\n        })\n\n        const poolContract = new ethers.Contract(currentPoolAddress, IUniswapV3PoolABI.abi, this.provider)\n\n        const [token0, token1, fee, tickSpacing, liquidity, slot0] = await Promise.all([\n            poolContract.token0(),\n            poolContract.token1(),\n            poolContract.fee(),\n            poolContract.tickSpacing(),\n            poolContract.liquidity(),\n            poolContract.slot0()\n        ])\n\n        return {\n            token0,\n            token1,\n            fee,\n            tickSpacing,\n            liquidity,\n            sqrtPriceX96: slot0[0],\n            tick: slot0[1]\n        }\n    }\n\n    async getTokenDecimals(tokenAddr: string) {\n        const contract = new ethers.Contract(tokenAddr, ERC20_ABI, this.provider)\n        return await contract.decimals()\n    }\n\n    async createTrade(amountIn: number, tokenIn: Token, tokenOut: Token, poolFee: FeeAmount) {\n        const poolInfo = await this.getPoolInfo(tokenIn, tokenOut, poolFee)\n        const pool = new Pool(tokenIn, tokenOut, poolFee, poolInfo.sqrtPriceX96.toString(), poolInfo.liquidity.toString(), poolInfo.tick)\n        const swapRoute = new Route([pool], tokenIn, tokenOut)\n\n        const amountOut = await this.getOutputQuote(swapRoute, tokenIn, amountIn)\n        const tokenInAmount = fromReadableAmount(amountIn, tokenIn.decimals).toString()\n        const uncheckedTrade = Trade.createUncheckedTrade({\n            route: swapRoute,\n            inputAmount: CurrencyAmount.fromRawAmount(tokenIn, tokenInAmount),\n            outputAmount: CurrencyAmount.fromRawAmount(tokenOut, JSBI.BigInt(amountOut)),\n            tradeType: TradeType.EXACT_INPUT\n        })\n\n        return { uncheckedTrade, tokenInAmount }\n    }\n\n    executeTrade(\n        trade: Trade<Currency, Currency, TradeType>,\n        routerAddr: string,\n        walletAddress: string,\n        slippage = 5000,\n        percentDec = 10000\n    ) {\n        const options = {\n            slippageTolerance: new Percent(slippage, percentDec), // 50 bips, or 0.50%\n            deadline: Date.now() + 1800, // 20 minutes from the current Unix time\n            recipient: walletAddress\n        }\n\n        const { calldata, value } = SwapRouter.swapCallParameters(trade, options)\n        return {\n            data: calldata,\n            to: routerAddr,\n            value: value\n        }\n    }\n}\n\nconst fees = {\n    lowest: 100,\n    low: 500,\n    medium: 3000,\n    high: 10000\n}\n\nexport async function swapExec(provider: Provider, uniswapAddrs: any, swapParams: any) {\n    const { univ3quoter, univ3factory, univ3router } = uniswapAddrs\n\n    const { tokenInAddress, tokenOutAddress, amountIn, returnAddress, percentDecimal, slippage, poolFee } = swapParams\n    const _poolFee = (fees as any)[poolFee]\n\n    const swapper = new SwapToken(provider, univ3quoter, univ3factory)\n    const { chainId } = await provider.getNetwork()\n    const tokenInDecimal = await swapper.getTokenDecimals(tokenInAddress)\n    const tokenOutDecimal = await swapper.getTokenDecimals(tokenOutAddress)\n\n    const tokenIn = new Token(chainId, tokenInAddress, tokenInDecimal)\n    const tokenOut = new Token(chainId, tokenOutAddress, tokenOutDecimal)\n\n    const { uncheckedTrade, tokenInAmount } = await swapper.createTrade(amountIn, tokenIn, tokenOut, _poolFee)\n    const data = swapper.executeTrade(uncheckedTrade, univ3router, returnAddress, slippage, percentDecimal)\n    return { ...data, amount: tokenInAmount }\n}\n\nconst testIds = [36864, 31337]\nexport async function oneInchAPIRequest(methodName: string, queryParams: any, options: EnvOption = (globalThis as any).globalEnvOption) {\n    const chain = await getChainFromData(options.chain)\n    const chainId = testIds.includes(Number(chain.id)) ? 1 : chain.id\n    return apiBaseUrl + chainId + methodName + \"?\" + new URLSearchParams(queryParams).toString()\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc3e2a1ef76a298331a943918b35e4e68c03e2ee","contentHash":"00c9975b22253f066b592fb510b996ce80d15ca3b88392845e61218b8c66afa0"},"/Users/albertsu/Desktop/sdk/src/utils/UseropUtils.ts":{"path":"/Users/albertsu/Desktop/sdk/src/utils/UseropUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":92}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":31},"end":{"line":17,"column":1}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":34}},"7":{"start":{"line":9,"column":14},"end":{"line":12,"column":14}},"8":{"start":{"line":13,"column":19},"end":{"line":13,"column":62}},"9":{"start":{"line":14,"column":25},"end":{"line":14,"column":112}},"10":{"start":{"line":14,"column":44},"end":{"line":14,"column":82}},"11":{"start":{"line":14,"column":104},"end":{"line":14,"column":111}},"12":{"start":{"line":15,"column":16},"end":{"line":15,"column":117}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":40}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":56}},"15":{"start":{"line":20,"column":18},"end":{"line":20,"column":122}},"16":{"start":{"line":20,"column":49},"end":{"line":20,"column":120}},"17":{"start":{"line":21,"column":19},"end":{"line":21,"column":148}},"18":{"start":{"line":21,"column":49},"end":{"line":21,"column":147}},"19":{"start":{"line":22,"column":4},"end":{"line":22,"column":57}},"20":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"21":{"start":{"line":26,"column":22},"end":{"line":26,"column":99}},"22":{"start":{"line":27,"column":8},"end":{"line":27,"column":64}},"23":{"start":{"line":28,"column":8},"end":{"line":28,"column":23}},"24":{"start":{"line":30,"column":23},"end":{"line":33,"column":7}},"25":{"start":{"line":30,"column":57},"end":{"line":33,"column":5}},"26":{"start":{"line":34,"column":4},"end":{"line":34,"column":44}},"27":{"start":{"line":36,"column":25},"end":{"line":42,"column":1}},"28":{"start":{"line":37,"column":16},"end":{"line":37,"column":18}},"29":{"start":{"line":38,"column":4},"end":{"line":40,"column":8}},"30":{"start":{"line":39,"column":8},"end":{"line":39,"column":33}},"31":{"start":{"line":41,"column":4},"end":{"line":41,"column":15}},"32":{"start":{"line":43,"column":0},"end":{"line":43,"column":44}},"33":{"start":{"line":45,"column":4},"end":{"line":57,"column":5}},"34":{"start":{"line":46,"column":25},"end":{"line":46,"column":50}},"35":{"start":{"line":47,"column":26},"end":{"line":47,"column":68}},"36":{"start":{"line":48,"column":24},"end":{"line":48,"column":52}},"37":{"start":{"line":49,"column":25},"end":{"line":49,"column":71}},"38":{"start":{"line":50,"column":25},"end":{"line":50,"column":43}},"39":{"start":{"line":51,"column":27},"end":{"line":51,"column":61}},"40":{"start":{"line":52,"column":23},"end":{"line":52,"column":55}},"41":{"start":{"line":53,"column":8},"end":{"line":53,"column":35}},"42":{"start":{"line":56,"column":8},"end":{"line":56,"column":41}},"43":{"start":{"line":59,"column":0},"end":{"line":59,"column":40}},"44":{"start":{"line":60,"column":18},"end":{"line":60,"column":64}},"45":{"start":{"line":62,"column":17},"end":{"line":62,"column":113}},"46":{"start":{"line":63,"column":18},"end":{"line":63,"column":35}},"47":{"start":{"line":64,"column":4},"end":{"line":64,"column":21}},"48":{"start":{"line":67,"column":28},"end":{"line":75,"column":1}},"49":{"start":{"line":76,"column":19},"end":{"line":105,"column":1}},"50":{"start":{"line":106,"column":22},"end":{"line":155,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":31},"end":{"line":7,"column":32}},"loc":{"start":{"line":7,"column":43},"end":{"line":17,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":36},"end":{"line":14,"column":37}},"loc":{"start":{"line":14,"column":44},"end":{"line":14,"column":82}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":92},"end":{"line":14,"column":93}},"loc":{"start":{"line":14,"column":104},"end":{"line":14,"column":111}},"line":14},"3":{"name":"encode","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":15}},"loc":{"start":{"line":19,"column":42},"end":{"line":23,"column":1}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":33},"end":{"line":20,"column":34}},"loc":{"start":{"line":20,"column":49},"end":{"line":20,"column":120}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":34},"end":{"line":21,"column":35}},"loc":{"start":{"line":21,"column":49},"end":{"line":21,"column":147}},"line":21},"6":{"name":"packUserOp","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":19}},"loc":{"start":{"line":24,"column":45},"end":{"line":35,"column":1}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":30,"column":49},"end":{"line":30,"column":50}},"loc":{"start":{"line":30,"column":57},"end":{"line":33,"column":5}},"line":30},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":25},"end":{"line":36,"column":26}},"loc":{"start":{"line":36,"column":39},"end":{"line":42,"column":1}},"line":36},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":42},"end":{"line":38,"column":43}},"loc":{"start":{"line":38,"column":57},"end":{"line":40,"column":5}},"line":38},"10":{"name":"gasCalculation","decl":{"start":{"line":44,"column":15},"end":{"line":44,"column":29}},"loc":{"start":{"line":44,"column":43},"end":{"line":58,"column":1}},"line":44},"11":{"name":"getPriceData","decl":{"start":{"line":61,"column":15},"end":{"line":61,"column":27}},"loc":{"start":{"line":61,"column":43},"end":{"line":65,"column":1}},"line":61}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":44},"end":{"line":14,"column":82}},"type":"cond-expr","locations":[{"start":{"line":14,"column":54},"end":{"line":14,"column":65}},{"start":{"line":14,"column":68},"end":{"line":14,"column":82}}],"line":14},"1":{"loc":{"start":{"line":20,"column":49},"end":{"line":20,"column":120}},"type":"cond-expr","locations":[{"start":{"line":20,"column":94},"end":{"line":20,"column":103}},{"start":{"line":20,"column":106},"end":{"line":20,"column":120}}],"line":20},"2":{"loc":{"start":{"line":20,"column":49},"end":{"line":20,"column":91}},"type":"binary-expr","locations":[{"start":{"line":20,"column":49},"end":{"line":20,"column":75}},{"start":{"line":20,"column":79},"end":{"line":20,"column":91}}],"line":20},"3":{"loc":{"start":{"line":21,"column":49},"end":{"line":21,"column":147}},"type":"cond-expr","locations":[{"start":{"line":21,"column":94},"end":{"line":21,"column":131}},{"start":{"line":21,"column":134},"end":{"line":21,"column":147}}],"line":21},"4":{"loc":{"start":{"line":21,"column":49},"end":{"line":21,"column":91}},"type":"binary-expr","locations":[{"start":{"line":21,"column":49},"end":{"line":21,"column":75}},{"start":{"line":21,"column":79},"end":{"line":21,"column":91}}],"line":21},"5":{"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":43}},"type":"default-arg","locations":[{"start":{"line":24,"column":39},"end":{"line":24,"column":43}}],"line":24},"6":{"loc":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},{"start":{"line":25,"column":4},"end":{"line":29,"column":5}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":1,"49":1,"50":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/utils/UseropUtils.ts","sources":["/Users/albertsu/Desktop/sdk/src/utils/UseropUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber } from \"ethers\"\nimport { arrayify, defaultAbiCoder, hexlify, keccak256 } from \"ethers/lib/utils\"\nimport { sendRequest } from \"./ApiUtils\"\nimport { Chain, UserOperation } from \"../data\"\n\nexport const calcPreVerificationGas = (userOp: UserOperation) => {\n    const ov = DefaultGasOverheads\n    const p = Object.assign(\n        {\n            preVerificationGas: 28000,\n            signature: hexlify(Buffer.alloc(ov.sigSize, 1))\n        },\n        userOp\n    )\n    const packed = arrayify(packUserOp(p, false))\n    const callDataCost = packed.map((x) => (x === 0 ? ov.zeroByte : ov.nonZeroByte)).reduce((sum, x) => sum + x)\n    const ret = Math.round(callDataCost + ov.fixed / ov.bundleSize + ov.perUserOp + ov.perUserOpWord * packed.length)\n    return BigNumber.from(ret)\n}\n\nfunction encode(typevalues: any, forSignature: any) {\n    const types = typevalues.map((typevalue: any) => (typevalue.type === \"bytes\" && forSignature ? \"bytes32\" : typevalue.type))\n    const values = typevalues.map((typevalue: any) =>\n        typevalue.type === \"bytes\" && forSignature ? keccak256(typevalue.val) : typevalue.val\n    )\n    return defaultAbiCoder.encode(types, values)\n}\n\nfunction packUserOp(op: any, forSignature = true) {\n    if (forSignature) {\n        let encoded = defaultAbiCoder.encode([userOpTypeSig as any], [{ ...op, signature: \"0x\" }])\n        encoded = \"0x\" + encoded.slice(66, encoded.length - 64)\n        return encoded\n    }\n    const typevalues = UserOpType.components.map((c) => ({\n        type: c.type,\n        val: op[c.name]\n    }))\n    return encode(typevalues, forSignature)\n}\n\nexport const getPromiseFromOp = async (op: UserOperation) => {\n    const out: any = {}\n    await Promise.all(\n        Object.keys(op).map(async (key) => {\n            out[key] = await (op as any)[key]\n        })\n    )\n    return out\n}\n\nexport async function gasCalculation(txid: string, chain: Chain) {\n    try {\n        const provider = await chain.getProvider()\n        const txReceipt = await provider.getTransactionReceipt(txid)\n        const gasUsed = txReceipt.gasUsed.toNumber()\n        const gasPrice = txReceipt.effectiveGasPrice.toNumber() * 1e-18\n        const gasTotal = gasUsed * gasPrice\n        const chainPrice = await getPriceData(chain.currency!)\n        const gasUSD = gasTotal * chainPrice.toNumber()\n        return { gasUsed, gasUSD }\n    } catch {\n        return { gasUsed: 0, gasUSD: 0 }\n    }\n}\n\nconst PRICE_URL = \"https://min-api.cryptocompare.com/data/price\"\n\nasync function getPriceData(chainCurrency: string) {\n    const data = await sendRequest(`${PRICE_URL}?fsym=${chainCurrency}&tsyms=USD`, \"GET\", \"\", {})\n    const price = await data.json()\n    return price.USD\n}\n\n// Constants\n\nconst DefaultGasOverheads = {\n    fixed: 28000,\n    perUserOp: 18300,\n    perUserOpWord: 4,\n    zeroByte: 4,\n    nonZeroByte: 16,\n    bundleSize: 1,\n    sigSize: 65\n}\n\nconst UserOpType = {\n    components: [\n        { internalType: \"address\", name: \"sender\", type: \"address\" },\n        { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n        { internalType: \"bytes\", name: \"initCode\", type: \"bytes\" },\n        { internalType: \"bytes\", name: \"callData\", type: \"bytes\" },\n        { internalType: \"uint256\", name: \"callGasLimit\", type: \"uint256\" },\n        {\n            internalType: \"uint256\",\n            name: \"verificationGasLimit\",\n            type: \"uint256\"\n        },\n        {\n            internalType: \"uint256\",\n            name: \"preVerificationGas\",\n            type: \"uint256\"\n        },\n        { internalType: \"uint256\", name: \"maxFeePerGas\", type: \"uint256\" },\n        {\n            internalType: \"uint256\",\n            name: \"maxPriorityFeePerGas\",\n            type: \"uint256\"\n        },\n        { internalType: \"bytes\", name: \"paymasterAndData\", type: \"bytes\" },\n        { internalType: \"bytes\", name: \"signature\", type: \"bytes\" }\n    ],\n    internalType: \"struct UserOperation\",\n    name: \"userOp\",\n    type: \"tuple\"\n}\n\nconst userOpTypeSig = {\n    components: [\n        {\n            type: \"address\",\n            name: \"sender\"\n        },\n        {\n            type: \"uint256\",\n            name: \"nonce\"\n        },\n        {\n            type: \"bytes\",\n            name: \"initCode\"\n        },\n        {\n            type: \"bytes\",\n            name: \"callData\"\n        },\n        {\n            type: \"uint256\",\n            name: \"callGasLimit\"\n        },\n        {\n            type: \"uint256\",\n            name: \"verificationGasLimit\"\n        },\n        {\n            type: \"uint256\",\n            name: \"preVerificationGas\"\n        },\n        {\n            type: \"uint256\",\n            name: \"maxFeePerGas\"\n        },\n        {\n            type: \"uint256\",\n            name: \"maxPriorityFeePerGas\"\n        },\n        {\n            type: \"bytes\",\n            name: \"paymasterAndData\"\n        },\n        {\n            type: \"bytes\",\n            name: \"signature\"\n        }\n    ],\n    name: \"userOp\",\n    type: \"tuple\"\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3366a295d9954044c18897a1459c10c5b5cc8e21","contentHash":"4cfaceefd87734faae480226d6118ba3b1bcf2e9267c8c8d3e4d2270317512d0"},"/Users/albertsu/Desktop/sdk/src/data/WalletIdentifier.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/WalletIdentifier.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":43}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":33}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":27}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":54}},"6":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"7":{"start":{"line":15,"column":12},"end":{"line":15,"column":113}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":37},"end":{"line":9,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":40},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":46},"end":{"line":18,"column":5}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":26},"end":{"line":6,"column":35}},"type":"default-arg","locations":[{"start":{"line":6,"column":34},"end":{"line":6,"column":35}}],"line":6},"1":{"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":38}},"type":"default-arg","locations":[{"start":{"line":10,"column":33},"end":{"line":10,"column":38}}],"line":10},"2":{"loc":{"start":{"line":13,"column":30},"end":{"line":13,"column":44}},"type":"default-arg","locations":[{"start":{"line":13,"column":39},"end":{"line":13,"column":44}}],"line":13},"3":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"4":{"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":38}},"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":28}},{"start":{"line":14,"column":32},"end":{"line":14,"column":38}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":5,"6":5,"7":5,"8":5,"9":1},"f":{"0":5,"1":5,"2":5},"b":{"0":[0],"1":[5],"2":[0],"3":[5,0],"4":[5,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/WalletIdentifier.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/WalletIdentifier.ts"],"names":[],"mappings":";;;AAAA,4CAAyD;AAEzD,MAAa,gBAAgB;IAKzB,YAAY,QAAgB,EAAE,KAAK,GAAG,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACtB,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK;QAC9B,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAA;IACjD,CAAC;IAED,yBAAyB,CAAC,MAAM,GAAG,KAAK;QACpC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,EAAE;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAA,iBAAS,EAAC,IAAA,mBAAW,EAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;SAC7E;QACD,OAAO,IAAI,CAAC,UAAW,CAAA;IAC3B,CAAC;CACJ;AApBD,4CAoBC","sourcesContent":["import { keccak256, toUtf8Bytes } from \"ethers/lib/utils\"\n\nexport class WalletIdentifier {\n    uniqueId: string\n    index: number\n    identifier?: string\n\n    constructor(uniqueId: string, index = 0) {\n        this.uniqueId = uniqueId\n        this.index = index\n    }\n\n    async getIdentifier(forced = false): Promise<string> {\n        return this.getIdentifierFromuniqueId(forced)\n    }\n\n    getIdentifierFromuniqueId(forced = false): string {\n        if (!this.identifier || forced) {\n            this.identifier = keccak256(toUtf8Bytes(`${this.uniqueId}-${this.index}`))\n        }\n        return this.identifier!\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a21a4a4f29e4df5cb42f7e683334c74a7c38efac","contentHash":"b6f8abaa2b9e340879441b529ebec3807de639ac4be2d31df59225a8a2b61c7f"},"/Users/albertsu/Desktop/sdk/src/data/NFT.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/NFT.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":37}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":26}},"7":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":63}},"9":{"start":{"line":14,"column":8},"end":{"line":17,"column":9}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":35}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":19}},"12":{"start":{"line":20,"column":22},"end":{"line":20,"column":72}},"13":{"start":{"line":21,"column":25},"end":{"line":21,"column":56}},"14":{"start":{"line":22,"column":21},"end":{"line":22,"column":81}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":34}},"16":{"start":{"line":26,"column":22},"end":{"line":26,"column":72}},"17":{"start":{"line":27,"column":25},"end":{"line":27,"column":56}},"18":{"start":{"line":28,"column":21},"end":{"line":28,"column":88}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":34}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":28}},"21":{"start":{"line":35,"column":22},"end":{"line":35,"column":72}},"22":{"start":{"line":36,"column":8},"end":{"line":40,"column":9}},"23":{"start":{"line":37,"column":29},"end":{"line":37,"column":54}},"24":{"start":{"line":38,"column":25},"end":{"line":38,"column":48}},"25":{"start":{"line":39,"column":12},"end":{"line":39,"column":95}},"26":{"start":{"line":41,"column":8},"end":{"line":41,"column":29}},"27":{"start":{"line":44,"column":25},"end":{"line":44,"column":56}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":49}},"29":{"start":{"line":48,"column":25},"end":{"line":48,"column":56}},"30":{"start":{"line":49,"column":8},"end":{"line":49,"column":51}},"31":{"start":{"line":52,"column":22},"end":{"line":52,"column":72}},"32":{"start":{"line":53,"column":25},"end":{"line":53,"column":56}},"33":{"start":{"line":54,"column":21},"end":{"line":54,"column":89}},"34":{"start":{"line":55,"column":8},"end":{"line":55,"column":34}},"35":{"start":{"line":58,"column":22},"end":{"line":58,"column":72}},"36":{"start":{"line":59,"column":25},"end":{"line":59,"column":56}},"37":{"start":{"line":60,"column":21},"end":{"line":60,"column":94}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":34}},"39":{"start":{"line":64,"column":20},"end":{"line":64,"column":33}},"40":{"start":{"line":65,"column":8},"end":{"line":65,"column":60}},"41":{"start":{"line":68,"column":20},"end":{"line":68,"column":33}},"42":{"start":{"line":69,"column":8},"end":{"line":69,"column":57}},"43":{"start":{"line":72,"column":20},"end":{"line":72,"column":33}},"44":{"start":{"line":73,"column":8},"end":{"line":73,"column":38}},"45":{"start":{"line":76,"column":20},"end":{"line":76,"column":33}},"46":{"start":{"line":77,"column":8},"end":{"line":77,"column":55}},"47":{"start":{"line":80,"column":20},"end":{"line":80,"column":33}},"48":{"start":{"line":81,"column":8},"end":{"line":81,"column":54}},"49":{"start":{"line":84,"column":20},"end":{"line":84,"column":33}},"50":{"start":{"line":85,"column":8},"end":{"line":85,"column":56}},"51":{"start":{"line":88,"column":20},"end":{"line":88,"column":33}},"52":{"start":{"line":89,"column":8},"end":{"line":89,"column":69}},"53":{"start":{"line":92,"column":0},"end":{"line":92,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":55},"end":{"line":18,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":74},"end":{"line":24,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":71},"end":{"line":30,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":23},"end":{"line":33,"column":5}},"line":31},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":60},"end":{"line":42,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":68},"end":{"line":46,"column":5}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":69},"end":{"line":50,"column":5}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":70},"end":{"line":56,"column":5}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":83},"end":{"line":62,"column":5}},"line":57},"9":{"name":"(anonymous_9)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":87},"end":{"line":66,"column":5}},"line":63},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":84},"end":{"line":70,"column":5}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":34},"end":{"line":74,"column":5}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":82},"end":{"line":78,"column":5}},"line":75},"13":{"name":"(anonymous_13)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":81},"end":{"line":82,"column":5}},"line":79},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":83},"end":{"line":86,"column":5}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":96},"end":{"line":90,"column":5}},"line":87}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":25},"end":{"line":9,"column":53}},"type":"default-arg","locations":[{"start":{"line":9,"column":36},"end":{"line":9,"column":53}}],"line":9},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"2":{"loc":{"start":{"line":14,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":17,"column":9}},{"start":{"line":14,"column":8},"end":{"line":17,"column":9}}],"line":14},"3":{"loc":{"start":{"line":19,"column":36},"end":{"line":19,"column":72}},"type":"default-arg","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":72}}],"line":19},"4":{"loc":{"start":{"line":25,"column":33},"end":{"line":25,"column":69}},"type":"default-arg","locations":[{"start":{"line":25,"column":43},"end":{"line":25,"column":69}}],"line":25},"5":{"loc":{"start":{"line":34,"column":22},"end":{"line":34,"column":58}},"type":"default-arg","locations":[{"start":{"line":34,"column":32},"end":{"line":34,"column":58}}],"line":34},"6":{"loc":{"start":{"line":36,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":40,"column":9}},{"start":{"line":36,"column":8},"end":{"line":40,"column":9}}],"line":36},"7":{"loc":{"start":{"line":43,"column":30},"end":{"line":43,"column":66}},"type":"default-arg","locations":[{"start":{"line":43,"column":40},"end":{"line":43,"column":66}}],"line":43},"8":{"loc":{"start":{"line":47,"column":31},"end":{"line":47,"column":67}},"type":"default-arg","locations":[{"start":{"line":47,"column":41},"end":{"line":47,"column":67}}],"line":47},"9":{"loc":{"start":{"line":51,"column":32},"end":{"line":51,"column":68}},"type":"default-arg","locations":[{"start":{"line":51,"column":42},"end":{"line":51,"column":68}}],"line":51},"10":{"loc":{"start":{"line":57,"column":45},"end":{"line":57,"column":81}},"type":"default-arg","locations":[{"start":{"line":57,"column":55},"end":{"line":57,"column":81}}],"line":57},"11":{"loc":{"start":{"line":63,"column":49},"end":{"line":63,"column":85}},"type":"default-arg","locations":[{"start":{"line":63,"column":59},"end":{"line":63,"column":85}}],"line":63},"12":{"loc":{"start":{"line":67,"column":46},"end":{"line":67,"column":82}},"type":"default-arg","locations":[{"start":{"line":67,"column":56},"end":{"line":67,"column":82}}],"line":67},"13":{"loc":{"start":{"line":75,"column":44},"end":{"line":75,"column":80}},"type":"default-arg","locations":[{"start":{"line":75,"column":54},"end":{"line":75,"column":80}}],"line":75},"14":{"loc":{"start":{"line":79,"column":43},"end":{"line":79,"column":79}},"type":"default-arg","locations":[{"start":{"line":79,"column":53},"end":{"line":79,"column":79}}],"line":79},"15":{"loc":{"start":{"line":83,"column":45},"end":{"line":83,"column":81}},"type":"default-arg","locations":[{"start":{"line":83,"column":55},"end":{"line":83,"column":81}}],"line":83},"16":{"loc":{"start":{"line":87,"column":58},"end":{"line":87,"column":94}},"type":"default-arg","locations":[{"start":{"line":87,"column":68},"end":{"line":87,"column":94}}],"line":87}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0],"4":[0],"5":[0],"6":[0,0],"7":[0],"8":[0],"9":[0],"10":[0],"11":[0],"12":[0],"13":[0],"14":[0],"15":[0],"16":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/NFT.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/NFT.ts"],"names":[],"mappings":"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","sourcesContent":["import { Contract, ethers } from \"ethers\"\nimport { getChainFromData } from \"./Chain\"\nimport { ERC_721_ABI, TransactionData } from \"../common\"\nimport { EnvOption } from \"../config\"\nimport { MissingParameterError } from \"../errors\"\n\nexport class NFT {\n    address = \"\"\n    contract?: Contract\n\n    constructor(address: string, location = \"NFT constructor\") {\n        if (!address) {\n            throw new MissingParameterError(location)\n        }\n        if (ethers.utils.isAddress(address)) {\n            this.address = address\n            return\n        }\n    }\n\n    async approve(spender: string, tokenId: number, options: EnvOption = (globalThis as any).globalEnvOption): Promise<any> {\n        const chain = await getChainFromData(options.chain)\n        const contract = await this.getContract(options)\n        const data = await contract.populateTransaction.approve(spender, tokenId)\n        return { ...data, chain }\n    }\n\n    async approveForAll(spender: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<any> {\n        const chain = await getChainFromData(options.chain)\n        const contract = await this.getContract(options)\n        const data = await contract.populateTransaction.setApprovalForAll(spender, true)\n        return { ...data, chain }\n    }\n\n    async getAddress(): Promise<string> {\n        return this.address\n    }\n\n    async getContract(options: EnvOption = (globalThis as any).globalEnvOption): Promise<Contract> {\n        const chain = await getChainFromData(options.chain)\n        if (!this.contract) {\n            const provider = await chain.getProvider()\n            const addr = await this.getAddress()\n            this.contract = new ethers.Contract(addr, ERC_721_ABI, provider)\n        }\n        return this.contract\n    }\n\n    async getBalance(address: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const contract = await this.getContract(options)\n        return await contract.balanceOf(address)\n    }\n\n    async getApproved(tokenId: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const contract = await this.getContract(options)\n        return await contract.getApproved(tokenId)\n    }\n\n    async revokeForAll(spender: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<any> {\n        const chain = await getChainFromData(options.chain)\n        const contract = await this.getContract(options)\n        const data = await contract.populateTransaction.setApprovalForAll(spender, false)\n        return { ...data, chain }\n    }\n\n    async transfer(\n        sender: string,\n        spender: string,\n        tokenId: number,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<any> {\n        const chain = await getChainFromData(options.chain)\n        const contract = await this.getContract(options)\n        const data = await contract.populateTransaction.transferFrom(sender, spender, tokenId)\n        return { ...data, chain }\n    }\n\n    static async approve(\n        data: string,\n        spender: string,\n        tokenId: number,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<TransactionData> {\n        const nft = new NFT(data)\n        return await nft.approve(spender, tokenId, options)\n    }\n\n    static async approveForAll(\n        data: string,\n        spender: string,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<TransactionData> {\n        const nft = new NFT(data)\n        return await nft.approveForAll(spender, options)\n    }\n\n    static async getAddress(data: string): Promise<string> {\n        const nft = new NFT(data)\n        return await nft.getAddress()\n    }\n\n    static async getApproved(data: string, tokenId: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const nft = new NFT(data)\n        return await nft.getApproved(tokenId, options)\n    }\n\n    static async getBalance(data: string, address: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const nft = new NFT(data)\n        return await nft.getBalance(address, options)\n    }\n\n    static async revokeForAll(\n        data: string,\n        spender: string,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<TransactionData> {\n        const nft = new NFT(data)\n        return await nft.revokeForAll(spender, options)\n    }\n\n    static async transfer(\n        data: string,\n        sender: string,\n        spender: string,\n        tokenId: number,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<TransactionData> {\n        const nft = new NFT(data)\n        return await nft.transfer(sender, spender, tokenId, options)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7dff314a83a683ec57e2a16b184b8dae56afb5e2","contentHash":"a45aba1b43a2670960d97ebcce3556c95d9098b2391383f400aceb3b19e41a5b"},"/Users/albertsu/Desktop/sdk/src/data/types.ts":{"path":"/Users/albertsu/Desktop/sdk/src/data/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/data/types.ts","sources":["/Users/albertsu/Desktop/sdk/src/data/types.ts"],"names":[],"mappings":"","sourcesContent":["import { BigNumberish } from \"ethers\"\n\nexport interface ChainInput {\n    chainId?: string\n    rpcUrl?: string\n    chainName?: string\n    bundlerUrl?: string\n}\n\nexport type FactoryCreateAccountParams = {\n    initializerCallData: string\n    implementation: string\n    data: string\n}\n\nexport type InitCodeParams = {\n    entryPointAddress: string\n    factoryAddress: string\n    implementationAddress?: string\n    loginData: LoginData\n    verificationData: string[]\n    verificationAddresses: string[]\n}\n\nexport type Addresses = {\n    [key: string]: string\n}\n\n/**\n * @param loginType 0 = EOA, 1 = Twitter\n * @param newFunWalletOwner *social login* Address of the new FunWallet owner, used to stop frontrunning\n * @param index *social login* Hashed with socialHandle and loginType to generate salt\n * @param socialHandle *social login*\n * @param salt *EOA login* Hashed with loginType to generate salt\n */\n\nexport type LoginData = {\n    loginType?: number\n    newFunWalletOwner?: string\n    index?: number\n    socialHandle?: string\n    salt?: string\n}\n\nexport type WalletInitialzeParams = {\n    _newEntryPoint: string\n    validationInitData: string\n}\n\nexport type WalletSignature = {\n    authType?: number\n    userId: string\n    signature: string\n    extraData?: string\n}\n\nexport type UserOperation = {\n    sender: string\n    nonce: BigNumberish\n    initCode?: string\n    callData: string\n    callGasLimit: BigNumberish\n    verificationGasLimit: BigNumberish\n    preVerificationGas?: BigNumberish\n    maxFeePerGas: BigNumberish\n    maxPriorityFeePerGas: BigNumberish\n    paymasterAndData?: string\n    signature?: string\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"669184c93a8d4a739a5c820a9babccc71cfd2f43","contentHash":"d03fab5eebc953e06d66dfc6d7096455486c8408d9f0833c2698db123597d8d4"},"/Users/albertsu/Desktop/sdk/src/apis/ContractApis.ts":{"path":"/Users/albertsu/Desktop/sdk/src/apis/ContractApis.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":47}},"4":{"start":{"line":7,"column":37},"end":{"line":7,"column":135}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}}},"fnMap":{"0":{"name":"getContractAbi","decl":{"start":{"line":6,"column":15},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":58},"end":{"line":9,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":44},"end":{"line":6,"column":56}},"type":"default-arg","locations":[{"start":{"line":6,"column":51},"end":{"line":6,"column":56}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":1},"f":{"0":0},"b":{"0":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/apis/ContractApis.ts","sources":["/Users/albertsu/Desktop/sdk/src/apis/ContractApis.ts"],"names":[],"mappings":";;;AAAA,mDAA6C;AAC7C,gDAAkD;AAE3C,KAAK,UAAU,cAAc,CAAC,YAAoB,EAAE,IAAI,GAAG,KAAK;IACnE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,MAAM,IAAA,yBAAc,EAAC,mBAAO,EAAE,YAAY,YAAY,SAAS,IAAI,EAAE,CAAC,CAAA;IACvG,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,CAAA;AACnC,CAAC;AAHD,wCAGC","sourcesContent":["import { API_URL } from \"../common/constants\"\nimport { sendGetRequest } from \"../utils/ApiUtils\"\n\nexport async function getContractAbi(contractName: string, mode = \"abi\"): Promise<any> {\n    const { name, abi, addresses } = await sendGetRequest(API_URL, `contract/${contractName}?mode=${mode}`)\n    return { name, abi, addresses }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"68445fb9e2e9303a17b46dae9b232a185f4c8f90","contentHash":"d1d68724e48839234f460ac996d4a0a07ee49a5c6cc4b5d13780a8225f862f0a"},"/Users/albertsu/Desktop/sdk/src/config/types.ts":{"path":"/Users/albertsu/Desktop/sdk/src/config/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/config/types.ts","sources":["/Users/albertsu/Desktop/sdk/src/config/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Chain } from \"../data\"\n\nexport interface EnvOption {\n    chain?: string | Chain\n    gasSponsor?: {\n        sponsorAddress?: string\n        token?: string\n    }\n    fee?: {\n        token?: string\n        amount?: number\n        gasPercent?: number\n        recipient?: string\n        oracle?: string\n    }\n    sendTxLater?: boolean\n}\n\nexport interface GlobalEnvOption extends EnvOption {\n    apiKey?: string\n    orgInfo?: {\n        name?: string\n        id?: string\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c0903f3923586196b7895c7964a0d2af193e8bff","contentHash":"a547249a08cf172c00f99f395f729d819328378075915e05159bec87faf8c934"},"/Users/albertsu/Desktop/sdk/src/wallet/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/wallet/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":1,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":5,"2":0,"3":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/wallet/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/wallet/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,8CAA2B","sourcesContent":["export * from \"./FunWallet\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"580cc64e6c0f261b720af7d8dc6f218552e5681a","contentHash":"42ca4a2c1d1b3a5280304c86f8c02e52c7c8085ae4dd5271150fb01d457e30b3"},"/Users/albertsu/Desktop/sdk/src/wallet/FunWallet.ts":{"path":"/Users/albertsu/Desktop/sdk/src/wallet/FunWallet.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":50}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":33}},"8":{"start":{"line":10,"column":17},"end":{"line":10,"column":37}},"9":{"start":{"line":11,"column":19},"end":{"line":11,"column":41}},"10":{"start":{"line":12,"column":19},"end":{"line":12,"column":41}},"11":{"start":{"line":13,"column":16},"end":{"line":13,"column":35}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":16}},"13":{"start":{"line":29,"column":8},"end":{"line":46,"column":10}},"14":{"start":{"line":30,"column":26},"end":{"line":30,"column":77}},"15":{"start":{"line":31,"column":30},"end":{"line":31,"column":97}},"16":{"start":{"line":32,"column":30},"end":{"line":32,"column":66}},"17":{"start":{"line":33,"column":31},"end":{"line":39,"column":13}},"18":{"start":{"line":40,"column":24},"end":{"line":40,"column":61}},"19":{"start":{"line":41,"column":12},"end":{"line":45,"column":15}},"20":{"start":{"line":47,"column":36},"end":{"line":47,"column":42}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":71}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":107}},"23":{"start":{"line":59,"column":22},"end":{"line":59,"column":73}},"24":{"start":{"line":60,"column":27},"end":{"line":64,"column":9}},"25":{"start":{"line":65,"column":25},"end":{"line":65,"column":58}},"26":{"start":{"line":66,"column":35},"end":{"line":66,"column":94}},"27":{"start":{"line":67,"column":23},"end":{"line":67,"column":55}},"28":{"start":{"line":68,"column":25},"end":{"line":68,"column":91}},"29":{"start":{"line":69,"column":55},"end":{"line":69,"column":79}},"30":{"start":{"line":70,"column":25},"end":{"line":70,"column":127}},"31":{"start":{"line":71,"column":31},"end":{"line":71,"column":35}},"32":{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},"33":{"start":{"line":73,"column":12},"end":{"line":80,"column":13}},"34":{"start":{"line":74,"column":32},"end":{"line":74,"column":70}},"35":{"start":{"line":75,"column":16},"end":{"line":75,"column":96}},"36":{"start":{"line":78,"column":32},"end":{"line":78,"column":72}},"37":{"start":{"line":79,"column":16},"end":{"line":79,"column":96}},"38":{"start":{"line":82,"column":26},"end":{"line":89,"column":9}},"39":{"start":{"line":90,"column":22},"end":{"line":90,"column":59}},"40":{"start":{"line":91,"column":8},"end":{"line":91,"column":39}},"41":{"start":{"line":94,"column":20},"end":{"line":94,"column":38}},"42":{"start":{"line":95,"column":8},"end":{"line":145,"column":9}},"43":{"start":{"line":96,"column":12},"end":{"line":99,"column":13}},"44":{"start":{"line":97,"column":31},"end":{"line":97,"column":107}},"45":{"start":{"line":98,"column":16},"end":{"line":98,"column":82}},"46":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"47":{"start":{"line":101,"column":16},"end":{"line":101,"column":53}},"48":{"start":{"line":103,"column":26},"end":{"line":103,"column":53}},"49":{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},"50":{"start":{"line":105,"column":16},"end":{"line":105,"column":59}},"51":{"start":{"line":108,"column":16},"end":{"line":108,"column":53}},"52":{"start":{"line":110,"column":12},"end":{"line":143,"column":13}},"53":{"start":{"line":111,"column":16},"end":{"line":111,"column":83}},"54":{"start":{"line":113,"column":17},"end":{"line":143,"column":13}},"55":{"start":{"line":114,"column":34},"end":{"line":119,"column":17}},"56":{"start":{"line":115,"column":20},"end":{"line":118,"column":22}},"57":{"start":{"line":120,"column":43},"end":{"line":120,"column":50}},"58":{"start":{"line":121,"column":16},"end":{"line":121,"column":51}},"59":{"start":{"line":122,"column":34},"end":{"line":122,"column":93}},"60":{"start":{"line":123,"column":26},"end":{"line":123,"column":50}},"61":{"start":{"line":124,"column":33},"end":{"line":124,"column":47}},"62":{"start":{"line":125,"column":34},"end":{"line":125,"column":37}},"63":{"start":{"line":126,"column":16},"end":{"line":129,"column":17}},"64":{"start":{"line":127,"column":20},"end":{"line":127,"column":37}},"65":{"start":{"line":128,"column":20},"end":{"line":128,"column":38}},"66":{"start":{"line":130,"column":16},"end":{"line":137,"column":17}},"67":{"start":{"line":131,"column":44},"end":{"line":131,"column":98}},"68":{"start":{"line":132,"column":37},"end":{"line":132,"column":62}},"69":{"start":{"line":133,"column":38},"end":{"line":133,"column":79}},"70":{"start":{"line":134,"column":40},"end":{"line":134,"column":75}},"71":{"start":{"line":135,"column":34},"end":{"line":135,"column":81}},"72":{"start":{"line":136,"column":20},"end":{"line":136,"column":89}},"73":{"start":{"line":138,"column":16},"end":{"line":138,"column":44}},"74":{"start":{"line":141,"column":31},"end":{"line":141,"column":106}},"75":{"start":{"line":142,"column":16},"end":{"line":142,"column":82}},"76":{"start":{"line":144,"column":12},"end":{"line":144,"column":80}},"77":{"start":{"line":146,"column":8},"end":{"line":146,"column":63}},"78":{"start":{"line":157,"column":24},"end":{"line":157,"column":61}},"79":{"start":{"line":158,"column":22},"end":{"line":158,"column":71}},"80":{"start":{"line":159,"column":28},"end":{"line":159,"column":82}},"81":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"82":{"start":{"line":161,"column":12},"end":{"line":161,"column":46}},"83":{"start":{"line":163,"column":8},"end":{"line":163,"column":73}},"84":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"85":{"start":{"line":165,"column":12},"end":{"line":165,"column":31}},"86":{"start":{"line":167,"column":8},"end":{"line":167,"column":55}},"87":{"start":{"line":170,"column":23},"end":{"line":170,"column":48}},"88":{"start":{"line":171,"column":25},"end":{"line":171,"column":62}},"89":{"start":{"line":172,"column":34},"end":{"line":172,"column":77}},"90":{"start":{"line":173,"column":31},"end":{"line":173,"column":71}},"91":{"start":{"line":174,"column":21},"end":{"line":174,"column":58}},"92":{"start":{"line":175,"column":25},"end":{"line":175,"column":66}},"93":{"start":{"line":176,"column":26},"end":{"line":178,"column":9}},"94":{"start":{"line":179,"column":29},"end":{"line":179,"column":113}},"95":{"start":{"line":179,"column":76},"end":{"line":179,"column":111}},"96":{"start":{"line":180,"column":33},"end":{"line":180,"column":37}},"97":{"start":{"line":181,"column":31},"end":{"line":188,"column":9}},"98":{"start":{"line":189,"column":8},"end":{"line":189,"column":59}},"99":{"start":{"line":197,"column":8},"end":{"line":200,"column":9}},"100":{"start":{"line":198,"column":26},"end":{"line":198,"column":75}},"101":{"start":{"line":199,"column":12},"end":{"line":199,"column":112}},"102":{"start":{"line":201,"column":8},"end":{"line":201,"column":28}},"103":{"start":{"line":205,"column":8},"end":{"line":205,"column":51}},"104":{"start":{"line":206,"column":25},"end":{"line":206,"column":63}},"105":{"start":{"line":207,"column":25},"end":{"line":207,"column":77}},"106":{"start":{"line":208,"column":32},"end":{"line":208,"column":76}},"107":{"start":{"line":209,"column":37},"end":{"line":209,"column":99}},"108":{"start":{"line":210,"column":8},"end":{"line":210,"column":61}},"109":{"start":{"line":214,"column":32},"end":{"line":214,"column":76}},"110":{"start":{"line":215,"column":27},"end":{"line":215,"column":64}},"111":{"start":{"line":216,"column":8},"end":{"line":216,"column":106}},"112":{"start":{"line":219,"column":8},"end":{"line":219,"column":59}},"113":{"start":{"line":228,"column":22},"end":{"line":228,"column":73}},"114":{"start":{"line":229,"column":8},"end":{"line":229,"column":44}},"115":{"start":{"line":230,"column":23},"end":{"line":230,"column":75}},"116":{"start":{"line":231,"column":35},"end":{"line":231,"column":94}},"117":{"start":{"line":232,"column":21},"end":{"line":232,"column":61}},"118":{"start":{"line":233,"column":36},"end":{"line":233,"column":82}},"119":{"start":{"line":234,"column":24},"end":{"line":239,"column":9}},"120":{"start":{"line":240,"column":8},"end":{"line":240,"column":58}},"121":{"start":{"line":241,"column":8},"end":{"line":241,"column":23}},"122":{"start":{"line":251,"column":25},"end":{"line":251,"column":27}},"123":{"start":{"line":252,"column":8},"end":{"line":255,"column":9}},"124":{"start":{"line":253,"column":28},"end":{"line":253,"column":60}},"125":{"start":{"line":254,"column":12},"end":{"line":254,"column":35}},"126":{"start":{"line":256,"column":8},"end":{"line":256,"column":24}},"127":{"start":{"line":275,"column":22},"end":{"line":275,"column":73}},"128":{"start":{"line":276,"column":8},"end":{"line":276,"column":103}},"129":{"start":{"line":292,"column":22},"end":{"line":292,"column":73}},"130":{"start":{"line":293,"column":8},"end":{"line":293,"column":81}},"131":{"start":{"line":311,"column":8},"end":{"line":311,"column":69}},"132":{"start":{"line":331,"column":8},"end":{"line":331,"column":91}},"133":{"start":{"line":351,"column":8},"end":{"line":354,"column":9}},"134":{"start":{"line":352,"column":26},"end":{"line":352,"column":77}},"135":{"start":{"line":353,"column":12},"end":{"line":353,"column":96}},"136":{"start":{"line":355,"column":23},"end":{"line":355,"column":98}},"137":{"start":{"line":356,"column":21},"end":{"line":356,"column":74}},"138":{"start":{"line":357,"column":8},"end":{"line":357,"column":32}},"139":{"start":{"line":360,"column":0},"end":{"line":360,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":24},"end":{"line":50,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":27},"end":{"line":29,"column":28}},"loc":{"start":{"line":29,"column":100},"end":{"line":46,"column":9}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":67},"end":{"line":92,"column":5}},"line":58},"3":{"name":"(anonymous_3)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":64},"end":{"line":147,"column":5}},"line":93},"4":{"name":"(anonymous_4)","decl":{"start":{"line":114,"column":34},"end":{"line":114,"column":35}},"loc":{"start":{"line":114,"column":46},"end":{"line":119,"column":17}},"line":114},"5":{"name":"(anonymous_5)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":99},"end":{"line":168,"column":5}},"line":156},"6":{"name":"(anonymous_6)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":40},"end":{"line":190,"column":5}},"line":169},"7":{"name":"(anonymous_7)","decl":{"start":{"line":179,"column":65},"end":{"line":179,"column":66}},"loc":{"start":{"line":179,"column":76},"end":{"line":179,"column":111}},"line":179},"8":{"name":"(anonymous_8)","decl":{"start":{"line":196,"column":4},"end":{"line":196,"column":5}},"loc":{"start":{"line":196,"column":59},"end":{"line":202,"column":5}},"line":196},"9":{"name":"(anonymous_9)","decl":{"start":{"line":203,"column":4},"end":{"line":203,"column":5}},"loc":{"start":{"line":203,"column":58},"end":{"line":211,"column":5}},"line":203},"10":{"name":"(anonymous_10)","decl":{"start":{"line":212,"column":4},"end":{"line":212,"column":5}},"loc":{"start":{"line":212,"column":76},"end":{"line":217,"column":5}},"line":212},"11":{"name":"(anonymous_11)","decl":{"start":{"line":218,"column":4},"end":{"line":218,"column":5}},"loc":{"start":{"line":218,"column":65},"end":{"line":220,"column":5}},"line":218},"12":{"name":"(anonymous_12)","decl":{"start":{"line":227,"column":4},"end":{"line":227,"column":5}},"loc":{"start":{"line":227,"column":69},"end":{"line":242,"column":5}},"line":227},"13":{"name":"(anonymous_13)","decl":{"start":{"line":250,"column":4},"end":{"line":250,"column":5}},"loc":{"start":{"line":250,"column":63},"end":{"line":257,"column":5}},"line":250},"14":{"name":"(anonymous_14)","decl":{"start":{"line":274,"column":4},"end":{"line":274,"column":5}},"loc":{"start":{"line":274,"column":88},"end":{"line":277,"column":5}},"line":274},"15":{"name":"(anonymous_15)","decl":{"start":{"line":291,"column":4},"end":{"line":291,"column":5}},"loc":{"start":{"line":291,"column":58},"end":{"line":294,"column":5}},"line":291},"16":{"name":"(anonymous_16)","decl":{"start":{"line":310,"column":4},"end":{"line":310,"column":5}},"loc":{"start":{"line":310,"column":23},"end":{"line":312,"column":5}},"line":310},"17":{"name":"(anonymous_17)","decl":{"start":{"line":330,"column":4},"end":{"line":330,"column":5}},"loc":{"start":{"line":330,"column":51},"end":{"line":332,"column":5}},"line":330},"18":{"name":"(anonymous_18)","decl":{"start":{"line":350,"column":4},"end":{"line":350,"column":5}},"loc":{"start":{"line":350,"column":104},"end":{"line":358,"column":5}},"line":350}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":57},"end":{"line":29,"column":95}},"type":"default-arg","locations":[{"start":{"line":29,"column":69},"end":{"line":29,"column":95}}],"line":29},"1":{"loc":{"start":{"line":70,"column":25},"end":{"line":70,"column":127}},"type":"cond-expr","locations":[{"start":{"line":70,"column":80},"end":{"line":70,"column":84}},{"start":{"line":70,"column":87},"end":{"line":70,"column":127}}],"line":70},"2":{"loc":{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},{"start":{"line":72,"column":8},"end":{"line":81,"column":9}}],"line":72},"3":{"loc":{"start":{"line":73,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":80,"column":13}},{"start":{"line":73,"column":12},"end":{"line":80,"column":13}}],"line":73},"4":{"loc":{"start":{"line":95,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":145,"column":9}},{"start":{"line":95,"column":8},"end":{"line":145,"column":9}}],"line":95},"5":{"loc":{"start":{"line":96,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":99,"column":13}},{"start":{"line":96,"column":12},"end":{"line":99,"column":13}}],"line":96},"6":{"loc":{"start":{"line":96,"column":18},"end":{"line":96,"column":79}},"type":"binary-expr","locations":[{"start":{"line":96,"column":18},"end":{"line":96,"column":27}},{"start":{"line":96,"column":32},"end":{"line":96,"column":50}},{"start":{"line":96,"column":54},"end":{"line":96,"column":78}}],"line":96},"7":{"loc":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},{"start":{"line":100,"column":12},"end":{"line":102,"column":13}}],"line":100},"8":{"loc":{"start":{"line":100,"column":16},"end":{"line":100,"column":76}},"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":26}},{"start":{"line":100,"column":30},"end":{"line":100,"column":48}},{"start":{"line":100,"column":52},"end":{"line":100,"column":76}}],"line":100},"9":{"loc":{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":109,"column":13}},{"start":{"line":104,"column":12},"end":{"line":109,"column":13}}],"line":104},"10":{"loc":{"start":{"line":110,"column":12},"end":{"line":143,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":143,"column":13}},{"start":{"line":110,"column":12},"end":{"line":143,"column":13}}],"line":110},"11":{"loc":{"start":{"line":113,"column":17},"end":{"line":143,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":17},"end":{"line":143,"column":13}},{"start":{"line":113,"column":17},"end":{"line":143,"column":13}}],"line":113},"12":{"loc":{"start":{"line":130,"column":16},"end":{"line":137,"column":17}},"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":137,"column":17}},{"start":{"line":130,"column":16},"end":{"line":137,"column":17}}],"line":130},"13":{"loc":{"start":{"line":156,"column":41},"end":{"line":156,"column":79}},"type":"default-arg","locations":[{"start":{"line":156,"column":53},"end":{"line":156,"column":79}}],"line":156},"14":{"loc":{"start":{"line":156,"column":81},"end":{"line":156,"column":97}},"type":"default-arg","locations":[{"start":{"line":156,"column":92},"end":{"line":156,"column":97}}],"line":156},"15":{"loc":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},{"start":{"line":160,"column":8},"end":{"line":162,"column":9}}],"line":160},"16":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{"line":164,"column":8},"end":{"line":166,"column":9}}],"line":164},"17":{"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":57}},"type":"default-arg","locations":[{"start":{"line":196,"column":31},"end":{"line":196,"column":57}}],"line":196},"18":{"loc":{"start":{"line":197,"column":8},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":200,"column":9}},{"start":{"line":197,"column":8},"end":{"line":200,"column":9}}],"line":197},"19":{"loc":{"start":{"line":218,"column":25},"end":{"line":218,"column":63}},"type":"default-arg","locations":[{"start":{"line":218,"column":37},"end":{"line":218,"column":63}}],"line":218},"20":{"loc":{"start":{"line":227,"column":29},"end":{"line":227,"column":67}},"type":"default-arg","locations":[{"start":{"line":227,"column":41},"end":{"line":227,"column":67}}],"line":227},"21":{"loc":{"start":{"line":250,"column":23},"end":{"line":250,"column":61}},"type":"default-arg","locations":[{"start":{"line":250,"column":35},"end":{"line":250,"column":61}}],"line":250},"22":{"loc":{"start":{"line":274,"column":20},"end":{"line":274,"column":46}},"type":"default-arg","locations":[{"start":{"line":274,"column":41},"end":{"line":274,"column":46}}],"line":274},"23":{"loc":{"start":{"line":274,"column":48},"end":{"line":274,"column":86}},"type":"default-arg","locations":[{"start":{"line":274,"column":60},"end":{"line":274,"column":86}}],"line":274},"24":{"loc":{"start":{"line":291,"column":18},"end":{"line":291,"column":56}},"type":"default-arg","locations":[{"start":{"line":291,"column":30},"end":{"line":291,"column":56}}],"line":291},"25":{"loc":{"start":{"line":330,"column":23},"end":{"line":330,"column":49}},"type":"default-arg","locations":[{"start":{"line":330,"column":44},"end":{"line":330,"column":49}}],"line":330},"26":{"loc":{"start":{"line":350,"column":20},"end":{"line":350,"column":46}},"type":"default-arg","locations":[{"start":{"line":350,"column":41},"end":{"line":350,"column":46}}],"line":350},"27":{"loc":{"start":{"line":350,"column":48},"end":{"line":350,"column":62}},"type":"default-arg","locations":[{"start":{"line":350,"column":57},"end":{"line":350,"column":62}}],"line":350},"28":{"loc":{"start":{"line":350,"column":64},"end":{"line":350,"column":102}},"type":"default-arg","locations":[{"start":{"line":350,"column":76},"end":{"line":350,"column":102}}],"line":350},"29":{"loc":{"start":{"line":351,"column":8},"end":{"line":354,"column":9}},"type":"if","locations":[{"start":{"line":351,"column":8},"end":{"line":354,"column":9}},{"start":{"line":351,"column":8},"end":{"line":354,"column":9}}],"line":351}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":5,"13":5,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":5,"21":5,"22":5,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":11,"100":5,"101":5,"102":11,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":2,"128":2,"129":0,"130":0,"131":2,"132":2,"133":3,"134":1,"135":1,"136":2,"137":2,"138":2,"139":1},"f":{"0":5,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":11,"9":0,"10":0,"11":0,"12":0,"13":0,"14":2,"15":0,"16":2,"17":2,"18":3},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0],"14":[0],"15":[0,0],"16":[0,0],"17":[11],"18":[5,6],"19":[0],"20":[0],"21":[0],"22":[0],"23":[2],"24":[0],"25":[0],"26":[0],"27":[0],"28":[2],"29":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/wallet/FunWallet.ts","sources":["/Users/albertsu/Desktop/sdk/src/wallet/FunWallet.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber, constants } from \"ethers\"\nimport { ActionFunction, FirstClassActions } from \"../actions\"\nimport { getAllNFTs, getAllTokens, getLidoWithdrawals, getNFTs, getTokens, storeUserOp } from \"../apis\"\nimport { Auth } from \"../auth\"\nimport { ExecutionReceipt, TransactionData } from \"../common\"\nimport { FACTORY_ABI, WALLET_ABI } from \"../common/constants\"\nimport { EnvOption, parseOptions } from \"../config\"\nimport {\n    Chain,\n    InitCodeParams,\n    LoginData,\n    Token,\n    UserOp,\n    UserOperation,\n    WalletIdentifier,\n    addresstoBytes32,\n    getChainFromData,\n    toBytes32Arr\n} from \"../data\"\nimport { Helper, ParameterFormatError } from \"../errors\"\nimport { WalletAbiManager, WalletOnChainManager } from \"../managers\"\nimport { GaslessSponsor, TokenSponsor } from \"../sponsors\"\nimport { gasCalculation, getUniqueId } from \"../utils\"\n\nexport interface FunWalletParams {\n    uniqueId: string\n    index?: number\n}\n\nexport class FunWallet extends FirstClassActions {\n    identifier: WalletIdentifier\n    abiManager: WalletAbiManager\n    address?: string\n\n    /**\n     * Creates FunWallet object\n     * @constructor\n     * @param {object} params - The parameters for the WalletIdentifier - uniqueId, index\n     */\n    constructor(params: FunWalletParams) {\n        super()\n        const { uniqueId, index } = params\n        this.identifier = new WalletIdentifier(uniqueId, index)\n        this.abiManager = new WalletAbiManager(WALLET_ABI, FACTORY_ABI)\n    }\n\n    /**\n     * Generates UserOp object for a transaction\n     * @param {Auth} auth Auth class instance that signs the transaction\n     * @param {function} transactionFunc Function that returns the data to be used in the transaction\n     * @param {Object} txOptions Options for the transaction\n     * @returns {UserOp}\n     */\n    async _generatePartialUserOp(auth: Auth, transactionFunc: ActionFunction, txOptions: EnvOption) {\n        const chain = await getChainFromData(txOptions.chain)\n        const actionData = {\n            wallet: this,\n            chain,\n            txOptions\n        }\n        const { data } = await transactionFunc(actionData)\n\n        const onChainDataManager = new WalletOnChainManager(chain, this.identifier)\n\n        const sender = await this.getAddress({ chain })\n        const callData = await this._getCallData(onChainDataManager, data, auth, txOptions)\n        const { maxFeePerGas, maxPriorityFeePerGas } = await chain.getFeeData()\n        const initCode = (await onChainDataManager.addressIsContract(sender)) ? \"0x\" : await this._getThisInitCode(chain, auth)\n        let paymasterAndData = \"0x\"\n        if (txOptions.gasSponsor) {\n            if (txOptions.gasSponsor.token) {\n                const sponsor = new TokenSponsor(txOptions)\n                paymasterAndData = (await sponsor.getPaymasterAndData(txOptions)).toLowerCase()\n            } else {\n                const sponsor = new GaslessSponsor(txOptions)\n                paymasterAndData = (await sponsor.getPaymasterAndData(txOptions)).toLowerCase()\n            }\n        }\n\n        const partialOp = {\n            callData,\n            paymasterAndData,\n            sender,\n            maxFeePerGas: maxFeePerGas!,\n            maxPriorityFeePerGas: maxPriorityFeePerGas!,\n            initCode\n        }\n        const nonce = await auth.getNonce(partialOp.sender)\n        return { ...partialOp, nonce }\n    }\n\n    async _getCallData(onChainDataManager: WalletOnChainManager, data: TransactionData, auth: Auth, options: EnvOption) {\n        const fee = { ...options.fee }\n        if (options.fee) {\n            if (!(fee.token || (options.gasSponsor && options.gasSponsor.token))) {\n                const helper = new Helper(\"Fee\", fee, \"fee.token or gasSponsor.token is required\")\n                throw new ParameterFormatError(\"Wallet.execute\", helper)\n            }\n            if (!fee.token && options.gasSponsor && options.gasSponsor.token) {\n                fee.token = options.gasSponsor.token\n            }\n\n            const token = new Token(fee.token!)\n            if (token.isNative) {\n                fee.token = constants.AddressZero\n            } else {\n                fee.token = await token.getAddress()\n            }\n\n            if (fee.amount) {\n                fee.amount = (await token.getDecimalAmount(fee.amount)).toNumber()\n            } else if (fee.gasPercent) {\n                const emptyFunc = async () => {\n                    return {\n                        data,\n                        errorData: { location: \"Wallet.execute\" }\n                    }\n                }\n                const estimateGasOptions = options\n                estimateGasOptions.fee = undefined\n                const actualGas = await this.estimateGas(auth, emptyFunc, estimateGasOptions)\n                let eth = actualGas.getMaxTxCost()\n\n                let percentNum = fee.gasPercent\n                let percentBase = 100\n                while (percentNum % 1 !== 0) {\n                    percentNum *= 10\n                    percentBase *= 10\n                }\n\n                if (!token.isNative) {\n                    const ethTokenPairing = await onChainDataManager.getEthTokenPairing(fee.token!)\n                    const decimals = await token.getDecimals()\n                    const numerator = BigNumber.from(10).pow(decimals)\n                    const denominator = BigNumber.from(10).pow(18) // eth decimals\n                    const price = ethTokenPairing.mul(numerator).div(denominator)\n                    eth = price.mul(numerator).div(eth).mul(percentNum).div(percentBase)\n                }\n\n                fee.amount = eth.toNumber()\n            } else {\n                const helper = new Helper(\"Fee\", fee, \"fee.amount or fee.gasPercent is required\")\n                throw new ParameterFormatError(\"Wallet.execute\", helper)\n            }\n            fee.oracle = await onChainDataManager.chain.getAddress(\"feeOracle\")\n        }\n\n        return this.abiManager.encodeCall({ ...data, ...fee })\n    }\n\n    /**\n     * Executes UserOp\n     * @param {Auth} auth Auth class instance that signs the transaction\n     * @param {function} transactionFunc Function that returns the data to be used in the transaction\n     * @param {Object} txOptions Options for the transaction\n     * @param {bool} estimate Whether to estimate gas or not\n     * @returns {UserOp || receipt}\n     */\n    async execute(\n        auth: Auth,\n        transactionFunc: ActionFunction,\n        txOptions: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        const options = parseOptions(txOptions)\n        const chain = await getChainFromData(options.chain)\n        const estimatedOp = await this.estimateGas(auth, transactionFunc, options)\n        if (estimate) {\n            return estimatedOp.getMaxTxCost()\n        }\n        estimatedOp.op.signature = await auth.signOp(estimatedOp, chain)\n        if (txOptions.sendTxLater) {\n            return estimatedOp\n        }\n        return await this.sendTx(estimatedOp, options)\n    }\n\n    /**\n     * Estimates gas for a transaction\n     * @param {Auth} auth Auth class instance that signs the transaction\n     * @param {function} transactionFunc Function that returns the data to be used in the transaction\n     * @param {Options} txOptions Options for the transaction\n     * @returns\n     */\n    estimateGas = async (\n        auth: Auth,\n        transactionFunc: ActionFunction,\n        txOptions: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<UserOp> => {\n        const chain = await getChainFromData(txOptions.chain)\n        const partialOp = await this._generatePartialUserOp(auth, transactionFunc, txOptions)\n        const signature = await auth.getEstimateGasSignature()\n        const estimateOp: UserOperation = {\n            ...partialOp,\n            signature: signature.toLowerCase(),\n            preVerificationGas: BigNumber.from(0),\n            callGasLimit: BigNumber.from(0),\n            verificationGasLimit: BigNumber.from(10e6)\n        }\n        const res = await chain.estimateOpGas(estimateOp)\n\n        return new UserOp({\n            ...partialOp,\n            ...res,\n            signature\n        })\n    }\n    async _getThisInitCode(chain: Chain, auth: Auth) {\n        const owners = await auth.getOwnerAddr()\n        const uniqueId = await this.identifier.getIdentifier()\n        const entryPointAddress = await chain.getAddress(\"entryPointAddress\")\n        const factoryAddress = await chain.getAddress(\"factoryAddress\")\n        const rbac = await chain.getAddress(\"rbacAddress\")\n        const userAuth = await chain.getAddress(\"userAuthAddress\")\n        const loginData: LoginData = {\n            salt: uniqueId\n        }\n        const rbacInitData = toBytes32Arr(owners.map((owner) => addresstoBytes32(owner)))\n        const userAuthInitData = \"0x\"\n        const initCodeParams: InitCodeParams = {\n            entryPointAddress,\n            factoryAddress,\n            implementationAddress: constants.AddressZero,\n            loginData: loginData,\n            verificationAddresses: [rbac, userAuth],\n            verificationData: [rbacInitData, userAuthInitData]\n        }\n\n        return this.abiManager.getInitCode(initCodeParams)\n    }\n\n    /**\n     * Returns the wallet address\n     * @param {*} options\n     * @returns\n     */\n    async getAddress(options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        if (!this.address) {\n            const chain = await getChainFromData(options.chain)\n            this.address = await new WalletOnChainManager(chain, this.identifier).getWalletAddress()\n        }\n        return this.address!\n    }\n\n    static async getAddress(authId: string, index: number, chain: string | number, apiKey: string): Promise<string> {\n        ;(globalThis as any).globalEnvOption.apiKey = apiKey\n        const uniqueId = await getUniqueId(authId)\n        const chainObj = await getChainFromData(chain.toString())\n        const walletIdentifer = new WalletIdentifier(uniqueId, index)\n        const walletOnChainManager = new WalletOnChainManager(chainObj, walletIdentifer)\n        return await walletOnChainManager.getWalletAddress()\n    }\n\n    static async getAddressOffline(uniqueId: string, index: number, rpcUrl: string, factoryAddress: string) {\n        //offline query\n        const walletIdentifer = new WalletIdentifier(uniqueId, index)\n        const identifier = await walletIdentifer.getIdentifier()\n        return await WalletOnChainManager.getWalletAddress(identifier, rpcUrl, factoryAddress)\n    }\n\n    async sendTx(userOp: UserOp, txOptions: EnvOption = (globalThis as any).globalEnvOption): Promise<ExecutionReceipt> {\n        return await this.sendUserOp(userOp.op, txOptions)\n    }\n\n    /**\n     * Sends a UserOp to the bundler\n     * @param {UserOp} userOp\n     * @param {Options} txOptions Options for the transaction\n     * @returns\n     */\n    async sendUserOp(userOp: UserOperation, txOptions: EnvOption = (globalThis as any).globalEnvOption): Promise<ExecutionReceipt> {\n        const chain = await getChainFromData(txOptions.chain)\n        await chain.sendOpToBundler(userOp)\n        const opHash = await new UserOp(userOp).getOpHashData(chain)\n        const onChainDataManager = new WalletOnChainManager(chain, this.identifier)\n        const txid = await onChainDataManager.getTxId(opHash)\n        const { gasUsed, gasUSD } = await gasCalculation(txid!, chain)\n        const receipt: ExecutionReceipt = {\n            opHash,\n            txid,\n            gasUsed,\n            gasUSD\n        }\n        await storeUserOp(userOp, 0, receipt)\n        return receipt\n    }\n\n    /**\n     *\n     * @param {Auth?} auth Optional Auth class instance that signs the transaction if not already signed\n     * @param {UserOp[]} ops list of UserOps to be sent\n     * @param {*} txOptions\n     * @returns\n     */\n    async sendTxs(ops: UserOp[], txOptions: EnvOption = (globalThis as any).globalEnvOption): Promise<ExecutionReceipt[]> {\n        const receipts: ExecutionReceipt[] = []\n        for (const op of ops) {\n            const receipt = await this.sendTx(op, txOptions)\n            receipts.push(receipt)\n        }\n        return receipts\n    }\n\n    /**\n     * Get all tokens for a specific chain\n     * @param {string} chainId https://chainlist.org/\n     * @param {string} address defaults to the fun wallet address\n     * @param {string} onlyVerifiedTokens If true, only return alchemy tokens that are verified(filters spam) - defaults to false\n     * @returns JSON\n     * {\n     *    \"0xTokenAddress\": {\n     *        \"tokenBalance\": \"0x00001\",\n     *        \"symbol\": \"USDC\",\n     *        \"decimals\": 6,\n     *        \"logo\": \"https://static.alchemyapi.io/images/assets/3408.png\",\n     *        \"price\": 1.0001,\n     *     }\n     * }\n     */\n    async getTokens(onlyVerifiedTokens = false, txOptions: EnvOption = (globalThis as any).globalEnvOption) {\n        const chain = await getChainFromData(txOptions.chain)\n        return await getTokens(chain.chainId!, await this.getAddress(), onlyVerifiedTokens)\n    }\n\n    /**\n     * Given an address and a chain, returns all NFTs owned by that address\n     * @param {string} chainId Use the string version of the chainId\n     * @param {string} address Defaults to this fun wallet address\n     * @returns array\n     * [\n     *     {\n     *       \"address\": \"string\",\n     *       \"token_id\": \"string\",\n     *       \"floor_price\": \"string\",\n     *     }\n     *  ]\n     */\n    async getNFTs(txOptions: EnvOption = (globalThis as any).globalEnvOption) {\n        const chain = await getChainFromData(txOptions.chain)\n        return await getNFTs(chain.chainId!, await this.getAddress())\n    }\n\n    /**\n     * Return all NFTs on all supported chains.\n     * @param {*} address\n     * @param {*} onlyVerifiedTokens\n     * @returns JSON\n     * {\n     *  \"chainId\": [\n     *     {\n     *       \"address\": \"string\",\n     *       \"token_id\": \"string\",\n     *       \"floor_price\": \"string\",\n     *     }\n     *   ]\n     * }\n     */\n    async getAllNFTs() {\n        return await getAllNFTs(await this.getAddress())\n    }\n\n    /**\n     * Get all tokens on all supported chains. Merge tokens by symbol\n     * @param {*} address String, leave null if you want getAllTokens on the instance of this Funwallet\n     * @param {*} onlyVerifiedTokens true if you want to filter out spam tokens(Uses alchemy lists)\n     * @returns JSON of all tokens owned by address\n     * {\n     *    1: {\n     *      \"0xTokenAddress\": {\n     *        \"tokenBalance\": \"0x00001\",\n     *        \"symbol\": \"USDC\",\n     *        \"decimals\": 6,\n     *        \"logo\": \"https://static.alchemyapi.io/images/assets/3408.png\",\n     *        \"price\": 1.0001,\n     *     }\n     *   }\n     * }\n     */\n    async getAllTokens(onlyVerifiedTokens = false) {\n        return await getAllTokens(await this.getAddress(), onlyVerifiedTokens)\n    }\n\n    /**\n     * Get all tokens on all supported chains. Merge tokens by symbol\n     * @param {*} address String, leave null if you want getAllTokens on the instance of this Funwallet\n     * @param {*} onlyVerifiedTokens true if you want to filter out spam tokens(Uses alchemy lists)\n     * @returns JSON of all tokens owned by address\n     * {\n     *    1: {\n     *      \"0xTokenAddress\": {\n     *        \"tokenBalance\": \"0x00001\",\n     *        \"symbol\": \"USDC\",\n     *        \"decimals\": 6,\n     *        \"logo\": \"https://static.alchemyapi.io/images/assets/3408.png\",\n     *        \"price\": 1.0001,\n     *     }\n     *   }\n     * }\n     */\n    async getAssets(onlyVerifiedTokens = false, status = false, txOptions: EnvOption = (globalThis as any).globalEnvOption) {\n        if (status) {\n            const chain = await getChainFromData(txOptions.chain)\n            return await getLidoWithdrawals(chain.chainId!, await this.getAddress())\n        }\n        const tokens = await getAllTokens(await this.getAddress(), onlyVerifiedTokens)\n        const nfts = await getAllNFTs(await this.getAddress())\n        return { tokens, nfts }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"547845237f07fa79991d598eb02c3de584e578d3","contentHash":"2f7707c459e8fd6a406dbf0383103c83ee0beda01d26b037920fdd02e95b0a39"},"/Users/albertsu/Desktop/sdk/src/actions/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":12,"2":12,"3":12,"4":12,"5":12,"6":1,"7":12,"8":0,"9":0,"10":0,"11":1,"12":5,"13":12,"14":12,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1},"f":{"0":12,"1":1,"2":0,"3":5},"b":{"0":[1,1,1],"1":[1,0],"2":[12,0],"3":[12,0],"4":[12,12],"5":[0,12],"6":[12,0],"7":[0,0],"8":[1,1,1],"9":[12,0],"10":[12,12]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,+CAA4B;AAC5B,yCAAsB;AACtB,0CAAuB;AACvB,0CAAuB;AACvB,0CAAuB","sourcesContent":["export * from \"./FirstClass\"\nexport * from \"./Swap\"\nexport * from \"./Token\"\nexport * from \"./Stake\"\nexport * from \"./types\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d292cfec2439ed65cb73433109332d9a61a6dbb","contentHash":"918d0c29fa4fdc20c7eed0becc9ca908d7f6d0d430c96b58910a238bffc8fe00"},"/Users/albertsu/Desktop/sdk/src/actions/FirstClass.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/FirstClass.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":33}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":16},"end":{"line":10,"column":35}},"9":{"start":{"line":11,"column":31},"end":{"line":13,"column":1}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":39}},"11":{"start":{"line":14,"column":30},"end":{"line":16,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":41}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":90}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":89}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":85}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":87}},"17":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":100}},"19":{"start":{"line":34,"column":13},"end":{"line":36,"column":9}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":99}},"21":{"start":{"line":37,"column":23},"end":{"line":37,"column":134}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":78}},"23":{"start":{"line":41,"column":24},"end":{"line":41,"column":47}},"24":{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},"25":{"start":{"line":43,"column":12},"end":{"line":43,"column":66}},"26":{"start":{"line":46,"column":26},"end":{"line":46,"column":75}},"27":{"start":{"line":47,"column":12},"end":{"line":47,"column":204}},"28":{"start":{"line":51,"column":8},"end":{"line":51,"column":88}},"29":{"start":{"line":54,"column":0},"end":{"line":54,"column":46}},"30":{"start":{"line":55,"column":16},"end":{"line":66,"column":1}},"31":{"start":{"line":56,"column":4},"end":{"line":65,"column":6}},"32":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"33":{"start":{"line":58,"column":12},"end":{"line":58,"column":52}},"34":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"35":{"start":{"line":61,"column":12},"end":{"line":61,"column":29}},"36":{"start":{"line":63,"column":24},"end":{"line":63,"column":26}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":76}},"38":{"start":{"line":67,"column":0},"end":{"line":67,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":31},"end":{"line":11,"column":32}},"loc":{"start":{"line":11,"column":42},"end":{"line":13,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":30},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":41},"end":{"line":16,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":88},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":87},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":84},"end":{"line":26,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":85},"end":{"line":29,"column":5}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":87},"end":{"line":39,"column":5}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":79},"end":{"line":49,"column":5}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":89},"end":{"line":52,"column":5}},"line":50},"9":{"name":"(anonymous_9)","decl":{"start":{"line":55,"column":16},"end":{"line":55,"column":17}},"loc":{"start":{"line":55,"column":26},"end":{"line":66,"column":1}},"line":55},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":11},"end":{"line":56,"column":12}},"loc":{"start":{"line":56,"column":23},"end":{"line":65,"column":5}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":32},"end":{"line":18,"column":68}},"type":"default-arg","locations":[{"start":{"line":18,"column":42},"end":{"line":18,"column":68}}],"line":18},"1":{"loc":{"start":{"line":18,"column":70},"end":{"line":18,"column":86}},"type":"default-arg","locations":[{"start":{"line":18,"column":81},"end":{"line":18,"column":86}}],"line":18},"2":{"loc":{"start":{"line":21,"column":31},"end":{"line":21,"column":67}},"type":"default-arg","locations":[{"start":{"line":21,"column":41},"end":{"line":21,"column":67}}],"line":21},"3":{"loc":{"start":{"line":21,"column":69},"end":{"line":21,"column":85}},"type":"default-arg","locations":[{"start":{"line":21,"column":80},"end":{"line":21,"column":85}}],"line":21},"4":{"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":64}},"type":"default-arg","locations":[{"start":{"line":24,"column":38},"end":{"line":24,"column":64}}],"line":24},"5":{"loc":{"start":{"line":24,"column":66},"end":{"line":24,"column":82}},"type":"default-arg","locations":[{"start":{"line":24,"column":77},"end":{"line":24,"column":82}}],"line":24},"6":{"loc":{"start":{"line":27,"column":29},"end":{"line":27,"column":65}},"type":"default-arg","locations":[{"start":{"line":27,"column":39},"end":{"line":27,"column":65}}],"line":27},"7":{"loc":{"start":{"line":27,"column":67},"end":{"line":27,"column":83}},"type":"default-arg","locations":[{"start":{"line":27,"column":78},"end":{"line":27,"column":83}}],"line":27},"8":{"loc":{"start":{"line":30,"column":31},"end":{"line":30,"column":67}},"type":"default-arg","locations":[{"start":{"line":30,"column":41},"end":{"line":30,"column":67}}],"line":30},"9":{"loc":{"start":{"line":30,"column":69},"end":{"line":30,"column":85}},"type":"default-arg","locations":[{"start":{"line":30,"column":80},"end":{"line":30,"column":85}}],"line":30},"10":{"loc":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},{"start":{"line":31,"column":8},"end":{"line":36,"column":9}}],"line":31},"11":{"loc":{"start":{"line":34,"column":13},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":13},"end":{"line":36,"column":9}},{"start":{"line":34,"column":13},"end":{"line":36,"column":9}}],"line":34},"12":{"loc":{"start":{"line":40,"column":23},"end":{"line":40,"column":59}},"type":"default-arg","locations":[{"start":{"line":40,"column":33},"end":{"line":40,"column":59}}],"line":40},"13":{"loc":{"start":{"line":40,"column":61},"end":{"line":40,"column":77}},"type":"default-arg","locations":[{"start":{"line":40,"column":72},"end":{"line":40,"column":77}}],"line":40},"14":{"loc":{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":48,"column":9}},{"start":{"line":42,"column":8},"end":{"line":48,"column":9}}],"line":42},"15":{"loc":{"start":{"line":50,"column":33},"end":{"line":50,"column":69}},"type":"default-arg","locations":[{"start":{"line":50,"column":43},"end":{"line":50,"column":69}}],"line":50},"16":{"loc":{"start":{"line":50,"column":71},"end":{"line":50,"column":87}},"type":"default-arg","locations":[{"start":{"line":50,"column":82},"end":{"line":50,"column":87}}],"line":50},"17":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"18":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{"line":60,"column":8},"end":{"line":62,"column":9}}],"line":60}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[0],"7":[0],"8":[0],"9":[0],"10":[0,0],"11":[0,0],"12":[0],"13":[0],"14":[0,0],"15":[0],"16":[0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/FirstClass.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/FirstClass.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber, Transaction } from \"ethers\"\nimport { _finishUnstake, _requestUnstake, _stake } from \"./Stake\"\nimport { _swap } from \"./Swap\"\nimport { _approve, _transfer } from \"./Token\"\nimport { ApproveParams, FinishUnstakeParams, RequestUnstakeParams, StakeParams, SwapParams, TransferParams } from \"./types\"\nimport { Auth } from \"../auth\"\nimport { ExecutionReceipt } from \"../common/types\"\nimport { EnvOption } from \"../config\"\nimport { UserOp, getChainFromData } from \"../data\"\nimport { Helper, ParameterFormatError } from \"../errors\"\nimport { isContract } from \"../utils\"\n\nconst isRequestUnstakeParams = (input: any) => {\n    return input.amounts !== undefined\n}\nconst isFinishUnstakeParams = (input: any) => {\n    return input.recipient !== undefined\n}\n\nexport abstract class FirstClassActions {\n    abstract execute(\n        auth: Auth,\n        transactionFunc: Function,\n        txOptions: EnvOption,\n        estimate: boolean\n    ): Promise<ExecutionReceipt | UserOp | BigNumber>\n    abstract getAddress(options?: EnvOption): Promise<string>\n\n    async transfer(\n        auth: Auth,\n        input: TransferParams,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        return await this.execute(auth, _transfer(input), options, estimate)\n    }\n\n    async approve(\n        auth: Auth,\n        input: ApproveParams,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        return await this.execute(auth, _approve(input), options, estimate)\n    }\n\n    async swap(\n        auth: Auth,\n        input: SwapParams,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        return await this.execute(auth, _swap(input), options, estimate)\n    }\n\n    async stake(\n        auth: Auth,\n        input: StakeParams,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        return await this.execute(auth, _stake(input), options, estimate)\n    }\n\n    async unstake(\n        auth: Auth,\n        input: RequestUnstakeParams | FinishUnstakeParams,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        if (isRequestUnstakeParams(input)) {\n            return await this.execute(auth, _requestUnstake(input as RequestUnstakeParams), options, estimate)\n        } else if (isFinishUnstakeParams(input)) {\n            return await this.execute(auth, _finishUnstake(input as FinishUnstakeParams), options, estimate)\n        }\n        const helper = new Helper(\"Invalid parameters\", input, \"Must be of type RequestUnstakeParams or FinishUnstakeParams\")\n        throw new ParameterFormatError(\"FirstClass.unstake\", helper)\n    }\n\n    async create(\n        auth: Auth,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        const address = await this.getAddress()\n        if (await isContract(address)) {\n            throw new Error(\"Wallet already exists as contract.\")\n        } else {\n            const chain = await getChainFromData(options.chain)\n            return await this.execRawTx(\n                auth,\n                { to: address, data: \"0x\", nonce: 0, value: BigNumber.from(0), chainId: Number(chain.id), gasLimit: BigNumber.from(0) },\n                options,\n                estimate\n            )\n        }\n    }\n\n    async execRawTx(\n        auth: Auth,\n        input: Transaction,\n        options: EnvOption = (globalThis as any).globalEnvOption,\n        estimate = false\n    ): Promise<ExecutionReceipt | UserOp | BigNumber> {\n        return await this.execute(auth, genCall(input), options, estimate)\n    }\n}\n\nexport const genCall = (data: Transaction) => {\n    return async () => {\n        if (!data.value) {\n            data.value = BigNumber.from(0)\n        }\n        if (!data.data) {\n            data.data = \"0x\"\n        }\n        const gasInfo = {}\n        return { gasInfo, data, errorData: { location: \"action.genCall\" } }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f0a06bfa32647f5ca01955eb2d3c4b3e0c9423ed","contentHash":"90709cd35d6c1ea9703ddfc65d1fb1d1b35853d24148c1d86ed5c64122e36240"},"/Users/albertsu/Desktop/sdk/src/actions/Stake.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/Stake.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":152}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":33}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":31},"end":{"line":10,"column":81}},"9":{"start":{"line":11,"column":15},"end":{"line":26,"column":1}},"10":{"start":{"line":12,"column":4},"end":{"line":25,"column":6}},"11":{"start":{"line":13,"column":28},"end":{"line":13,"column":92}},"12":{"start":{"line":14,"column":21},"end":{"line":14,"column":115}},"13":{"start":{"line":15,"column":26},"end":{"line":23,"column":9}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":35}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}},"16":{"start":{"line":28,"column":24},"end":{"line":49,"column":1}},"17":{"start":{"line":29,"column":4},"end":{"line":48,"column":6}},"18":{"start":{"line":31,"column":34},"end":{"line":31,"column":44}},"19":{"start":{"line":32,"column":22},"end":{"line":32,"column":69}},"20":{"start":{"line":33,"column":32},"end":{"line":33,"column":93}},"21":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"22":{"start":{"line":35,"column":27},"end":{"line":35,"column":144}},"23":{"start":{"line":36,"column":12},"end":{"line":36,"column":96}},"24":{"start":{"line":38,"column":30},"end":{"line":38,"column":89}},"25":{"start":{"line":38,"column":71},"end":{"line":38,"column":85}},"26":{"start":{"line":39,"column":28},"end":{"line":39,"column":122}},"27":{"start":{"line":41,"column":34},"end":{"line":44,"column":10}},"28":{"start":{"line":42,"column":43},"end":{"line":42,"column":85}},"29":{"start":{"line":45,"column":38},"end":{"line":45,"column":121}},"30":{"start":{"line":46,"column":35},"end":{"line":46,"column":88}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":90}},"32":{"start":{"line":50,"column":0},"end":{"line":50,"column":42}},"33":{"start":{"line":51,"column":35},"end":{"line":69,"column":1}},"34":{"start":{"line":52,"column":30},"end":{"line":52,"column":40}},"35":{"start":{"line":53,"column":21},"end":{"line":53,"column":57}},"36":{"start":{"line":54,"column":28},"end":{"line":54,"column":158}},"37":{"start":{"line":56,"column":31},"end":{"line":56,"column":101}},"38":{"start":{"line":58,"column":31},"end":{"line":58,"column":92}},"39":{"start":{"line":59,"column":28},"end":{"line":59,"column":30}},"40":{"start":{"line":60,"column":4},"end":{"line":64,"column":5}},"41":{"start":{"line":60,"column":17},"end":{"line":60,"column":18}},"42":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"43":{"start":{"line":62,"column":12},"end":{"line":62,"column":56}},"44":{"start":{"line":65,"column":38},"end":{"line":67,"column":6}},"45":{"start":{"line":66,"column":8},"end":{"line":66,"column":32}},"46":{"start":{"line":68,"column":4},"end":{"line":68,"column":37}},"47":{"start":{"line":70,"column":23},"end":{"line":111,"column":1}},"48":{"start":{"line":71,"column":4},"end":{"line":110,"column":6}},"49":{"start":{"line":72,"column":26},"end":{"line":72,"column":36}},"50":{"start":{"line":73,"column":25},"end":{"line":73,"column":61}},"51":{"start":{"line":74,"column":32},"end":{"line":74,"column":162}},"52":{"start":{"line":75,"column":42},"end":{"line":75,"column":86}},"53":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"54":{"start":{"line":77,"column":27},"end":{"line":77,"column":102}},"55":{"start":{"line":78,"column":12},"end":{"line":78,"column":95}},"56":{"start":{"line":81,"column":31},"end":{"line":81,"column":77}},"57":{"start":{"line":82,"column":22},"end":{"line":82,"column":109}},"58":{"start":{"line":83,"column":39},"end":{"line":83,"column":151}},"59":{"start":{"line":84,"column":8},"end":{"line":107,"column":9}},"60":{"start":{"line":85,"column":25},"end":{"line":88,"column":13}},"61":{"start":{"line":89,"column":30},"end":{"line":94,"column":13}},"62":{"start":{"line":95,"column":31},"end":{"line":98,"column":13}},"63":{"start":{"line":99,"column":30},"end":{"line":105,"column":13}},"64":{"start":{"line":106,"column":12},"end":{"line":106,"column":39}},"65":{"start":{"line":108,"column":23},"end":{"line":108,"column":89}},"66":{"start":{"line":109,"column":8},"end":{"line":109,"column":91}},"67":{"start":{"line":112,"column":0},"end":{"line":112,"column":40}},"68":{"start":{"line":113,"column":23},"end":{"line":122,"column":1}},"69":{"start":{"line":114,"column":4},"end":{"line":121,"column":5}},"70":{"start":{"line":116,"column":12},"end":{"line":116,"column":64}},"71":{"start":{"line":118,"column":12},"end":{"line":118,"column":64}},"72":{"start":{"line":120,"column":12},"end":{"line":120,"column":29}},"73":{"start":{"line":123,"column":0},"end":{"line":123,"column":40}},"74":{"start":{"line":124,"column":31},"end":{"line":133,"column":1}},"75":{"start":{"line":125,"column":4},"end":{"line":132,"column":5}},"76":{"start":{"line":127,"column":12},"end":{"line":127,"column":64}},"77":{"start":{"line":129,"column":12},"end":{"line":129,"column":64}},"78":{"start":{"line":131,"column":12},"end":{"line":131,"column":22}},"79":{"start":{"line":134,"column":0},"end":{"line":134,"column":56}},"80":{"start":{"line":135,"column":17},"end":{"line":144,"column":1}},"81":{"start":{"line":136,"column":4},"end":{"line":143,"column":5}},"82":{"start":{"line":138,"column":12},"end":{"line":138,"column":64}},"83":{"start":{"line":140,"column":12},"end":{"line":140,"column":64}},"84":{"start":{"line":142,"column":12},"end":{"line":142,"column":22}},"85":{"start":{"line":145,"column":0},"end":{"line":145,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":15},"end":{"line":11,"column":16}},"loc":{"start":{"line":11,"column":27},"end":{"line":26,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":11},"end":{"line":12,"column":12}},"loc":{"start":{"line":12,"column":33},"end":{"line":25,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":24},"end":{"line":28,"column":25}},"loc":{"start":{"line":28,"column":36},"end":{"line":49,"column":1}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":11},"end":{"line":29,"column":12}},"loc":{"start":{"line":29,"column":33},"end":{"line":48,"column":5}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":52},"end":{"line":38,"column":53}},"loc":{"start":{"line":38,"column":71},"end":{"line":38,"column":85}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":31},"end":{"line":42,"column":32}},"loc":{"start":{"line":42,"column":43},"end":{"line":42,"column":85}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":35},"end":{"line":51,"column":36}},"loc":{"start":{"line":51,"column":57},"end":{"line":69,"column":1}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":65,"column":64},"end":{"line":65,"column":65}},"loc":{"start":{"line":65,"column":74},"end":{"line":67,"column":5}},"line":65},"8":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":23},"end":{"line":70,"column":24}},"loc":{"start":{"line":70,"column":35},"end":{"line":111,"column":1}},"line":70},"9":{"name":"(anonymous_9)","decl":{"start":{"line":71,"column":11},"end":{"line":71,"column":12}},"loc":{"start":{"line":71,"column":33},"end":{"line":110,"column":5}},"line":71},"10":{"name":"(anonymous_10)","decl":{"start":{"line":113,"column":23},"end":{"line":113,"column":24}},"loc":{"start":{"line":113,"column":36},"end":{"line":122,"column":1}},"line":113},"11":{"name":"(anonymous_11)","decl":{"start":{"line":124,"column":31},"end":{"line":124,"column":32}},"loc":{"start":{"line":124,"column":44},"end":{"line":133,"column":1}},"line":124},"12":{"name":"(anonymous_12)","decl":{"start":{"line":135,"column":17},"end":{"line":135,"column":18}},"loc":{"start":{"line":135,"column":30},"end":{"line":144,"column":1}},"line":135}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},{"start":{"line":34,"column":8},"end":{"line":37,"column":9}}],"line":34},"1":{"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":92}},"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":18}},{"start":{"line":34,"column":22},"end":{"line":34,"column":38}},{"start":{"line":34,"column":42},"end":{"line":34,"column":60}},{"start":{"line":34,"column":64},"end":{"line":34,"column":92}}],"line":34},"2":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":75}},"type":"cond-expr","locations":[{"start":{"line":43,"column":31},"end":{"line":43,"column":47}},{"start":{"line":43,"column":50},"end":{"line":43,"column":75}}],"line":43},"3":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61},"4":{"loc":{"start":{"line":66,"column":15},"end":{"line":66,"column":31}},"type":"cond-expr","locations":[{"start":{"line":66,"column":25},"end":{"line":66,"column":26}},{"start":{"line":66,"column":29},"end":{"line":66,"column":31}}],"line":66},"5":{"loc":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},{"start":{"line":76,"column":8},"end":{"line":79,"column":9}}],"line":76},"6":{"loc":{"start":{"line":84,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":107,"column":9}},{"start":{"line":84,"column":8},"end":{"line":107,"column":9}}],"line":84},"7":{"loc":{"start":{"line":84,"column":12},"end":{"line":84,"column":94}},"type":"binary-expr","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":34}},{"start":{"line":84,"column":38},"end":{"line":84,"column":65}},{"start":{"line":84,"column":69},"end":{"line":84,"column":94}}],"line":84},"8":{"loc":{"start":{"line":114,"column":4},"end":{"line":121,"column":5}},"type":"switch","locations":[{"start":{"line":115,"column":8},"end":{"line":116,"column":64}},{"start":{"line":117,"column":8},"end":{"line":118,"column":64}},{"start":{"line":119,"column":8},"end":{"line":120,"column":29}}],"line":114},"9":{"loc":{"start":{"line":125,"column":4},"end":{"line":132,"column":5}},"type":"switch","locations":[{"start":{"line":126,"column":8},"end":{"line":127,"column":64}},{"start":{"line":128,"column":8},"end":{"line":129,"column":64}},{"start":{"line":130,"column":8},"end":{"line":131,"column":22}}],"line":125},"10":{"loc":{"start":{"line":136,"column":4},"end":{"line":143,"column":5}},"type":"switch","locations":[{"start":{"line":137,"column":8},"end":{"line":138,"column":64}},{"start":{"line":139,"column":8},"end":{"line":140,"column":64}},{"start":{"line":141,"column":8},"end":{"line":142,"column":22}}],"line":136}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":1,"69":0,"70":0,"71":0,"72":0,"73":1,"74":1,"75":0,"76":0,"77":0,"78":0,"79":1,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[0,0],"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0,0],"9":[0,0,0],"10":[0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/Stake.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/Stake.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber, ethers } from \"ethers\"\nimport { Interface, parseEther } from \"ethers/lib/utils\"\nimport { approveAndExec } from \"./ApproveAndExec\"\nimport { ActionData, ActionFunction, FinishUnstakeParams, FirstClassActionResult, RequestUnstakeParams, StakeParams } from \"./types\"\nimport { TransactionData, WITHDRAW_QUEUE_ABI } from \"../common\"\nimport { Token } from \"../data\"\nimport { Helper, StatusError } from \"../errors\"\n\nconst withdrawQueueInterface = new Interface(WITHDRAW_QUEUE_ABI)\n\nexport const _stake = (params: StakeParams): ActionFunction => {\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const lidoAddress = getLidoAddress(actionData.chain.chainId!.toString())\n\n        const data = { to: lidoAddress!, data: \"0x\", value: `${parseEther(params.amount.toString())}` }\n        const errorData = {\n            location: \"action.stake\",\n            error: {\n                reasonData: {\n                    title: \"Possible reasons:\",\n                    reasons: [\"Incorrect Chain Id - Staking available only on Ethereum mainnet and Goerli\"]\n                }\n            }\n        }\n        return { data, errorData }\n    }\n}\n\nexport const _requestUnstake = (params: RequestUnstakeParams): ActionFunction => {\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        // Approve steth\n        const { chain, wallet } = actionData\n        const steth: string = getSteth(await chain.getChainId())\n        const withdrawalQueue: string = getWithdrawalQueueAddr(await chain.getChainId())\n        if (!steth || !withdrawalQueue || steth.length === 0 || withdrawalQueue.length === 0) {\n            const helper = new Helper(\"Request Unstake\", \"Incorrect Chain Id\", \"Staking available only on Ethereum mainnet and Goerli\")\n            throw new StatusError(\"Lido Finance\", \"\", \"action.requestUnstake\", helper)\n        }\n        const approveAmount: number = params.amounts.reduce((partialSum, a) => partialSum + a, 0)\n        const approveData: TransactionData = await Token.approve(steth, withdrawalQueue, approveAmount, { chain: actionData.chain })\n        // Request Withdrawal\n        const requestWithdrawal = withdrawQueueInterface.encodeFunctionData(\"requestWithdrawals\", [\n            params.amounts.map((amount) => parseEther(amount.toString())),\n            params.recipient ? params.recipient : await wallet.getAddress()\n        ])\n        const requestWithdrawalData: TransactionData = { to: withdrawalQueue, data: requestWithdrawal, value: BigNumber.from(0) }\n        const approveAndExecData = { approve: approveData, exec: requestWithdrawalData }\n        return await approveAndExec(approveAndExecData)(actionData)\n    }\n}\n\nconst getReadyToWithdrawRequests = async (actionData: ActionData) => {\n    const { chain, wallet } = actionData\n    const provider = await actionData.chain.getProvider()\n    const withdrawalQueue = new ethers.Contract(getWithdrawalQueueAddr(await chain.getChainId()), WITHDRAW_QUEUE_ABI, provider)\n    // check withdrawal requests\n    const withdrawalRequests: BigNumber[] = await withdrawalQueue.getWithdrawalRequests(await wallet.getAddress())\n    // get the state of a particular nft\n    const withdrawalStatusTx = await withdrawalQueue.getWithdrawalStatus(withdrawalRequests)\n    const readyToWithdraw: BigNumber[] = []\n    for (let i = 0; i < withdrawalStatusTx.length; i++) {\n        if (withdrawalStatusTx[i].isFinalized) {\n            readyToWithdraw.push(withdrawalRequests[i])\n        }\n    }\n    const readyToWithdrawRequestIds = [...readyToWithdraw].sort((a, b) => {\n        return a.gt(b) ? 1 : -1\n    })\n    return readyToWithdrawRequestIds\n}\n\nexport const _finishUnstake = (params: FinishUnstakeParams): ActionFunction => {\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const { chain } = actionData\n        const provider = await actionData.chain.getProvider()\n        const withdrawalQueue = new ethers.Contract(getWithdrawalQueueAddr(await chain.getChainId()), WITHDRAW_QUEUE_ABI, provider)\n\n        const readyToWithdrawRequestIds = await getReadyToWithdrawRequests(actionData)\n        if (readyToWithdrawRequestIds.length === 0) {\n            const helper = new Helper(\"Finish Unstake\", \" \", \"No ready to withdraw requests\")\n            throw new StatusError(\"Lido Finance\", \"\", \"action.finishUnstake\", helper)\n        }\n\n        // claim batch withdrawal\n        const lastCheckpoint = await withdrawalQueue.getLastCheckpointIndex()\n        const hints = await withdrawalQueue.findCheckpointHints(readyToWithdrawRequestIds, 1, lastCheckpoint)\n        const claimBatchWithdrawalTx = await withdrawalQueue.populateTransaction.claimWithdrawalsTo(\n            readyToWithdrawRequestIds,\n            hints,\n            params.recipient\n        )\n        if (claimBatchWithdrawalTx && claimBatchWithdrawalTx.data && claimBatchWithdrawalTx.to) {\n            const data = {\n                to: claimBatchWithdrawalTx.to.toString(),\n                data: claimBatchWithdrawalTx.data\n            }\n\n            const txDetails = {\n                method: \"finishUnstake\",\n                params: [readyToWithdrawRequestIds, hints, params.recipient],\n                contractAddress: claimBatchWithdrawalTx.to,\n                chainId: actionData.chain.id\n            }\n\n            const reasonData = {\n                title: \"Possible reasons:\",\n                reasons: [\"Incorrect Chain Id - Staking available only on Ethereum mainnet and Goerli\"]\n            }\n\n            const errorData = {\n                location: \"action.unstake.finishUnstake\",\n                error: {\n                    txDetails,\n                    reasonData\n                }\n            }\n            return { data, errorData }\n        }\n        const helper = new Helper(\"Finish Unstake\", \" \", \"Error in batch claim\")\n        throw new StatusError(\"Lido Finance\", \"\", \"action.finishUnstake\", helper)\n    }\n}\n\nexport const getLidoAddress = (chainId: string) => {\n    switch (parseInt(chainId)) {\n        case 1:\n            return \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\"\n        case 5:\n            return \"0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F\"\n        default:\n            return undefined\n    }\n}\n\nexport const getWithdrawalQueueAddr = (chainId: string): string => {\n    switch (parseInt(chainId)) {\n        case 1:\n            return \"0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1\"\n        case 5:\n            return \"0xCF117961421cA9e546cD7f50bC73abCdB3039533\"\n        default:\n            return \"\"\n    }\n}\n\nexport const getSteth = (chainId: string): string => {\n    switch (parseInt(chainId)) {\n        case 1:\n            return \"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84\"\n        case 5:\n            return \"0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F\"\n        default:\n            return \"\"\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6253d02da980d18a1b04315fef11ab4c6047de86","contentHash":"b238acd58382feceab22df398686713a8ae91cccd468e89213c490613e148c75"},"/Users/albertsu/Desktop/sdk/src/actions/ApproveAndExec.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/ApproveAndExec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":32},"end":{"line":6,"column":87}},"5":{"start":{"line":7,"column":18},"end":{"line":9,"column":1}},"6":{"start":{"line":10,"column":33},"end":{"line":14,"column":1}},"7":{"start":{"line":11,"column":51},"end":{"line":11,"column":62}},"8":{"start":{"line":12,"column":45},"end":{"line":12,"column":59}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":123}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":60}},"11":{"start":{"line":16,"column":23},"end":{"line":23,"column":1}},"12":{"start":{"line":17,"column":4},"end":{"line":22,"column":6}},"13":{"start":{"line":18,"column":38},"end":{"line":18,"column":96}},"14":{"start":{"line":19,"column":25},"end":{"line":19,"column":70}},"15":{"start":{"line":20,"column":23},"end":{"line":20,"column":68}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":43}},"17":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":33},"end":{"line":10,"column":34}},"loc":{"start":{"line":10,"column":45},"end":{"line":14,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":23},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":35},"end":{"line":23,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":11},"end":{"line":17,"column":12}},"loc":{"start":{"line":17,"column":33},"end":{"line":22,"column":5}},"line":17}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"f":{"0":0,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/ApproveAndExec.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/ApproveAndExec.ts"],"names":[],"mappings":";;;AAAA,4CAA4C;AAE5C,mDAA0D;AAE1D,MAAM,uBAAuB,GAAG,IAAI,iBAAS,CAAC,gCAAoB,CAAC,CAAA;AACnE,MAAM,SAAS,GAAG;IACd,QAAQ,EAAE,wBAAwB;CACrC,CAAA;AAEM,MAAM,wBAAwB,GAAG,CAAC,MAA4B,EAAU,EAAE;IAC7E,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,IAAI,CAAA;IAC1D,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,OAAO,CAAA;IACvD,OAAO,uBAAuB,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAA;AAC1H,CAAC,CAAA;AAJY,QAAA,wBAAwB,4BAIpC;AAEM,MAAM,cAAc,GAAG,CAAC,MAA4B,EAAkB,EAAE;IAC3E,OAAO,KAAK,EAAE,UAAsB,EAAmC,EAAE;QACrE,MAAM,qBAAqB,GAAG,MAAM,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAA;QACxF,MAAM,QAAQ,GAAG,IAAA,gCAAwB,EAAC,MAAM,CAAC,CAAA;QACjD,MAAM,MAAM,GAAG,EAAE,EAAE,EAAE,qBAAqB,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAA;QAC5D,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,CAAA;IACtC,CAAC,CAAA;AACL,CAAC,CAAA;AAPY,QAAA,cAAc,kBAO1B","sourcesContent":["import { Interface } from \"ethers/lib/utils\"\nimport { ActionData, ActionFunction, ApproveAndExecParams, FirstClassActionResult } from \"./types\"\nimport { APPROVE_AND_EXEC_ABI } from \"../common/constants\"\n\nconst approveAndExecInterface = new Interface(APPROVE_AND_EXEC_ABI)\nconst errorData = {\n    location: \"actions.approveAndExec\"\n}\n\nexport const approveAndExecToCalldata = (params: ApproveAndExecParams): string => {\n    const { to: dest, value, data: executeData } = params.exec\n    const { to: token, data: approveData } = params.approve\n    return approveAndExecInterface.encodeFunctionData(\"approveAndExecute\", [dest, value, executeData, token, approveData])\n}\n\nexport const approveAndExec = (params: ApproveAndExecParams): ActionFunction => {\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const approveAndExecAddress = await actionData.chain.getAddress(\"approveAndExecAddress\")\n        const calldata = approveAndExecToCalldata(params)\n        const txData = { to: approveAndExecAddress, data: calldata }\n        return { data: txData, errorData }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cd17b7e706763be84690c4c846c03fbeb34d05af","contentHash":"658a9f72677125141e162669c2832656917e864d962a47ae0d97048c820338a9"},"/Users/albertsu/Desktop/sdk/src/actions/Swap.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/Swap.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":16},"end":{"line":9,"column":35}},"8":{"start":{"line":10,"column":20},"end":{"line":10,"column":49}},"9":{"start":{"line":11,"column":25},"end":{"line":11,"column":28}},"10":{"start":{"line":12,"column":24},"end":{"line":12,"column":68}},"11":{"start":{"line":13,"column":18},"end":{"line":15,"column":1}},"12":{"start":{"line":16,"column":25},"end":{"line":16,"column":58}},"13":{"start":{"line":17,"column":14},"end":{"line":32,"column":1}},"14":{"start":{"line":18,"column":4},"end":{"line":31,"column":6}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":64}},"16":{"start":{"line":20,"column":24},"end":{"line":20,"column":60}},"17":{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},"18":{"start":{"line":22,"column":25},"end":{"line":22,"column":78}},"19":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"20":{"start":{"line":24,"column":16},"end":{"line":24,"column":56}},"21":{"start":{"line":27,"column":16},"end":{"line":27,"column":126}},"22":{"start":{"line":30,"column":8},"end":{"line":30,"column":83}},"23":{"start":{"line":33,"column":0},"end":{"line":33,"column":22}},"24":{"start":{"line":34,"column":21},"end":{"line":81,"column":1}},"25":{"start":{"line":35,"column":4},"end":{"line":80,"column":6}},"26":{"start":{"line":36,"column":25},"end":{"line":36,"column":61}},"27":{"start":{"line":37,"column":33},"end":{"line":37,"column":86}},"28":{"start":{"line":38,"column":28},"end":{"line":38,"column":76}},"29":{"start":{"line":39,"column":29},"end":{"line":39,"column":78}},"30":{"start":{"line":40,"column":28},"end":{"line":40,"column":76}},"31":{"start":{"line":41,"column":31},"end":{"line":41,"column":111}},"32":{"start":{"line":42,"column":24},"end":{"line":42,"column":52}},"33":{"start":{"line":43,"column":25},"end":{"line":43,"column":54}},"34":{"start":{"line":44,"column":31},"end":{"line":44,"column":64}},"35":{"start":{"line":45,"column":32},"end":{"line":45,"column":66}},"36":{"start":{"line":46,"column":29},"end":{"line":50,"column":9}},"37":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"38":{"start":{"line":52,"column":12},"end":{"line":52,"column":43}},"39":{"start":{"line":54,"column":29},"end":{"line":54,"column":32}},"40":{"start":{"line":55,"column":23},"end":{"line":55,"column":75}},"41":{"start":{"line":56,"column":8},"end":{"line":59,"column":9}},"42":{"start":{"line":57,"column":12},"end":{"line":57,"column":33}},"43":{"start":{"line":58,"column":12},"end":{"line":58,"column":27}},"44":{"start":{"line":60,"column":27},"end":{"line":69,"column":9}},"45":{"start":{"line":70,"column":37},"end":{"line":70,"column":104}},"46":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"47":{"start":{"line":73,"column":12},"end":{"line":73,"column":97}},"48":{"start":{"line":76,"column":12},"end":{"line":76,"column":124}},"49":{"start":{"line":78,"column":23},"end":{"line":78,"column":68}},"50":{"start":{"line":79,"column":8},"end":{"line":79,"column":43}},"51":{"start":{"line":82,"column":19},"end":{"line":97,"column":1}},"52":{"start":{"line":84,"column":20},"end":{"line":84,"column":52}},"53":{"start":{"line":85,"column":21},"end":{"line":85,"column":54}},"54":{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},"55":{"start":{"line":87,"column":8},"end":{"line":87,"column":40}},"56":{"start":{"line":90,"column":8},"end":{"line":90,"column":90}},"57":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"58":{"start":{"line":93,"column":8},"end":{"line":93,"column":41}},"59":{"start":{"line":95,"column":19},"end":{"line":95,"column":72}},"60":{"start":{"line":96,"column":4},"end":{"line":96,"column":33}},"61":{"start":{"line":98,"column":29},"end":{"line":105,"column":1}},"62":{"start":{"line":99,"column":28},"end":{"line":99,"column":79}},"63":{"start":{"line":100,"column":4},"end":{"line":100,"column":73}},"64":{"start":{"line":101,"column":19},"end":{"line":101,"column":87}},"65":{"start":{"line":102,"column":16},"end":{"line":102,"column":134}},"66":{"start":{"line":103,"column":24},"end":{"line":103,"column":70}},"67":{"start":{"line":104,"column":4},"end":{"line":104,"column":23}},"68":{"start":{"line":106,"column":26},"end":{"line":124,"column":1}},"69":{"start":{"line":107,"column":28},"end":{"line":107,"column":80}},"70":{"start":{"line":108,"column":29},"end":{"line":108,"column":83}},"71":{"start":{"line":109,"column":27},"end":{"line":109,"column":82}},"72":{"start":{"line":110,"column":19},"end":{"line":110,"column":90}},"73":{"start":{"line":111,"column":26},"end":{"line":120,"column":5}},"74":{"start":{"line":121,"column":16},"end":{"line":121,"column":80}},"75":{"start":{"line":122,"column":16},"end":{"line":122,"column":62}},"76":{"start":{"line":123,"column":4},"end":{"line":123,"column":18}},"77":{"start":{"line":125,"column":31},"end":{"line":131,"column":1}},"78":{"start":{"line":126,"column":4},"end":{"line":129,"column":5}},"79":{"start":{"line":127,"column":24},"end":{"line":127,"column":55}},"80":{"start":{"line":128,"column":8},"end":{"line":128,"column":50}},"81":{"start":{"line":130,"column":4},"end":{"line":130,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":14},"end":{"line":17,"column":15}},"loc":{"start":{"line":17,"column":26},"end":{"line":32,"column":1}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":11},"end":{"line":18,"column":12}},"loc":{"start":{"line":18,"column":33},"end":{"line":31,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":21},"end":{"line":34,"column":22}},"loc":{"start":{"line":34,"column":51},"end":{"line":81,"column":1}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":11},"end":{"line":35,"column":12}},"loc":{"start":{"line":35,"column":33},"end":{"line":80,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":82,"column":19},"end":{"line":82,"column":20}},"loc":{"start":{"line":82,"column":59},"end":{"line":97,"column":1}},"line":82},"5":{"name":"(anonymous_5)","decl":{"start":{"line":98,"column":29},"end":{"line":98,"column":30}},"loc":{"start":{"line":98,"column":67},"end":{"line":105,"column":1}},"line":98},"6":{"name":"(anonymous_6)","decl":{"start":{"line":106,"column":26},"end":{"line":106,"column":27}},"loc":{"start":{"line":106,"column":70},"end":{"line":124,"column":1}},"line":106},"7":{"name":"(anonymous_7)","decl":{"start":{"line":125,"column":31},"end":{"line":125,"column":32}},"loc":{"start":{"line":125,"column":64},"end":{"line":131,"column":1}},"line":125}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":63}},"type":"cond-expr","locations":[{"start":{"line":19,"column":44},"end":{"line":19,"column":59}},{"start":{"line":19,"column":62},"end":{"line":19,"column":63}}],"line":19},"1":{"loc":{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},{"start":{"line":21,"column":8},"end":{"line":29,"column":9}}],"line":21},"2":{"loc":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},{"start":{"line":23,"column":12},"end":{"line":28,"column":13}}],"line":23},"3":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{"line":51,"column":8},"end":{"line":53,"column":9}}],"line":51},"4":{"loc":{"start":{"line":55,"column":23},"end":{"line":55,"column":75}},"type":"cond-expr","locations":[{"start":{"line":55,"column":41},"end":{"line":55,"column":56}},{"start":{"line":55,"column":59},"end":{"line":55,"column":75}}],"line":55},"5":{"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":64}},"type":"binary-expr","locations":[{"start":{"line":56,"column":15},"end":{"line":56,"column":27}},{"start":{"line":56,"column":31},"end":{"line":56,"column":64}}],"line":56},"6":{"loc":{"start":{"line":68,"column":21},"end":{"line":68,"column":91}},"type":"cond-expr","locations":[{"start":{"line":68,"column":38},"end":{"line":68,"column":52}},{"start":{"line":68,"column":55},"end":{"line":68,"column":91}}],"line":68},"7":{"loc":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},{"start":{"line":72,"column":8},"end":{"line":77,"column":9}}],"line":72},"8":{"loc":{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},{"start":{"line":86,"column":4},"end":{"line":91,"column":5}}],"line":86},"9":{"loc":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},{"start":{"line":92,"column":4},"end":{"line":94,"column":5}}],"line":92},"10":{"loc":{"start":{"line":102,"column":81},"end":{"line":102,"column":133}},"type":"cond-expr","locations":[{"start":{"line":102,"column":90},"end":{"line":102,"column":114}},{"start":{"line":102,"column":117},"end":{"line":102,"column":133}}],"line":102},"11":{"loc":{"start":{"line":117,"column":25},"end":{"line":117,"column":87}},"type":"cond-expr","locations":[{"start":{"line":117,"column":54},"end":{"line":117,"column":80}},{"start":{"line":117,"column":83},"end":{"line":117,"column":87}}],"line":117},"12":{"loc":{"start":{"line":118,"column":26},"end":{"line":118,"column":91}},"type":"cond-expr","locations":[{"start":{"line":118,"column":56},"end":{"line":118,"column":83}},{"start":{"line":118,"column":86},"end":{"line":118,"column":91}}],"line":118},"13":{"loc":{"start":{"line":119,"column":22},"end":{"line":119,"column":87}},"type":"cond-expr","locations":[{"start":{"line":119,"column":49},"end":{"line":119,"column":73}},{"start":{"line":119,"column":76},"end":{"line":119,"column":87}}],"line":119},"14":{"loc":{"start":{"line":126,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":129,"column":5}},{"start":{"line":126,"column":4},"end":{"line":129,"column":5}}],"line":126}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/Swap.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/Swap.ts"],"names":[],"mappings":"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","sourcesContent":["import { Contract } from \"ethers\"\nimport { approveAndExec } from \"./ApproveAndExec\"\nimport {\n    ActionData,\n    ActionFunction,\n    FirstClassActionResult,\n    OneInchSwapParams,\n    OneInchSwapReturn,\n    SwapParams,\n    UniSwapPoolFeeOptions,\n    UniswapParams\n} from \"./types\"\nimport { APPROVE_AND_SWAP_ABI, TransactionData } from \"../common\"\nimport { EnvOption } from \"../config\"\nimport { Token } from \"../data/Token\"\nimport { sendRequest } from \"../utils\"\nimport { fromReadableAmount, oneInchAPIRequest, swapExec } from \"../utils/SwapUtils\"\n\nconst DEFAULT_SLIPPAGE = 0.5 // .5%\n\nconst eth1InchAddress = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"\nconst errorData = {\n    location: \"actions.swap\"\n}\n\nconst oneInchSupported = [1, 56, 137, 31337, 36864, 42161]\n\nexport const _swap = (params: SwapParams): ActionFunction => {\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        params.slippage = params.slippage ? params.slippage : 1\n        const address = await actionData.wallet.getAddress()\n        if (oneInchSupported.includes(parseInt(actionData.chain.id!))) {\n            const data = await _1inchSwap(params, address, actionData.options)\n            if (!data.approveTx) {\n                return { data: data.swapTx, errorData }\n            } else {\n                return await approveAndExec({ approve: data.approveTx, exec: data.swapTx })(actionData)\n            }\n        }\n        return await _uniswapSwap(params, address, actionData.options)(actionData)\n    }\n}\n\nconst _uniswapSwap = (params: UniswapParams, address: string, options: EnvOption): ActionFunction => {\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const provider = await actionData.chain.getProvider()\n\n        const tokenSwapAddress = await actionData.chain.getAddress(\"tokenSwapAddress\")\n        const univ3quoter = await actionData.chain.getAddress(\"univ3quoter\")\n        const univ3factory = await actionData.chain.getAddress(\"univ3factory\")\n        const univ3router = await actionData.chain.getAddress(\"univ3router\")\n\n        const actionContract = new Contract(tokenSwapAddress, APPROVE_AND_SWAP_ABI, provider)\n\n        const tokenIn = new Token(params.in)\n        const tokenOut = new Token(params.out)\n\n        const tokenInAddress = await tokenIn.getAddress(options)\n        const tokenOutAddress = await tokenOut.getAddress(options)\n\n        const uniswapAddrs = {\n            univ3quoter,\n            univ3factory,\n            univ3router\n        }\n\n        if (!params.returnAddress) {\n            params.returnAddress = address\n        }\n\n        let percentDecimal = 100\n        let slippage = params.slippage ? params.slippage : DEFAULT_SLIPPAGE\n        while (slippage < 1 || Math.trunc(slippage) !== slippage) {\n            percentDecimal *= 10\n            slippage *= 10\n        }\n\n        const swapParams = {\n            tokenInAddress,\n            tokenOutAddress,\n            amountIn: params.amount,\n            // optional\n            returnAddress: params.returnAddress,\n            percentDecimal,\n            slippage,\n            poolFee: params.poolFee ? params.poolFee : UniSwapPoolFeeOptions.medium\n        }\n        const { data, to, amount } = await swapExec(provider, uniswapAddrs, swapParams)\n        let swapData\n        if (tokenIn.isNative) {\n            swapData = await actionContract.populateTransaction.executeSwapETH(to, amount, data)\n        } else {\n            swapData = await actionContract.populateTransaction.executeSwapERC20(tokenInAddress, univ3router, amount, data)\n        }\n        const txData = { to: tokenSwapAddress, data: swapData.data }\n        return { data: txData, errorData }\n    }\n}\n\nconst _1inchSwap = async (swapParams: OneInchSwapParams, address: string, options: EnvOption): Promise<OneInchSwapReturn> => {\n    let approveTx: TransactionData | undefined\n\n    const inToken = new Token(swapParams.in)\n    const outToken = new Token(swapParams.out)\n    if (inToken.isNative) {\n        swapParams.in = eth1InchAddress\n    } else {\n        approveTx = await _getOneInchApproveTx(swapParams.in, swapParams.amount, options)\n    }\n    if (outToken.isNative) {\n        swapParams.out = eth1InchAddress\n    }\n    const swapTx = await _getOneInchSwapTx(swapParams, address, options)\n    return { approveTx, swapTx }\n}\n\nconst _getOneInchApproveTx = async (tokenAddress: string, amt: number, options: EnvOption): Promise<TransactionData> => {\n    const inTokenDecimals = await _get1inchTokenDecimals(tokenAddress, options)\n    tokenAddress = await Token.getAddress(tokenAddress, options)\n    const amount = fromReadableAmount(amt, inTokenDecimals).toString()\n    const url = await oneInchAPIRequest(\"/approve/transaction\", amount ? { tokenAddress, amount } : { tokenAddress })\n    const transaction = await sendRequest(url, \"GET\", \"\")\n    return transaction as TransactionData\n}\n\nconst _getOneInchSwapTx = async (swapParams: OneInchSwapParams, fromAddress: string, options: EnvOption) => {\n    const inTokenDecimals = await _get1inchTokenDecimals(swapParams.in, options)\n    const fromTokenAddress = await Token.getAddress(swapParams.in, options)\n    const toTokenAddress = await Token.getAddress(swapParams.out, options)\n    const amount = fromReadableAmount(swapParams.amount, inTokenDecimals)\n    const formattedSwap = {\n        fromTokenAddress,\n        toTokenAddress,\n        amount: amount,\n        fromAddress,\n        slippage: swapParams.slippage,\n        disableEstimate: swapParams.disableEstimate ? swapParams.disableEstimate : true,\n        allowPartialFill: swapParams.allowPartialFill ? swapParams.allowPartialFill : false,\n        destReceiver: swapParams.returnAddress ? swapParams.returnAddress : fromAddress\n    }\n\n    const url = await oneInchAPIRequest(\"/swap\", formattedSwap)\n    const res = await sendRequest(url, \"GET\", \"\")\n    return res.tx\n}\n\nconst _get1inchTokenDecimals = async (tokenAddress: string, options: EnvOption) => {\n    if (tokenAddress !== eth1InchAddress) {\n        const inToken = new Token(tokenAddress)\n        return await inToken.getDecimals(options)\n    }\n\n    return 18\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f93cf7fc9b57165df521242c90493c8149d2dd78","contentHash":"2494fa83e4ba3f1c888a6ebc9d10dad0c2bddeda10ad2dac047c33d5ae4510ff"},"/Users/albertsu/Desktop/sdk/src/actions/types.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":98}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":41}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":34},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":27},"end":{"line":10,"column":96}},"type":"binary-expr","locations":[{"start":{"line":10,"column":27},"end":{"line":10,"column":56}},{"start":{"line":10,"column":61},"end":{"line":10,"column":95}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/types.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/types.ts"],"names":[],"mappings":";;;AAgEA,IAAY,qBAKX;AALD,WAAY,qBAAqB;IAC7B,0CAAiB,CAAA;IACjB,oCAAW,CAAA;IACX,0CAAiB,CAAA;IACjB,sCAAa,CAAA;AACjB,CAAC,EALW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAKhC","sourcesContent":["import { TransactionData, TransactionParams } from \"../common\"\nimport { EnvOption } from \"../config\"\nimport { Chain } from \"../data\"\nimport { ErrorData } from \"../errors/\"\nimport { FunWallet } from \"../wallet\"\n\nexport interface ApproveAndExecParams {\n    approve: TransactionParams\n    exec: TransactionParams\n}\n\nexport interface ActionData {\n    wallet: FunWallet\n    chain: Chain\n    options: EnvOption\n}\n\n// Transfer Param types\nexport type TransferParam = {\n    to: string\n}\n\nexport type TransferParams = ERC20TransferParams | ERC721TransferParams | NativeTransferParams\n\nexport interface ERC721TransferParams extends TransferParam {\n    tokenId: number\n    token: string\n}\nexport interface NativeTransferParams extends TransferParam {\n    amount: number\n}\n\nexport interface ERC20TransferParams extends NativeTransferParams {\n    token: string\n}\n\n// Approval Param types\nexport type ApproveParam = {\n    spender: string\n    token: string\n}\nexport type ApproveParams = ApproveERC20Params | ApproveERC721Params\n\nexport interface ApproveERC20Params extends ApproveParam {\n    amount: number\n}\n\nexport interface ApproveERC721Params extends ApproveParam {\n    tokenId: number\n}\n\nexport type StakeParams = {\n    amount: number // denominated in ETH\n}\n\nexport type RequestUnstakeParams = {\n    amounts: number[] // denominated in ETH\n    recipient?: string\n}\n\nexport type FinishUnstakeParams = {\n    recipient: string\n}\n\nexport enum UniSwapPoolFeeOptions {\n    lowest = \"lowest\",\n    low = \"low\",\n    medium = \"medium\",\n    high = \"high\"\n}\n\nexport type SwapParam = {\n    in: string\n    out: string\n    amount: number\n    slippage?: number\n    returnAddress?: string\n}\n\nexport interface OneInchSwapParams extends SwapParam {\n    disableEstimate?: boolean\n    allowPartialFill?: boolean\n}\n\nexport type OneInchSwapReturn = {\n    approveTx?: TransactionData\n    swapTx: TransactionData\n}\n\nexport interface UniswapParams extends SwapParam {\n    poolFee?: UniSwapPoolFeeOptions\n    percentDecimal?: number\n}\n\nexport type SwapParams = OneInchSwapParams | UniswapParams\n\nexport type FirstClassActionResult = {\n    data: TransactionData\n    errorData: ErrorData\n}\n\nexport type ActionFunction = (obj: any) => Promise<FirstClassActionResult>\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"79780182bf8de9e3d10b88fb44f24668e2b19e09","contentHash":"20ad6ae1d02dcf2a4cef0cc91b8c719935cdab5208c06d5ee67eca1062b9a39c"},"/Users/albertsu/Desktop/sdk/src/actions/Token.ts":{"path":"/Users/albertsu/Desktop/sdk/src/actions/Token.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":37}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":28}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":82}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":86}},"8":{"start":{"line":16,"column":18},"end":{"line":30,"column":1}},"9":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":38}},"11":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":37}},"13":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":35}},"15":{"start":{"line":26,"column":28},"end":{"line":26,"column":45}},"16":{"start":{"line":27,"column":30},"end":{"line":27,"column":64}},"17":{"start":{"line":28,"column":19},"end":{"line":28,"column":114}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":70}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}},"20":{"start":{"line":32,"column":20},"end":{"line":40,"column":1}},"21":{"start":{"line":33,"column":4},"end":{"line":39,"column":6}},"22":{"start":{"line":34,"column":21},"end":{"line":34,"column":102}},"23":{"start":{"line":35,"column":26},"end":{"line":37,"column":9}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":35}},"25":{"start":{"line":41,"column":22},"end":{"line":64,"column":1}},"26":{"start":{"line":42,"column":34},"end":{"line":42,"column":40}},"27":{"start":{"line":43,"column":4},"end":{"line":63,"column":6}},"28":{"start":{"line":44,"column":29},"end":{"line":44,"column":104}},"29":{"start":{"line":45,"column":26},"end":{"line":50,"column":9}},"30":{"start":{"line":51,"column":27},"end":{"line":54,"column":9}},"31":{"start":{"line":55,"column":26},"end":{"line":61,"column":9}},"32":{"start":{"line":62,"column":8},"end":{"line":62,"column":49}},"33":{"start":{"line":65,"column":23},"end":{"line":89,"column":1}},"34":{"start":{"line":66,"column":35},"end":{"line":66,"column":41}},"35":{"start":{"line":67,"column":4},"end":{"line":88,"column":6}},"36":{"start":{"line":68,"column":21},"end":{"line":68,"column":57}},"37":{"start":{"line":69,"column":29},"end":{"line":69,"column":109}},"38":{"start":{"line":70,"column":26},"end":{"line":75,"column":9}},"39":{"start":{"line":76,"column":27},"end":{"line":79,"column":9}},"40":{"start":{"line":80,"column":26},"end":{"line":86,"column":9}},"41":{"start":{"line":87,"column":8},"end":{"line":87,"column":49}},"42":{"start":{"line":91,"column":4},"end":{"line":91,"column":45}},"43":{"start":{"line":94,"column":4},"end":{"line":94,"column":46}},"44":{"start":{"line":96,"column":17},"end":{"line":108,"column":1}},"45":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"46":{"start":{"line":99,"column":8},"end":{"line":99,"column":37}},"47":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"48":{"start":{"line":102,"column":8},"end":{"line":102,"column":36}},"49":{"start":{"line":104,"column":28},"end":{"line":104,"column":44}},"50":{"start":{"line":105,"column":30},"end":{"line":105,"column":64}},"51":{"start":{"line":106,"column":19},"end":{"line":106,"column":114}},"52":{"start":{"line":107,"column":4},"end":{"line":107,"column":70}},"53":{"start":{"line":109,"column":0},"end":{"line":109,"column":28}},"54":{"start":{"line":110,"column":21},"end":{"line":135,"column":1}},"55":{"start":{"line":111,"column":39},"end":{"line":111,"column":45}},"56":{"start":{"line":112,"column":4},"end":{"line":134,"column":6}},"57":{"start":{"line":113,"column":27},"end":{"line":113,"column":50}},"58":{"start":{"line":114,"column":28},"end":{"line":114,"column":98}},"59":{"start":{"line":115,"column":29},"end":{"line":115,"column":58}},"60":{"start":{"line":116,"column":26},"end":{"line":121,"column":9}},"61":{"start":{"line":122,"column":27},"end":{"line":125,"column":9}},"62":{"start":{"line":126,"column":26},"end":{"line":132,"column":9}},"63":{"start":{"line":133,"column":8},"end":{"line":133,"column":48}},"64":{"start":{"line":136,"column":22},"end":{"line":161,"column":1}},"65":{"start":{"line":137,"column":40},"end":{"line":137,"column":46}},"66":{"start":{"line":138,"column":4},"end":{"line":160,"column":6}},"67":{"start":{"line":139,"column":28},"end":{"line":139,"column":49}},"68":{"start":{"line":140,"column":28},"end":{"line":140,"column":100}},"69":{"start":{"line":141,"column":29},"end":{"line":141,"column":59}},"70":{"start":{"line":142,"column":26},"end":{"line":147,"column":9}},"71":{"start":{"line":148,"column":27},"end":{"line":151,"column":9}},"72":{"start":{"line":152,"column":26},"end":{"line":158,"column":9}},"73":{"start":{"line":159,"column":8},"end":{"line":159,"column":48}}},"fnMap":{"0":{"name":"isERC721TransferParams","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":37},"end":{"line":9,"column":1}},"line":7},"1":{"name":"isERC20TransferParams","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":30}},"loc":{"start":{"line":10,"column":36},"end":{"line":12,"column":1}},"line":10},"2":{"name":"isNativeTransferParams","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":31}},"loc":{"start":{"line":13,"column":37},"end":{"line":15,"column":1}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":18},"end":{"line":16,"column":19}},"loc":{"start":{"line":16,"column":30},"end":{"line":30,"column":1}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":20},"end":{"line":32,"column":21}},"loc":{"start":{"line":32,"column":32},"end":{"line":40,"column":1}},"line":32},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":11},"end":{"line":33,"column":12}},"loc":{"start":{"line":33,"column":23},"end":{"line":39,"column":5}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":22},"end":{"line":41,"column":23}},"loc":{"start":{"line":41,"column":34},"end":{"line":64,"column":1}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":11},"end":{"line":43,"column":12}},"loc":{"start":{"line":43,"column":33},"end":{"line":63,"column":5}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":23},"end":{"line":65,"column":24}},"loc":{"start":{"line":65,"column":35},"end":{"line":89,"column":1}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":11},"end":{"line":67,"column":12}},"loc":{"start":{"line":67,"column":33},"end":{"line":88,"column":5}},"line":67},"10":{"name":"isERC20ApproveParams","decl":{"start":{"line":90,"column":9},"end":{"line":90,"column":29}},"loc":{"start":{"line":90,"column":35},"end":{"line":92,"column":1}},"line":90},"11":{"name":"isERC721ApproveParams","decl":{"start":{"line":93,"column":9},"end":{"line":93,"column":30}},"loc":{"start":{"line":93,"column":36},"end":{"line":95,"column":1}},"line":93},"12":{"name":"(anonymous_12)","decl":{"start":{"line":96,"column":17},"end":{"line":96,"column":18}},"loc":{"start":{"line":96,"column":29},"end":{"line":108,"column":1}},"line":96},"13":{"name":"(anonymous_13)","decl":{"start":{"line":110,"column":21},"end":{"line":110,"column":22}},"loc":{"start":{"line":110,"column":33},"end":{"line":135,"column":1}},"line":110},"14":{"name":"(anonymous_14)","decl":{"start":{"line":112,"column":11},"end":{"line":112,"column":12}},"loc":{"start":{"line":112,"column":33},"end":{"line":134,"column":5}},"line":112},"15":{"name":"(anonymous_15)","decl":{"start":{"line":136,"column":22},"end":{"line":136,"column":23}},"loc":{"start":{"line":136,"column":34},"end":{"line":161,"column":1}},"line":136},"16":{"name":"(anonymous_16)","decl":{"start":{"line":138,"column":11},"end":{"line":138,"column":12}},"loc":{"start":{"line":138,"column":33},"end":{"line":160,"column":5}},"line":138}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":81}},"type":"binary-expr","locations":[{"start":{"line":11,"column":11},"end":{"line":11,"column":26}},{"start":{"line":11,"column":30},"end":{"line":11,"column":44}},{"start":{"line":11,"column":48},"end":{"line":11,"column":81}}],"line":11},"1":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":85}},"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":26}},{"start":{"line":14,"column":31},"end":{"line":14,"column":48}},{"start":{"line":14,"column":52},"end":{"line":14,"column":84}}],"line":14},"2":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}],"line":17},"3":{"loc":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},{"start":{"line":20,"column":4},"end":{"line":22,"column":5}}],"line":20},"4":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"5":{"loc":{"start":{"line":91,"column":11},"end":{"line":91,"column":44}},"type":"binary-expr","locations":[{"start":{"line":91,"column":11},"end":{"line":91,"column":26}},{"start":{"line":91,"column":30},"end":{"line":91,"column":44}}],"line":91},"6":{"loc":{"start":{"line":94,"column":11},"end":{"line":94,"column":45}},"type":"binary-expr","locations":[{"start":{"line":94,"column":11},"end":{"line":94,"column":27}},{"start":{"line":94,"column":31},"end":{"line":94,"column":45}}],"line":94},"7":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"8":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{"line":101,"column":4},"end":{"line":103,"column":5}}],"line":101}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[0,0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/actions/Token.ts","sources":["/Users/albertsu/Desktop/sdk/src/actions/Token.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseEther } from \"ethers/lib/utils\"\nimport {\n    ActionData,\n    ActionFunction,\n    ApproveERC20Params,\n    ApproveERC721Params,\n    ApproveParams,\n    ERC20TransferParams,\n    ERC721TransferParams,\n    FirstClassActionResult,\n    NativeTransferParams,\n    TransferParams\n} from \"./types\"\nimport { TransactionData } from \"../common\"\nimport { NFT, Token } from \"../data\"\nimport { ErrorData, ErrorTransactionDetails, Helper, MissingParameterError } from \"../errors\"\n\nfunction isERC721TransferParams(obj: TransferParams): obj is ERC721TransferParams {\n    return \"tokenId\" in obj\n}\n\nfunction isERC20TransferParams(obj: TransferParams): obj is ERC20TransferParams {\n    return \"amount\" in obj && \"token\" in obj && !Token.isNative(obj.token)\n}\n\nfunction isNativeTransferParams(obj: TransferParams): obj is NativeTransferParams {\n    return \"amount\" in obj && (!(\"token\" in obj) || Token.isNative(obj.token))\n}\n\nexport const _transfer = (params: TransferParams): ActionFunction => {\n    if (isERC721TransferParams(params)) {\n        return erc721Transfer(params)\n    }\n    if (isERC20TransferParams(params)) {\n        return erc20Transfer(params)\n    }\n    if (isNativeTransferParams(params)) {\n        return ethTransfer(params)\n    }\n    const currentLocation = \"action.transfer\"\n    const helperMainMessage = \"params were missing or incorrect\"\n    const helper = new Helper(`${currentLocation} was given these parameters`, params, helperMainMessage)\n    throw new MissingParameterError(currentLocation, helper)\n}\n\nconst ethTransfer = (params: NativeTransferParams): ActionFunction => {\n    return async (): Promise<FirstClassActionResult> => {\n        const data: TransactionData = { to: params.to, data: \"0x\", value: parseEther(`${params.amount}`) }\n        const errorData: ErrorData = {\n            location: \"action.transfer.eth\"\n        }\n        return { data, errorData }\n    }\n}\n\nconst erc20Transfer = (params: ERC20TransferParams): ActionFunction => {\n    const { to, amount, token } = params\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const transferData = await Token.transfer(token!, to, amount, { chain: actionData.chain })\n\n        const txDetails = {\n            method: \"transfer\",\n            params: [to, amount.toString()],\n            contractAddress: transferData.to,\n            chainId: actionData.chain.id\n        }\n\n        const reasonData = {\n            title: \"Possible reasons:\",\n            reasons: [\"Don't have a token balance\", \"Incorrect token address\", \"Incorrect parameters\"]\n        }\n\n        const errorData = {\n            location: \"action.transfer.erc20\",\n            error: {\n                txDetails,\n                reasonData\n            }\n        }\n        return { data: transferData, errorData }\n    }\n}\n\nconst erc721Transfer = (params: ERC721TransferParams): ActionFunction => {\n    const { to, tokenId, token } = params\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const from = await actionData.wallet.getAddress()\n        const transferData = await NFT.transfer(token!, from, to, tokenId, { chain: actionData.chain })\n\n        const txDetails: ErrorTransactionDetails = {\n            method: \"transferFrom\",\n            params: [to, tokenId.toString()],\n            contractAddress: token,\n            chainId: actionData.chain.id!\n        }\n\n        const reasonData = {\n            title: \"Possible reasons:\",\n            reasons: [\"Don't have a token balance\", \"Incorrect token address\", \"Incorrect parameters\"]\n        }\n\n        const errorData = {\n            location: \"action.transfer.erc20\",\n            error: {\n                txDetails,\n                reasonData\n            }\n        }\n        return { data: transferData, errorData }\n    }\n}\n\nfunction isERC20ApproveParams(obj: ApproveParams): obj is ApproveERC20Params {\n    return \"amount\" in obj && \"token\" in obj\n}\nfunction isERC721ApproveParams(obj: ApproveParams): obj is ApproveERC721Params {\n    return \"tokenId\" in obj && \"token\" in obj\n}\nexport const _approve = (params: ApproveParams): ActionFunction => {\n    // Handle ERC20 Approves\n    if (isERC721ApproveParams(params)) {\n        return erc721Approve(params)\n    }\n    if (isERC20ApproveParams(params)) {\n        return erc20Approve(params)\n    }\n    const currentLocation = \"action.approve\"\n    const helperMainMessage = \"params were missing or incorrect\"\n    const helper = new Helper(`${currentLocation} was given these parameters`, params, helperMainMessage)\n    throw new MissingParameterError(currentLocation, helper)\n}\n\nconst erc20Approve = (params: ApproveERC20Params): ActionFunction => {\n    const { spender, amount, token } = params\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const erc20token = new Token(token)\n        const approveData = await erc20token.approve(spender, amount, { chain: actionData.chain })\n        const tokenAddress = await erc20token.getAddress()\n        const txDetails = {\n            method: \"approve\",\n            params: [params.spender, params.amount.toString()],\n            contractAddress: tokenAddress,\n            chainId: actionData.chain.id\n        }\n\n        const reasonData = {\n            title: \"Possible reasons:\",\n            reasons: [\"Incorrect parameters\"]\n        }\n\n        const errorData = {\n            location: \"action.approve.erc20\",\n            error: {\n                txDetails,\n                reasonData\n            }\n        }\n        return { data: approveData, errorData }\n    }\n}\n\nconst erc721Approve = (params: ApproveERC721Params): ActionFunction => {\n    const { spender, tokenId, token } = params\n    return async (actionData: ActionData): Promise<FirstClassActionResult> => {\n        const erc721token = new NFT(token)\n        const approveData = await erc721token.approve(spender, tokenId, { chain: actionData.chain })\n        const tokenAddress = await erc721token.getAddress()\n        const txDetails = {\n            method: \"approve\",\n            params: [spender, tokenId.toString()],\n            contractAddress: tokenAddress,\n            chainId: actionData.chain.id\n        }\n\n        const reasonData = {\n            title: \"Possible reasons:\",\n            reasons: [\"Incorrect parameters\"]\n        }\n\n        const errorData = {\n            location: \"action.approve.erc721\",\n            error: {\n                txDetails,\n                reasonData\n            }\n        }\n        return { data: approveData, errorData }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a059f980c55dc43991940e4d46efd986be42b623","contentHash":"33faaf893720fd6e3b381be1eb32827110909167c3be98dac50d8c9f710172c1"},"/Users/albertsu/Desktop/sdk/src/managers/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/managers/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":10,"7":2,"8":0,"9":0,"10":0,"11":1,"12":2,"13":2,"14":2,"15":1,"16":1,"17":1},"f":{"0":2,"1":10,"2":0,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[2,0],"3":[2,0],"4":[2,2],"5":[0,2],"6":[2,0],"7":[0,0],"8":[1,1,1],"9":[2,0],"10":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/managers/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/managers/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,qDAAkC;AAClC,yDAAsC","sourcesContent":["export * from \"./WalletAbiManager\"\nexport * from \"./WalletOnChainManager\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc871532a88fe0e5262a4178d701a5a647a3c8b0","contentHash":"ccb84a17574eca5b2c22f17abed020caa23355263eb4970b65c74bb8a56b880e"},"/Users/albertsu/Desktop/sdk/src/managers/WalletAbiManager.ts":{"path":"/Users/albertsu/Desktop/sdk/src/managers/WalletAbiManager.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":7,"column":21},"end":{"line":7,"column":51}},"6":{"start":{"line":8,"column":20},"end":{"line":8,"column":49}},"7":{"start":{"line":9,"column":31},"end":{"line":9,"column":45}},"8":{"start":{"line":10,"column":34},"end":{"line":10,"column":80}},"9":{"start":{"line":11,"column":25},"end":{"line":11,"column":45}},"10":{"start":{"line":12,"column":28},"end":{"line":12,"column":55}},"11":{"start":{"line":15,"column":30},"end":{"line":15,"column":60}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":103}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":112}},"14":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"15":{"start":{"line":21,"column":12},"end":{"line":21,"column":45}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":87}},"17":{"start":{"line":24,"column":29},"end":{"line":24,"column":34}},"18":{"start":{"line":25,"column":30},"end":{"line":25,"column":35}},"19":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"20":{"start":{"line":27,"column":12},"end":{"line":27,"column":27}},"21":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"22":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":38}},"24":{"start":{"line":35,"column":26},"end":{"line":35,"column":47}},"25":{"start":{"line":36,"column":8},"end":{"line":36,"column":66}},"26":{"start":{"line":39,"column":8},"end":{"line":39,"column":90}},"27":{"start":{"line":40,"column":63},"end":{"line":40,"column":68}},"28":{"start":{"line":41,"column":30},"end":{"line":41,"column":35}},"29":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"30":{"start":{"line":43,"column":12},"end":{"line":43,"column":27}},"31":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"32":{"start":{"line":46,"column":12},"end":{"line":46,"column":29}},"33":{"start":{"line":49,"column":12},"end":{"line":49,"column":38}},"34":{"start":{"line":51,"column":24},"end":{"line":51,"column":58}},"35":{"start":{"line":52,"column":26},"end":{"line":52,"column":56}},"36":{"start":{"line":53,"column":8},"end":{"line":53,"column":69}},"37":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"38":{"start":{"line":57,"column":12},"end":{"line":57,"column":53}},"39":{"start":{"line":59,"column":8},"end":{"line":59,"column":87}},"40":{"start":{"line":60,"column":35},"end":{"line":60,"column":40}},"41":{"start":{"line":61,"column":24},"end":{"line":61,"column":29}},"42":{"start":{"line":62,"column":8},"end":{"line":62,"column":55}},"43":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"44":{"start":{"line":64,"column":12},"end":{"line":64,"column":60}},"45":{"start":{"line":67,"column":12},"end":{"line":67,"column":27}},"46":{"start":{"line":69,"column":26},"end":{"line":69,"column":47}},"47":{"start":{"line":70,"column":8},"end":{"line":70,"column":122}},"48":{"start":{"line":73,"column":8},"end":{"line":73,"column":90}},"49":{"start":{"line":74,"column":61},"end":{"line":74,"column":66}},"50":{"start":{"line":75,"column":24},"end":{"line":75,"column":29}},"51":{"start":{"line":76,"column":8},"end":{"line":76,"column":55}},"52":{"start":{"line":77,"column":8},"end":{"line":82,"column":9}},"53":{"start":{"line":78,"column":12},"end":{"line":78,"column":60}},"54":{"start":{"line":81,"column":12},"end":{"line":81,"column":27}},"55":{"start":{"line":83,"column":24},"end":{"line":83,"column":50}},"56":{"start":{"line":84,"column":26},"end":{"line":84,"column":56}},"57":{"start":{"line":85,"column":8},"end":{"line":85,"column":122}},"58":{"start":{"line":88,"column":8},"end":{"line":88,"column":123}},"59":{"start":{"line":91,"column":8},"end":{"line":91,"column":124}},"60":{"start":{"line":94,"column":38},"end":{"line":97,"column":9}},"61":{"start":{"line":98,"column":8},"end":{"line":98,"column":152}},"62":{"start":{"line":99,"column":43},"end":{"line":103,"column":9}},"63":{"start":{"line":104,"column":8},"end":{"line":104,"column":161}},"64":{"start":{"line":105,"column":21},"end":{"line":105,"column":120}},"65":{"start":{"line":106,"column":8},"end":{"line":106,"column":68}},"66":{"start":{"line":109,"column":0},"end":{"line":109,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":39},"end":{"line":18,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":64},"end":{"line":37,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":70},"end":{"line":54,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":100},"end":{"line":71,"column":5}},"line":55},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":106},"end":{"line":86,"column":5}},"line":72},"5":{"name":"(anonymous_5)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":116},"end":{"line":89,"column":5}},"line":87},"6":{"name":"(anonymous_6)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":118},"end":{"line":92,"column":5}},"line":90},"7":{"name":"(anonymous_7)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":23},"end":{"line":107,"column":5}},"line":93}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":62}},"type":"default-arg","locations":[{"start":{"line":19,"column":33},"end":{"line":19,"column":62}}],"line":19},"1":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"3":{"loc":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},{"start":{"line":29,"column":8},"end":{"line":34,"column":9}}],"line":29},"4":{"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":37}},"type":"cond-expr","locations":[{"start":{"line":33,"column":28},"end":{"line":33,"column":33}},{"start":{"line":33,"column":36},"end":{"line":33,"column":37}}],"line":33},"5":{"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":68}},"type":"default-arg","locations":[{"start":{"line":38,"column":36},"end":{"line":38,"column":68}}],"line":38},"6":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"7":{"loc":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},{"start":{"line":45,"column":8},"end":{"line":50,"column":9}}],"line":45},"8":{"loc":{"start":{"line":49,"column":20},"end":{"line":49,"column":37}},"type":"cond-expr","locations":[{"start":{"line":49,"column":28},"end":{"line":49,"column":33}},{"start":{"line":49,"column":36},"end":{"line":49,"column":37}}],"line":49},"9":{"loc":{"start":{"line":55,"column":30},"end":{"line":55,"column":78}},"type":"default-arg","locations":[{"start":{"line":55,"column":41},"end":{"line":55,"column":78}}],"line":55},"10":{"loc":{"start":{"line":55,"column":80},"end":{"line":55,"column":98}},"type":"default-arg","locations":[{"start":{"line":55,"column":93},"end":{"line":55,"column":98}}],"line":55},"11":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"12":{"loc":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},{"start":{"line":63,"column":8},"end":{"line":68,"column":9}}],"line":63},"13":{"loc":{"start":{"line":72,"column":33},"end":{"line":72,"column":84}},"type":"default-arg","locations":[{"start":{"line":72,"column":44},"end":{"line":72,"column":84}}],"line":72},"14":{"loc":{"start":{"line":72,"column":86},"end":{"line":72,"column":104}},"type":"default-arg","locations":[{"start":{"line":72,"column":99},"end":{"line":72,"column":104}}],"line":72},"15":{"loc":{"start":{"line":77,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":82,"column":9}},{"start":{"line":77,"column":8},"end":{"line":82,"column":9}}],"line":77},"16":{"loc":{"start":{"line":87,"column":48},"end":{"line":87,"column":94}},"type":"default-arg","locations":[{"start":{"line":87,"column":59},"end":{"line":87,"column":94}}],"line":87},"17":{"loc":{"start":{"line":87,"column":96},"end":{"line":87,"column":114}},"type":"default-arg","locations":[{"start":{"line":87,"column":109},"end":{"line":87,"column":114}}],"line":87},"18":{"loc":{"start":{"line":90,"column":49},"end":{"line":90,"column":96}},"type":"default-arg","locations":[{"start":{"line":90,"column":60},"end":{"line":90,"column":96}}],"line":90},"19":{"loc":{"start":{"line":90,"column":98},"end":{"line":90,"column":116}},"type":"default-arg","locations":[{"start":{"line":90,"column":111},"end":{"line":90,"column":116}}],"line":90},"20":{"loc":{"start":{"line":101,"column":28},"end":{"line":101,"column":118}},"type":"cond-expr","locations":[{"start":{"line":101,"column":58},"end":{"line":101,"column":85}},{"start":{"line":101,"column":88},"end":{"line":101,"column":118}}],"line":101}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":5,"12":5,"13":5,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1},"f":{"0":5,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0],"11":[0,0],"12":[0,0],"13":[0],"14":[0],"15":[0,0],"16":[0],"17":[0],"18":[0],"19":[0],"20":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/managers/WalletAbiManager.ts","sources":["/Users/albertsu/Desktop/sdk/src/managers/WalletAbiManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { ContractInterface, constants } from \"ethers\"\nimport { Interface, defaultAbiCoder, hexConcat } from \"ethers/lib/utils\"\nimport { TransactionDataWithFee } from \"../common\"\nimport { FactoryCreateAccountParams, InitCodeParams, WalletInitialzeParams, encodeLoginData } from \"../data\"\nimport { checkAbi, encodeContractCall, verifyValidParamsFromAbi } from \"../utils/ChainUtils\"\nimport { verifyFunctionParams, verifyIsArray } from \"../utils/DataUtils\"\n\nconst encodeCallExpectedKeys = [\"to\", \"data\"]\nconst encodeFeeCallExpectedKeys = [\"to\", \"data\", \"token\", \"amount\", \"recipient\"]\nconst callFunctionName = \"execFromEntryPoint\"\nconst feeCallFunctionName = \"execFromEntryPointWithFee\"\n\nexport class WalletAbiManager {\n    walletInterface: Interface\n    factoryInterface: Interface\n\n    constructor(walletAbi: ContractInterface, factoryAbi: ContractInterface) {\n        const errorLocation = \"WalletAbiManager constructor\"\n        this.walletInterface = checkAbi(walletAbi, \"FunWallet\", errorLocation, true)\n        this.factoryInterface = checkAbi(factoryAbi, \"FunWalletFactory\", errorLocation, true)\n    }\n\n    encodeCall(input: TransactionDataWithFee, location = \"WalletAbiManager.encodeCall\") {\n        if (input.token) {\n            return this.encodeFeeCall(input)\n        }\n        verifyFunctionParams(location, input, encodeCallExpectedKeys)\n        const { to: dest } = input\n        let { data, value } = input\n        if (Array.isArray(data)) {\n            data = data[1]\n        }\n        if (Array.isArray(value)) {\n            value = value[1]\n        } else {\n            value = value ? value : 0\n        }\n        const encodeObj = { dest, data, value }\n        return this.encodeWalletCall(callFunctionName, encodeObj)\n    }\n\n    encodeFeeCall(input: TransactionDataWithFee, location = \"WalletAbiManager.encodeFeeCall\") {\n        verifyFunctionParams(location, input, encodeFeeCallExpectedKeys)\n        const { to: dest, token, amount, recipient, oracle } = input\n        let { data, value } = input\n        if (Array.isArray(data)) {\n            data = data[1]\n        }\n        if (Array.isArray(value)) {\n            value = value[1]\n        } else {\n            value = value ? value : 0\n        }\n\n        const feedata = [token, recipient, oracle, amount]\n        const encodeObj = { dest, data, value, feedata }\n        return this.encodeWalletCall(feeCallFunctionName, encodeObj)\n    }\n\n    encodeInitExecCall(input: TransactionDataWithFee, location = \"WalletAbiManager.encodeInitExecCall\", isInternal = false) {\n        if (input.token) {\n            return this.encodeInitExecFeeCall(input)\n        }\n        verifyFunctionParams(location, input, encodeCallExpectedKeys)\n        const { to: dest, data } = input\n        let { value } = input\n        verifyIsArray(data, location)\n        if (value) {\n            verifyIsArray(value, location)\n        } else {\n            value = [0, 0]\n        }\n        const encodeObj = { dest, data, value }\n        return encodeContractCall(this.walletInterface, \"initAndExec\", encodeObj, location, isInternal)\n    }\n\n    encodeInitExecFeeCall(input: TransactionDataWithFee, location = \"WalletAbiManager.encodeInitExecFeeCall\", isInternal = false) {\n        verifyFunctionParams(location, input, encodeFeeCallExpectedKeys)\n        const { to: dest, data, token, amount, recipient } = input\n        let { value } = input\n        verifyIsArray(data, location)\n        if (value) {\n            verifyIsArray(value, location)\n        } else {\n            value = [0, 0]\n        }\n        const feedata = [token, recipient, amount]\n        const encodeObj = { dest, data, value, feedata }\n        return encodeContractCall(this.walletInterface, \"initAndExec\", encodeObj, location, isInternal)\n    }\n\n    encodeWalletCall(encodeFunctionName: string, input: any, location = \"WalletAbiManager.encodeWalletCall\", isInternal = false) {\n        return encodeContractCall(this.walletInterface, encodeFunctionName, input, location, isInternal)\n    }\n\n    encodeFactoryCall(encodeFunctionName: string, input: any, location = \"WalletAbiManager.encodeFactoryCall\", isInternal = false) {\n        return encodeContractCall(this.factoryInterface, encodeFunctionName, input, location, isInternal)\n    }\n\n    getInitCode(input: InitCodeParams) {\n        const walletInitialzeParams: WalletInitialzeParams = {\n            _newEntryPoint: input.entryPointAddress,\n            validationInitData: defaultAbiCoder.encode([\"address[]\", \"bytes[]\"], [input.verificationAddresses, input.verificationData])\n        }\n\n        verifyValidParamsFromAbi(this.walletInterface.fragments, \"initialize\", walletInitialzeParams, \"WalletAbiManager.getInitCode\")\n        const factoryCreateAccountParams: FactoryCreateAccountParams = {\n            initializerCallData: this.encodeWalletCall(\"initialize\", walletInitialzeParams),\n            implementation: input.implementationAddress ? input.implementationAddress : constants.AddressZero,\n            data: encodeLoginData(input.loginData)\n        }\n\n        verifyValidParamsFromAbi(\n            this.factoryInterface.fragments,\n            \"createAccount\",\n            factoryCreateAccountParams,\n            \"WalletAbiManager.getInitCode\"\n        )\n        const data = this.encodeFactoryCall(\"createAccount\", factoryCreateAccountParams, \"WalletAbiManager.getInitCode\")\n        return hexConcat([input.factoryAddress, data])\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0b7a5498d88ee16ac7a7c8c4da6f25d78b8b2885","contentHash":"9afd727190069e4e2b6102a5327b75b45849613f77893d3543a041ef7e7edf48"},"/Users/albertsu/Desktop/sdk/src/managers/WalletOnChainManager.ts":{"path":"/Users/albertsu/Desktop/sdk/src/managers/WalletOnChainManager.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":27}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":49}},"7":{"start":{"line":13,"column":8},"end":{"line":17,"column":9}},"8":{"start":{"line":14,"column":35},"end":{"line":14,"column":80}},"9":{"start":{"line":15,"column":29},"end":{"line":15,"column":59}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":100}},"11":{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},"12":{"start":{"line":19,"column":38},"end":{"line":19,"column":86}},"13":{"start":{"line":20,"column":29},"end":{"line":20,"column":59}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":109}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"16":{"start":{"line":26,"column":25},"end":{"line":26,"column":68}},"17":{"start":{"line":27,"column":21},"end":{"line":27,"column":68}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":51}},"19":{"start":{"line":31,"column":25},"end":{"line":31,"column":78}},"20":{"start":{"line":32,"column":24},"end":{"line":32,"column":103}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":52}},"22":{"start":{"line":36,"column":8},"end":{"line":36,"column":26}},"23":{"start":{"line":37,"column":24},"end":{"line":37,"column":44}},"24":{"start":{"line":38,"column":8},"end":{"line":44,"column":9}},"25":{"start":{"line":39,"column":27},"end":{"line":39,"column":116}},"26":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"27":{"start":{"line":41,"column":16},"end":{"line":41,"column":49}},"28":{"start":{"line":43,"column":12},"end":{"line":43,"column":74}},"29":{"start":{"line":43,"column":43},"end":{"line":43,"column":72}},"30":{"start":{"line":45,"column":8},"end":{"line":45,"column":25}},"31":{"start":{"line":48,"column":8},"end":{"line":48,"column":26}},"32":{"start":{"line":49,"column":25},"end":{"line":49,"column":55}},"33":{"start":{"line":50,"column":26},"end":{"line":50,"column":70}},"34":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"35":{"start":{"line":52,"column":12},"end":{"line":52,"column":29}},"36":{"start":{"line":54,"column":8},"end":{"line":54,"column":25}},"37":{"start":{"line":57,"column":8},"end":{"line":57,"column":26}},"38":{"start":{"line":58,"column":25},"end":{"line":58,"column":55}},"39":{"start":{"line":59,"column":25},"end":{"line":59,"column":95}},"40":{"start":{"line":60,"column":8},"end":{"line":66,"column":9}},"41":{"start":{"line":61,"column":25},"end":{"line":61,"column":72}},"42":{"start":{"line":62,"column":12},"end":{"line":62,"column":33}},"43":{"start":{"line":65,"column":12},"end":{"line":65,"column":25}},"44":{"start":{"line":69,"column":8},"end":{"line":69,"column":26}},"45":{"start":{"line":70,"column":25},"end":{"line":70,"column":55}},"46":{"start":{"line":71,"column":28},"end":{"line":71,"column":59}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":43}},"48":{"start":{"line":75,"column":38},"end":{"line":75,"column":87}},"49":{"start":{"line":76,"column":25},"end":{"line":76,"column":55}},"50":{"start":{"line":77,"column":23},"end":{"line":77,"column":111}},"51":{"start":{"line":78,"column":8},"end":{"line":78,"column":54}},"52":{"start":{"line":81,"column":0},"end":{"line":81,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":41},"end":{"line":11,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":17},"end":{"line":23,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":29},"end":{"line":29,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":70},"end":{"line":34,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":64},"end":{"line":46,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":30},"end":{"line":43,"column":31}},"loc":{"start":{"line":43,"column":43},"end":{"line":43,"column":72}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":29},"end":{"line":55,"column":5}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":56},"end":{"line":67,"column":5}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":37},"end":{"line":73,"column":5}},"line":68},"9":{"name":"(anonymous_9)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":36},"end":{"line":79,"column":5}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":17,"column":9}},{"start":{"line":13,"column":8},"end":{"line":17,"column":9}}],"line":13},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},{"start":{"line":18,"column":8},"end":{"line":22,"column":9}}],"line":18},"2":{"loc":{"start":{"line":35,"column":30},"end":{"line":35,"column":45}},"type":"default-arg","locations":[{"start":{"line":35,"column":40},"end":{"line":35,"column":45}}],"line":35},"3":{"loc":{"start":{"line":35,"column":47},"end":{"line":35,"column":62}},"type":"default-arg","locations":[{"start":{"line":35,"column":58},"end":{"line":35,"column":62}}],"line":35},"4":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"5":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{"line":51,"column":8},"end":{"line":53,"column":9}}],"line":51},"6":{"loc":{"start":{"line":51,"column":12},"end":{"line":51,"column":46}},"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":21}},{"start":{"line":51,"column":25},"end":{"line":51,"column":46}}],"line":51}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":5,"8":5,"9":5,"10":5,"11":5,"12":5,"13":5,"14":5,"15":5,"16":5,"17":5,"18":5,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"f":{"0":5,"1":5,"2":5,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[5,0],"1":[5,0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/managers/WalletOnChainManager.ts","sources":["/Users/albertsu/Desktop/sdk/src/managers/WalletOnChainManager.ts"],"names":[],"mappings":";;;AACA,mCAAyC;AACzC,mDAAmG;AACnG,kCAAkE;AAElE,MAAa,oBAAoB;IAM7B,YAAY,KAAY,EAAE,gBAAkC;QACxD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;IAC5C,CAAC;IAED,KAAK,CAAC,IAAI;QACN,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAA;YACpE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAQ,CAAC,cAAc,EAAE,uBAAW,EAAE,QAAQ,CAAC,CAAA;SACrE;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAA;YAC1E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;YAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAQ,CAAC,iBAAiB,EAAE,0BAAc,EAAE,QAAQ,CAAC,CAAA;SAC9E;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB;QAClB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAA;QAC5D,MAAM,IAAI,GAAG,IAAA,sBAAe,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;QAChD,OAAO,MAAM,IAAI,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;IAC/C,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,MAAc,EAAE,cAAsB;QACpF,MAAM,QAAQ,GAAG,IAAI,eAAM,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAA;QAC7D,MAAM,OAAO,GAAG,IAAI,eAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,uBAAW,EAAE,QAAQ,CAAC,CAAA;QAC1E,OAAO,MAAM,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;IAC/C,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,UAAkB,EAAE,OAAO,GAAG,KAAK,EAAE,QAAQ,GAAG,IAAI;QAC9D,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAA;QACpC,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,EAAE;YACzB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAW,CAAC,WAAW,CAAC,IAAI,CAAC,UAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAA;YAC1G,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAA;aACnC;YACD,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAA;SAChE;QACD,OAAO,SAAS,CAAA;IACpB,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAAc;QAC3B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QAC/C,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAA;QAC9D,IAAI,SAAS,IAAI,SAAS,CAAC,WAAW,EAAE;YACpC,OAAO,SAAS,CAAA;SACnB;QACD,OAAO,SAAS,CAAA;IACpB,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,aAAqB,EAAE,aAAqB;QAC9D,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QAC/C,MAAM,QAAQ,GAAG,IAAI,iBAAQ,CAAC,aAAa,EAAE,sBAAU,EAAE,QAAQ,CAAC,CAAA;QAClE,IAAI;YACA,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAA;YAC5D,OAAO,IAAI,KAAK,IAAI,CAAA;SACvB;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,KAAK,CAAA;SACf;IACL,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,OAAe;QACnC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;QACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QAC/C,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QACnD,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAA;IACtC,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,KAAa;QAClC,MAAM,qBAAqB,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAA;QAC/E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QAC/C,MAAM,MAAM,GAAG,IAAI,iBAAQ,CAAC,qBAAqB,EAAE,gCAAoB,EAAE,QAAQ,CAAC,CAAA;QAClF,OAAO,MAAM,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;IACjD,CAAC;CACJ;AAtFD,oDAsFC","sourcesContent":["import { TransactionReceipt } from \"@ethersproject/providers\"\nimport { Contract, ethers } from \"ethers\"\nimport { ENTRYPOINT_ABI, FACTORY_ABI, OFF_CHAIN_ORACLE_ABI, WALLET_ABI } from \"../common/constants\"\nimport { Chain, WalletIdentifier, encodeLoginData } from \"../data\"\n\nexport class WalletOnChainManager {\n    chain: Chain\n    walletIdentifier: WalletIdentifier\n    factory?: Contract\n    entrypoint?: Contract\n\n    constructor(chain: Chain, walletIdentifier: WalletIdentifier) {\n        this.chain = chain\n        this.walletIdentifier = walletIdentifier\n    }\n\n    async init() {\n        if (!this.factory) {\n            const factoryAddress = await this.chain.getAddress(\"factoryAddress\")\n            const provider = await this.chain.getProvider()\n            this.factory = new Contract(factoryAddress, FACTORY_ABI, provider)\n        }\n\n        if (!this.entrypoint) {\n            const entryPointAddress = await this.chain.getAddress(\"entryPointAddress\")\n            const provider = await this.chain.getProvider()\n            this.entrypoint = new Contract(entryPointAddress, ENTRYPOINT_ABI, provider)\n        }\n    }\n\n    async getWalletAddress(): Promise<string> {\n        await this.init()\n        const uniqueId = await this.walletIdentifier.getIdentifier()\n        const data = encodeLoginData({ salt: uniqueId })\n        return await this.factory!.getAddress(data)\n    }\n\n    static async getWalletAddress(identifier: string, rpcUrl: string, factoryAddress: string): Promise<string> {\n        const provider = new ethers.providers.JsonRpcProvider(rpcUrl)\n        const factory = new ethers.Contract(factoryAddress, FACTORY_ABI, provider)\n        return await factory.getAddress(identifier)\n    }\n\n    async getTxId(userOpHash: string, timeout = 30000, interval = 5000): Promise<string | undefined> {\n        await this.init()\n        const endtime = Date.now() + timeout\n        while (Date.now() < endtime) {\n            const events = await this.entrypoint!.queryFilter(this.entrypoint!.filters.UserOperationEvent(userOpHash))\n            if (events.length > 0) {\n                return events[0].transactionHash\n            }\n            await new Promise((resolve) => setTimeout(resolve, interval))\n        }\n        return undefined\n    }\n\n    async getReceipt(txHash: string): Promise<TransactionReceipt | undefined> {\n        await this.init()\n        const provider = await this.chain.getProvider()\n        const txReceipt = await provider.getTransactionReceipt(txHash)\n        if (txReceipt && txReceipt.blockNumber) {\n            return txReceipt\n        }\n        return undefined\n    }\n\n    async getModuleIsInit(walletAddress: string, moduleAddress: string) {\n        await this.init()\n        const provider = await this.chain.getProvider()\n        const contract = new Contract(walletAddress, WALLET_ABI, provider)\n        try {\n            const data = await contract.getModuleStateVal(moduleAddress)\n            return data !== \"0x\"\n        } catch (e) {\n            return false\n        }\n    }\n\n    async addressIsContract(address: string) {\n        await this.init()\n        const provider = await this.chain.getProvider()\n        const addressCode = await provider.getCode(address)\n        return !(addressCode.length === 2)\n    }\n\n    async getEthTokenPairing(token: string) {\n        const offChainOracleAddress = await this.chain.getAddress(\"1inchOracleAddress\")\n        const provider = await this.chain.getProvider()\n        const oracle = new Contract(offChainOracleAddress, OFF_CHAIN_ORACLE_ABI, provider)\n        return await oracle.getRateToEth(token, true)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dd4f304c6f12d5e2ec6896e98ed72d637b1345ff","contentHash":"9b1a2c873fa89bbd99d05cb12d69ecf3c522972ba3edf5dbd4a833770abbc01d"},"/Users/albertsu/Desktop/sdk/src/sponsors/index.ts":{"path":"/Users/albertsu/Desktop/sdk/src/sponsors/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":2,"8":0,"9":0,"10":0,"11":1,"12":2,"13":2,"14":2,"15":1,"16":1,"17":1},"f":{"0":2,"1":0,"2":0,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[2,0],"3":[2,0],"4":[2,2],"5":[0,2],"6":[2,0],"7":[0,0],"8":[1,1,1],"9":[2,0],"10":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/sponsors/index.ts","sources":["/Users/albertsu/Desktop/sdk/src/sponsors/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,mDAAgC;AAChC,iDAA8B","sourcesContent":["export * from \"./GaslessSponsor\"\nexport * from \"./TokenSponsor\"\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e0bdff2678f93b155f971ee6d86ef03ead7b39e","contentHash":"76f6a21034290b4ef10dc141b727c903b71c1e4924ef4abfb4728d413a523fd5"},"/Users/albertsu/Desktop/sdk/src/sponsors/GaslessSponsor.ts":{"path":"/Users/albertsu/Desktop/sdk/src/sponsors/GaslessSponsor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":80}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":88}},"7":{"start":{"line":15,"column":8},"end":{"line":19,"column":10}},"8":{"start":{"line":16,"column":30},"end":{"line":16,"column":89}},"9":{"start":{"line":17,"column":25},"end":{"line":17,"column":102}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":68}},"11":{"start":{"line":22,"column":8},"end":{"line":26,"column":10}},"12":{"start":{"line":23,"column":30},"end":{"line":23,"column":89}},"13":{"start":{"line":24,"column":25},"end":{"line":24,"column":107}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":52}},"15":{"start":{"line":29,"column":25},"end":{"line":29,"column":56}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":50}},"17":{"start":{"line":33,"column":8},"end":{"line":36,"column":10}},"18":{"start":{"line":34,"column":25},"end":{"line":34,"column":77}},"19":{"start":{"line":35,"column":12},"end":{"line":35,"column":52}},"20":{"start":{"line":39,"column":8},"end":{"line":42,"column":10}},"21":{"start":{"line":40,"column":25},"end":{"line":40,"column":87}},"22":{"start":{"line":41,"column":12},"end":{"line":41,"column":52}},"23":{"start":{"line":45,"column":0},"end":{"line":45,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":54},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":68},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":33},"end":{"line":20,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":15},"end":{"line":15,"column":16}},"loc":{"start":{"line":15,"column":63},"end":{"line":19,"column":9}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":35},"end":{"line":27,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":15},"end":{"line":22,"column":16}},"loc":{"start":{"line":22,"column":63},"end":{"line":26,"column":9}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":68},"end":{"line":31,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":11},"end":{"line":37,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":16}},"loc":{"start":{"line":33,"column":63},"end":{"line":36,"column":9}},"line":33},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":16},"end":{"line":43,"column":5}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":15},"end":{"line":39,"column":16}},"loc":{"start":{"line":39,"column":63},"end":{"line":42,"column":9}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":52}},"type":"default-arg","locations":[{"start":{"line":8,"column":26},"end":{"line":8,"column":52}}],"line":8},"1":{"loc":{"start":{"line":11,"column":30},"end":{"line":11,"column":66}},"type":"default-arg","locations":[{"start":{"line":11,"column":40},"end":{"line":11,"column":66}}],"line":11},"2":{"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":58}},"type":"default-arg","locations":[{"start":{"line":15,"column":32},"end":{"line":15,"column":58}}],"line":15},"3":{"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":58}},"type":"default-arg","locations":[{"start":{"line":22,"column":32},"end":{"line":22,"column":58}}],"line":22},"4":{"loc":{"start":{"line":28,"column":30},"end":{"line":28,"column":66}},"type":"default-arg","locations":[{"start":{"line":28,"column":40},"end":{"line":28,"column":66}}],"line":28},"5":{"loc":{"start":{"line":33,"column":22},"end":{"line":33,"column":58}},"type":"default-arg","locations":[{"start":{"line":33,"column":32},"end":{"line":33,"column":58}}],"line":33},"6":{"loc":{"start":{"line":39,"column":22},"end":{"line":39,"column":58}},"type":"default-arg","locations":[{"start":{"line":39,"column":32},"end":{"line":39,"column":58}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/sponsors/GaslessSponsor.ts","sources":["/Users/albertsu/Desktop/sdk/src/sponsors/GaslessSponsor.ts"],"names":[],"mappings":";;;AACA,uCAAmC;AACnC,sCAAiD;AAEjD,kCAA+B;AAE/B,MAAa,cAAe,SAAQ,iBAAO;IACvC,YAAY,UAAsB,UAAkB,CAAC,eAAe;QAChE,KAAK,CAAC,OAAO,EAAE,8BAAqB,EAAE,uBAAuB,CAAC,CAAA;IAClE,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,UAAsB,UAAkB,CAAC,eAAe;QAC9E,OAAO,CAAC,MAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IACnF,CAAC;IAED,KAAK,CAAC,aAAqB,EAAE,MAAc;QACvC,OAAO,KAAK,EAAE,UAAsB,UAAkB,CAAC,eAAe,EAAE,EAAE;YACtE,MAAM,SAAS,GAAG,MAAM,YAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;YACtE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAA;YAC1F,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;QAC3D,CAAC,CAAA;IACL,CAAC;IAED,OAAO,CAAC,aAAqB,EAAE,MAAc;QACzC,OAAO,KAAK,EAAE,UAAsB,UAAkB,CAAC,eAAe,EAAE,EAAE;YACtE,MAAM,SAAS,GAAG,MAAM,YAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;YACtE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAA;YAC/F,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;QAC3C,CAAC,CAAA;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAe,EAAE,UAAsB,UAAkB,CAAC,eAAe;QACtF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QAChD,OAAO,MAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;IAC7C,CAAC;IAED,IAAI;QACA,OAAO,KAAK,EAAE,UAAsB,UAAkB,CAAC,eAAe,EAAE,EAAE;YACtE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;YACjE,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;QAC3C,CAAC,CAAA;IACL,CAAC;IAED,MAAM,CAAC,GAAc;QACjB,OAAO,KAAK,EAAE,UAAsB,UAAkB,CAAC,eAAe,EAAE,EAAE;YACtE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;YAC3E,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;QAC3C,CAAC,CAAA;IACL,CAAC;CACJ;AA3CD,wCA2CC","sourcesContent":["import { BigNumber } from \"ethers\"\nimport { Sponsor } from \"./Sponsor\"\nimport { GASLESS_PAYMASTER_ABI } from \"../common\"\nimport { EnvOption } from \"../config\"\nimport { Token } from \"../data\"\n\nexport class GaslessSponsor extends Sponsor {\n    constructor(options: EnvOption = (globalThis as any).globalEnvOption) {\n        super(options, GASLESS_PAYMASTER_ABI, \"gaslessSponsorAddress\")\n    }\n\n    async getPaymasterAndData(options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        return (await this.getPaymasterAddress(options)) + this.sponsorAddress.slice(2)\n    }\n\n    stake(walletAddress: string, amount: number): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const amountdec = await Token.getDecimalAmount(\"eth\", amount, options)\n            const data = this.interface.encodeFunctionData(\"addDepositTo\", [walletAddress, amountdec])\n            return await this.encodeValue(data, amountdec, options)\n        }\n    }\n\n    unstake(walletAddress: string, amount: number): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const amountdec = await Token.getDecimalAmount(\"eth\", amount, options)\n            const data = this.interface.encodeFunctionData(\"withdrawDepositTo\", [walletAddress, amountdec])\n            return await this.encode(data, options)\n        }\n    }\n\n    async getBalance(sponsor: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<BigNumber> {\n        const contract = await this.getContract(options)\n        return await contract.getBalance(sponsor)\n    }\n\n    lock(): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"lockDeposit\", [])\n            return await this.encode(data, options)\n        }\n    }\n\n    unlock(num: BigNumber): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"unlockDepositAfter\", [num])\n            return await this.encode(data, options)\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"364842af07466090f73ed583dac5251706829517","contentHash":"795f91da344b9a05fc7c5d25ff5d0ab84040380e2fe45fa7597c38845260c48e"},"/Users/albertsu/Desktop/sdk/src/sponsors/Sponsor.ts":{"path":"/Users/albertsu/Desktop/sdk/src/sponsors/Sponsor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":33}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":64}},"6":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":33}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":56}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"11":{"start":{"line":20,"column":22},"end":{"line":20,"column":71}},"12":{"start":{"line":21,"column":24},"end":{"line":21,"column":48}},"13":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":70}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":35}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":37}},"17":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"18":{"start":{"line":30,"column":26},"end":{"line":30,"column":75}},"19":{"start":{"line":31,"column":29},"end":{"line":31,"column":54}},"20":{"start":{"line":32,"column":37},"end":{"line":32,"column":76}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":88}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":29}},"23":{"start":{"line":38,"column":19},"end":{"line":38,"column":58}},"24":{"start":{"line":39,"column":8},"end":{"line":39,"column":50}},"25":{"start":{"line":42,"column":19},"end":{"line":42,"column":58}},"26":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"27":{"start":{"line":46,"column":8},"end":{"line":49,"column":10}},"28":{"start":{"line":47,"column":25},"end":{"line":47,"column":81}},"29":{"start":{"line":48,"column":12},"end":{"line":48,"column":52}},"30":{"start":{"line":52,"column":8},"end":{"line":55,"column":10}},"31":{"start":{"line":53,"column":25},"end":{"line":53,"column":82}},"32":{"start":{"line":54,"column":12},"end":{"line":54,"column":52}},"33":{"start":{"line":58,"column":8},"end":{"line":61,"column":10}},"34":{"start":{"line":59,"column":25},"end":{"line":59,"column":102}},"35":{"start":{"line":60,"column":12},"end":{"line":60,"column":52}},"36":{"start":{"line":64,"column":8},"end":{"line":67,"column":10}},"37":{"start":{"line":65,"column":25},"end":{"line":65,"column":103}},"38":{"start":{"line":66,"column":12},"end":{"line":66,"column":52}},"39":{"start":{"line":70,"column":8},"end":{"line":73,"column":10}},"40":{"start":{"line":71,"column":25},"end":{"line":71,"column":102}},"41":{"start":{"line":72,"column":12},"end":{"line":72,"column":52}},"42":{"start":{"line":76,"column":8},"end":{"line":79,"column":10}},"43":{"start":{"line":77,"column":25},"end":{"line":77,"column":103}},"44":{"start":{"line":78,"column":12},"end":{"line":78,"column":52}},"45":{"start":{"line":82,"column":0},"end":{"line":82,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":65},"end":{"line":18,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":68},"end":{"line":27,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":60},"end":{"line":36,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":61},"end":{"line":40,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":73},"end":{"line":44,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":25},"end":{"line":50,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":16}},"loc":{"start":{"line":46,"column":63},"end":{"line":49,"column":9}},"line":46},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":25},"end":{"line":56,"column":5}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":52,"column":15},"end":{"line":52,"column":16}},"loc":{"start":{"line":52,"column":63},"end":{"line":55,"column":9}},"line":52},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":35},"end":{"line":62,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":58,"column":15},"end":{"line":58,"column":16}},"loc":{"start":{"line":58,"column":63},"end":{"line":61,"column":9}},"line":58},"11":{"name":"(anonymous_11)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":40},"end":{"line":68,"column":5}},"line":63},"12":{"name":"(anonymous_12)","decl":{"start":{"line":64,"column":15},"end":{"line":64,"column":16}},"loc":{"start":{"line":64,"column":63},"end":{"line":67,"column":9}},"line":64},"13":{"name":"(anonymous_13)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":35},"end":{"line":74,"column":5}},"line":69},"14":{"name":"(anonymous_14)","decl":{"start":{"line":70,"column":15},"end":{"line":70,"column":16}},"loc":{"start":{"line":70,"column":63},"end":{"line":73,"column":9}},"line":70},"15":{"name":"(anonymous_15)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":40},"end":{"line":80,"column":5}},"line":75},"16":{"name":"(anonymous_16)","decl":{"start":{"line":76,"column":15},"end":{"line":76,"column":16}},"loc":{"start":{"line":76,"column":63},"end":{"line":79,"column":9}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":52}},"type":"default-arg","locations":[{"start":{"line":8,"column":26},"end":{"line":8,"column":52}}],"line":8},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},{"start":{"line":10,"column":8},"end":{"line":15,"column":9}}],"line":10},"2":{"loc":{"start":{"line":19,"column":30},"end":{"line":19,"column":66}},"type":"default-arg","locations":[{"start":{"line":19,"column":40},"end":{"line":19,"column":66}}],"line":19},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},{"start":{"line":22,"column":8},"end":{"line":25,"column":9}}],"line":22},"4":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":62}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":34}},{"start":{"line":22,"column":38},"end":{"line":22,"column":62}}],"line":22},"5":{"loc":{"start":{"line":28,"column":22},"end":{"line":28,"column":58}},"type":"default-arg","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":58}}],"line":28},"6":{"loc":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},{"start":{"line":29,"column":8},"end":{"line":34,"column":9}}],"line":29},"7":{"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":59}},"type":"default-arg","locations":[{"start":{"line":37,"column":33},"end":{"line":37,"column":59}}],"line":37},"8":{"loc":{"start":{"line":41,"column":35},"end":{"line":41,"column":71}},"type":"default-arg","locations":[{"start":{"line":41,"column":45},"end":{"line":41,"column":71}}],"line":41},"9":{"loc":{"start":{"line":46,"column":22},"end":{"line":46,"column":58}},"type":"default-arg","locations":[{"start":{"line":46,"column":32},"end":{"line":46,"column":58}}],"line":46},"10":{"loc":{"start":{"line":52,"column":22},"end":{"line":52,"column":58}},"type":"default-arg","locations":[{"start":{"line":52,"column":32},"end":{"line":52,"column":58}}],"line":52},"11":{"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":58}},"type":"default-arg","locations":[{"start":{"line":58,"column":32},"end":{"line":58,"column":58}}],"line":58},"12":{"loc":{"start":{"line":64,"column":22},"end":{"line":64,"column":58}},"type":"default-arg","locations":[{"start":{"line":64,"column":32},"end":{"line":64,"column":58}}],"line":64},"13":{"loc":{"start":{"line":70,"column":22},"end":{"line":70,"column":58}},"type":"default-arg","locations":[{"start":{"line":70,"column":32},"end":{"line":70,"column":58}}],"line":70},"14":{"loc":{"start":{"line":76,"column":22},"end":{"line":76,"column":58}},"type":"default-arg","locations":[{"start":{"line":76,"column":32},"end":{"line":76,"column":58}}],"line":76}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0],"7":[0],"8":[0],"9":[0],"10":[0],"11":[0],"12":[0],"13":[0],"14":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/sponsors/Sponsor.ts","sources":["/Users/albertsu/Desktop/sdk/src/sponsors/Sponsor.ts"],"names":[],"mappings":"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","sourcesContent":["import { BigNumber, Contract, ContractInterface } from \"ethers\"\nimport { Interface } from \"ethers/lib/utils\"\nimport { EnvOption } from \"../config\"\nimport { getChainFromData } from \"../data\"\n\nexport abstract class Sponsor {\n    sponsorAddress: string\n    interface: Interface\n    abi: ContractInterface\n    name: string\n    paymasterAddress?: string\n    chainId?: string\n    contract?: Contract\n\n    constructor(options: EnvOption = (globalThis as any).globalEnvOption, abi: ContractInterface, name: string) {\n        this.sponsorAddress = options.gasSponsor!.sponsorAddress!\n        if (abi instanceof Interface) {\n            this.interface = abi\n        } else {\n            this.interface = new Interface(abi)\n        }\n        this.abi = abi\n        this.name = name\n    }\n\n    async getPaymasterAddress(options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const chain = await getChainFromData(options.chain)\n        const chainId = await chain.getChainId()\n        if (!this.paymasterAddress && chainId !== this.chainId) {\n            this.paymasterAddress = await chain.getAddress(this.name)\n            this.chainId = chainId\n        }\n        return this.paymasterAddress!\n    }\n\n    async getContract(options: EnvOption = (globalThis as any).globalEnvOption): Promise<Contract> {\n        if (!this.contract) {\n            const chain = await getChainFromData(options.chain)\n            const provider = await chain.getProvider()\n            const paymasterAddress = await this.getPaymasterAddress(options)\n            this.contract = new Contract(paymasterAddress, this.abi, provider)\n        }\n        return this.contract\n    }\n\n    async encode(data: string, options: EnvOption = (globalThis as any).globalEnvOption): Promise<any> {\n        const to = await this.getPaymasterAddress(options)\n        return { to, data, chain: options.chain }\n    }\n\n    async encodeValue(data: string, value: BigNumber, options: EnvOption = (globalThis as any).globalEnvOption): Promise<any> {\n        const to = await this.getPaymasterAddress(options)\n        return { to, value, data, chain: options.chain }\n    }\n\n    abstract getPaymasterAndData(options: EnvOption): Promise<string>\n\n    abstract stake(walletAddress: string, amount: number): Function\n\n    abstract unstake(walletAddress: string, amount: number): Function\n\n    setToBlacklistMode(): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"setListMode\", [true])\n            return await this.encode(data, options)\n        }\n    }\n\n    setToWhitelistMode(): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"setListMode\", [false])\n            return await this.encode(data, options)\n        }\n    }\n\n    addSpenderToWhiteList(spender: string): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"setSpenderWhitelistMode\", [spender, true])\n            return await this.encode(data, options)\n        }\n    }\n\n    removeSpenderFromWhiteList(spender: string): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"setSpenderWhitelistMode\", [spender, false])\n            return await this.encode(data, options)\n        }\n    }\n\n    addSpenderToBlackList(spender: string): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"setSpenderBlacklistMode\", [spender, true])\n            return await this.encode(data, options)\n        }\n    }\n\n    removeSpenderFromBlackList(spender: string): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"setSpenderBlacklistMode\", [spender, false])\n            return await this.encode(data, options)\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be017d62f08cd54f9b213b8c03dc0325384fc6f4","contentHash":"d295c8e3874b1c8d9dc60e36d859dba1d9af83dd72b919a5464e0b7be4f54ea6"},"/Users/albertsu/Desktop/sdk/src/sponsors/TokenSponsor.ts":{"path":"/Users/albertsu/Desktop/sdk/src/sponsors/TokenSponsor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":50}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":33}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":79}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":60}},"9":{"start":{"line":15,"column":29},"end":{"line":15,"column":79}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":112}},"11":{"start":{"line":19,"column":22},"end":{"line":19,"column":71}},"12":{"start":{"line":20,"column":25},"end":{"line":20,"column":50}},"13":{"start":{"line":21,"column":31},"end":{"line":21,"column":98}},"14":{"start":{"line":22,"column":22},"end":{"line":22,"column":54}},"15":{"start":{"line":23,"column":33},"end":{"line":23,"column":72}},"16":{"start":{"line":24,"column":29},"end":{"line":24,"column":79}},"17":{"start":{"line":25,"column":21},"end":{"line":25,"column":102}},"18":{"start":{"line":26,"column":20},"end":{"line":26,"column":45}},"19":{"start":{"line":27,"column":24},"end":{"line":27,"column":163}},"20":{"start":{"line":28,"column":8},"end":{"line":28,"column":131}},"21":{"start":{"line":31,"column":8},"end":{"line":35,"column":10}},"22":{"start":{"line":32,"column":30},"end":{"line":32,"column":89}},"23":{"start":{"line":33,"column":25},"end":{"line":33,"column":105}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":68}},"25":{"start":{"line":38,"column":8},"end":{"line":42,"column":10}},"26":{"start":{"line":39,"column":30},"end":{"line":39,"column":89}},"27":{"start":{"line":40,"column":25},"end":{"line":40,"column":110}},"28":{"start":{"line":41,"column":12},"end":{"line":41,"column":52}},"29":{"start":{"line":45,"column":25},"end":{"line":45,"column":56}},"30":{"start":{"line":46,"column":29},"end":{"line":46,"column":74}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":53}},"32":{"start":{"line":50,"column":25},"end":{"line":50,"column":56}},"33":{"start":{"line":51,"column":26},"end":{"line":51,"column":49}},"34":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"35":{"start":{"line":54,"column":12},"end":{"line":54,"column":58}},"36":{"start":{"line":57,"column":12},"end":{"line":57,"column":63}},"37":{"start":{"line":59,"column":8},"end":{"line":59,"column":69}},"38":{"start":{"line":62,"column":25},"end":{"line":62,"column":56}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":51}},"40":{"start":{"line":66,"column":8},"end":{"line":72,"column":10}},"41":{"start":{"line":67,"column":29},"end":{"line":67,"column":75}},"42":{"start":{"line":68,"column":33},"end":{"line":68,"column":78}},"43":{"start":{"line":69,"column":25},"end":{"line":69,"column":69}},"44":{"start":{"line":70,"column":29},"end":{"line":70,"column":86}},"45":{"start":{"line":71,"column":12},"end":{"line":71,"column":56}},"46":{"start":{"line":75,"column":8},"end":{"line":81,"column":10}},"47":{"start":{"line":76,"column":29},"end":{"line":76,"column":52}},"48":{"start":{"line":77,"column":33},"end":{"line":77,"column":67}},"49":{"start":{"line":78,"column":30},"end":{"line":78,"column":78}},"50":{"start":{"line":79,"column":25},"end":{"line":79,"column":121}},"51":{"start":{"line":80,"column":12},"end":{"line":80,"column":52}},"52":{"start":{"line":84,"column":8},"end":{"line":90,"column":10}},"53":{"start":{"line":85,"column":29},"end":{"line":85,"column":52}},"54":{"start":{"line":86,"column":33},"end":{"line":86,"column":67}},"55":{"start":{"line":87,"column":30},"end":{"line":87,"column":78}},"56":{"start":{"line":88,"column":25},"end":{"line":88,"column":126}},"57":{"start":{"line":89,"column":12},"end":{"line":89,"column":52}},"58":{"start":{"line":93,"column":8},"end":{"line":99,"column":10}},"59":{"start":{"line":94,"column":31},"end":{"line":96,"column":15}},"60":{"start":{"line":95,"column":16},"end":{"line":95,"column":63}},"61":{"start":{"line":97,"column":25},"end":{"line":97,"column":85}},"62":{"start":{"line":98,"column":12},"end":{"line":98,"column":52}},"63":{"start":{"line":102,"column":8},"end":{"line":108,"column":10}},"64":{"start":{"line":103,"column":31},"end":{"line":105,"column":15}},"65":{"start":{"line":104,"column":16},"end":{"line":104,"column":63}},"66":{"start":{"line":106,"column":25},"end":{"line":106,"column":88}},"67":{"start":{"line":107,"column":12},"end":{"line":107,"column":52}},"68":{"start":{"line":111,"column":8},"end":{"line":114,"column":10}},"69":{"start":{"line":112,"column":25},"end":{"line":112,"column":87}},"70":{"start":{"line":113,"column":12},"end":{"line":113,"column":52}},"71":{"start":{"line":117,"column":8},"end":{"line":120,"column":10}},"72":{"start":{"line":118,"column":25},"end":{"line":118,"column":108}},"73":{"start":{"line":119,"column":12},"end":{"line":119,"column":52}},"74":{"start":{"line":123,"column":8},"end":{"line":126,"column":10}},"75":{"start":{"line":124,"column":38},"end":{"line":124,"column":77}},"76":{"start":{"line":125,"column":12},"end":{"line":125,"column":80}},"77":{"start":{"line":129,"column":0},"end":{"line":129,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":54},"end":{"line":13,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":68},"end":{"line":17,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":100},"end":{"line":29,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":33},"end":{"line":36,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":15},"end":{"line":31,"column":16}},"loc":{"start":{"line":31,"column":63},"end":{"line":35,"column":9}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":35},"end":{"line":43,"column":5}},"line":37},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":16}},"loc":{"start":{"line":38,"column":63},"end":{"line":42,"column":9}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":68},"end":{"line":48,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":80},"end":{"line":60,"column":5}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":69},"end":{"line":64,"column":5}},"line":61},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":46},"end":{"line":73,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":15},"end":{"line":66,"column":16}},"loc":{"start":{"line":66,"column":63},"end":{"line":72,"column":9}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":45},"end":{"line":82,"column":5}},"line":74},"13":{"name":"(anonymous_13)","decl":{"start":{"line":75,"column":15},"end":{"line":75,"column":16}},"loc":{"start":{"line":75,"column":63},"end":{"line":81,"column":9}},"line":75},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":47},"end":{"line":91,"column":5}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":84,"column":15},"end":{"line":84,"column":16}},"loc":{"start":{"line":84,"column":63},"end":{"line":90,"column":9}},"line":84},"16":{"name":"(anonymous_16)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":31},"end":{"line":100,"column":5}},"line":92},"17":{"name":"(anonymous_17)","decl":{"start":{"line":93,"column":15},"end":{"line":93,"column":16}},"loc":{"start":{"line":93,"column":63},"end":{"line":99,"column":9}},"line":93},"18":{"name":"(anonymous_18)","decl":{"start":{"line":94,"column":60},"end":{"line":94,"column":61}},"loc":{"start":{"line":94,"column":71},"end":{"line":96,"column":13}},"line":94},"19":{"name":"(anonymous_19)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":34},"end":{"line":109,"column":5}},"line":101},"20":{"name":"(anonymous_20)","decl":{"start":{"line":102,"column":15},"end":{"line":102,"column":16}},"loc":{"start":{"line":102,"column":63},"end":{"line":108,"column":9}},"line":102},"21":{"name":"(anonymous_21)","decl":{"start":{"line":103,"column":60},"end":{"line":103,"column":61}},"loc":{"start":{"line":103,"column":71},"end":{"line":105,"column":13}},"line":103},"22":{"name":"(anonymous_22)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":28},"end":{"line":115,"column":5}},"line":110},"23":{"name":"(anonymous_23)","decl":{"start":{"line":111,"column":15},"end":{"line":111,"column":16}},"loc":{"start":{"line":111,"column":63},"end":{"line":114,"column":9}},"line":111},"24":{"name":"(anonymous_24)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":49},"end":{"line":121,"column":5}},"line":116},"25":{"name":"(anonymous_25)","decl":{"start":{"line":117,"column":15},"end":{"line":117,"column":16}},"loc":{"start":{"line":117,"column":63},"end":{"line":120,"column":9}},"line":117},"26":{"name":"(anonymous_26)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":27},"end":{"line":127,"column":5}},"line":122},"27":{"name":"(anonymous_27)","decl":{"start":{"line":123,"column":15},"end":{"line":123,"column":16}},"loc":{"start":{"line":123,"column":63},"end":{"line":126,"column":9}},"line":123}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":16},"end":{"line":10,"column":52}},"type":"default-arg","locations":[{"start":{"line":10,"column":26},"end":{"line":10,"column":52}}],"line":10},"1":{"loc":{"start":{"line":14,"column":30},"end":{"line":14,"column":66}},"type":"default-arg","locations":[{"start":{"line":14,"column":40},"end":{"line":14,"column":66}}],"line":14},"2":{"loc":{"start":{"line":18,"column":62},"end":{"line":18,"column":98}},"type":"default-arg","locations":[{"start":{"line":18,"column":72},"end":{"line":18,"column":98}}],"line":18},"3":{"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":58}},"type":"default-arg","locations":[{"start":{"line":31,"column":32},"end":{"line":31,"column":58}}],"line":31},"4":{"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":58}},"type":"default-arg","locations":[{"start":{"line":38,"column":32},"end":{"line":38,"column":58}}],"line":38},"5":{"loc":{"start":{"line":44,"column":30},"end":{"line":44,"column":66}},"type":"default-arg","locations":[{"start":{"line":44,"column":40},"end":{"line":44,"column":66}}],"line":44},"6":{"loc":{"start":{"line":49,"column":42},"end":{"line":49,"column":78}},"type":"default-arg","locations":[{"start":{"line":49,"column":52},"end":{"line":49,"column":78}}],"line":49},"7":{"loc":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},{"start":{"line":53,"column":8},"end":{"line":58,"column":9}}],"line":53},"8":{"loc":{"start":{"line":61,"column":31},"end":{"line":61,"column":67}},"type":"default-arg","locations":[{"start":{"line":61,"column":41},"end":{"line":61,"column":67}}],"line":61},"9":{"loc":{"start":{"line":66,"column":22},"end":{"line":66,"column":58}},"type":"default-arg","locations":[{"start":{"line":66,"column":32},"end":{"line":66,"column":58}}],"line":66},"10":{"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":58}},"type":"default-arg","locations":[{"start":{"line":75,"column":32},"end":{"line":75,"column":58}}],"line":75},"11":{"loc":{"start":{"line":84,"column":22},"end":{"line":84,"column":58}},"type":"default-arg","locations":[{"start":{"line":84,"column":32},"end":{"line":84,"column":58}}],"line":84},"12":{"loc":{"start":{"line":93,"column":22},"end":{"line":93,"column":58}},"type":"default-arg","locations":[{"start":{"line":93,"column":32},"end":{"line":93,"column":58}}],"line":93},"13":{"loc":{"start":{"line":102,"column":22},"end":{"line":102,"column":58}},"type":"default-arg","locations":[{"start":{"line":102,"column":32},"end":{"line":102,"column":58}}],"line":102},"14":{"loc":{"start":{"line":111,"column":22},"end":{"line":111,"column":58}},"type":"default-arg","locations":[{"start":{"line":111,"column":32},"end":{"line":111,"column":58}}],"line":111},"15":{"loc":{"start":{"line":117,"column":22},"end":{"line":117,"column":58}},"type":"default-arg","locations":[{"start":{"line":117,"column":32},"end":{"line":117,"column":58}}],"line":117},"16":{"loc":{"start":{"line":123,"column":22},"end":{"line":123,"column":58}},"type":"default-arg","locations":[{"start":{"line":123,"column":32},"end":{"line":123,"column":58}}],"line":123}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[0],"7":[0,0],"8":[0],"9":[0],"10":[0],"11":[0],"12":[0],"13":[0],"14":[0],"15":[0],"16":[0]},"inputSourceMap":{"version":3,"file":"/Users/albertsu/Desktop/sdk/src/sponsors/TokenSponsor.ts","sources":["/Users/albertsu/Desktop/sdk/src/sponsors/TokenSponsor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Contract, constants } from \"ethers\"\nimport { defaultAbiCoder } from \"ethers/lib/utils\"\nimport { Sponsor } from \"./Sponsor\"\nimport { Auth } from \"../auth\"\nimport { TOKEN_PAYMASTER_ABI, WALLET_ABI } from \"../common/constants\"\nimport { EnvOption } from \"../config\"\nimport { Token, getChainFromData } from \"../data\"\n\nexport class TokenSponsor extends Sponsor {\n    token: string\n\n    constructor(options: EnvOption = (globalThis as any).globalEnvOption) {\n        super(options, TOKEN_PAYMASTER_ABI, \"tokenSponsorAddress\")\n        this.token = options.gasSponsor!.token!.toLowerCase()\n    }\n\n    async getPaymasterAndData(options: EnvOption = (globalThis as any).globalEnvOption): Promise<string> {\n        const tokenAddress = await Token.getAddress(this.token, options)\n        return (await this.getPaymasterAddress(options)) + this.sponsorAddress.slice(2) + tokenAddress.slice(2)\n    }\n\n    async getPaymasterAndDataPermit(\n        amount: number,\n        walletAddr: string,\n        auth: Auth,\n        options: EnvOption = (globalThis as any).globalEnvOption\n    ): Promise<string> {\n        const chain = await getChainFromData(options.chain)\n        const provider = await chain.getProvider()\n        const walletContract = new Contract(walletAddr, WALLET_ABI, provider)\n        const nonce = await walletContract.getNonce(0)\n        const paymasterAddress = await this.getPaymasterAddress(options)\n        const tokenAddress = await Token.getAddress(this.token, options)\n        const hash = await walletContract.getPermitHash(tokenAddress, paymasterAddress, amount, nonce)\n        const sig = await auth.signHash(hash)\n        const encoded = defaultAbiCoder.encode(\n            [\"address\", \"address\", \"uint256\", \"uint256\", \"bytes\"],\n            [tokenAddress, paymasterAddress, amount, nonce, sig]\n        )\n        return (await this.getPaymasterAddress(options)) + this.sponsorAddress.slice(2) + tokenAddress.slice(2) + encoded.slice(2)\n    }\n\n    stake(walletAddress: string, amount: number): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const amountdec = await Token.getDecimalAmount(\"eth\", amount, options)\n            const data = this.interface.encodeFunctionData(\"addEthDepositTo\", [walletAddress, amountdec])\n            return await this.encodeValue(data, amountdec, options)\n        }\n    }\n\n    unstake(walletAddress: string, amount: number): Function {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const amountdec = await Token.getDecimalAmount(\"eth\", amount, options)\n            const data = this.interface.encodeFunctionData(\"withdrawEthDepositTo\", [walletAddress, amountdec])\n            return await this.encode(data, options)\n        }\n    }\n\n    async getTokenInfo(token: string, options: EnvOption = (globalThis as any).globalEnvOption) {\n        const contract = await this.getContract(options)\n        const tokenAddress = await Token.getAddress(token, options)\n        return await contract.getToken(tokenAddress)\n    }\n\n    async getTokenBalance(token: string, spender: string, options: EnvOption = (globalThis as any).globalEnvOption) {\n        const contract = await this.getContract(options)\n        const tokenData = new Token(token)\n        let tokenAddress\n        if (tokenData.isNative) {\n            tokenAddress = constants.AddressZero\n        } else {\n            tokenAddress = await tokenData.getAddress(options)\n        }\n        return await contract.getTokenBalance(tokenAddress, spender)\n    }\n\n    async getListMode(spender: string, options: EnvOption = (globalThis as any).globalEnvOption) {\n        const contract = await this.getContract(options)\n        return await contract.getListMode(spender)\n    }\n\n    addUsableToken(oracle: string, token: string, aggregator: string) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const decimals = await Token.getDecimals(token, options)\n            const tokenAddress = await Token.getAddress(token, options)\n            const data = [oracle, tokenAddress, decimals, aggregator]\n            const calldata = this.interface.encodeFunctionData(\"setTokenData\", [data])\n            return await this.encode(calldata, options)\n        }\n    }\n\n    stakeToken(token: string, walletAddress: string, amount: number) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const tokenObj = new Token(token)\n\n            const tokenAddress = await tokenObj.getAddress(options)\n            const amountdec = await tokenObj.getDecimalAmount(amount, options)\n\n            const data = this.interface.encodeFunctionData(\"addTokenDepositTo\", [tokenAddress, walletAddress, amountdec])\n            return await this.encode(data, options)\n        }\n    }\n\n    unstakeToken(token: string, walletAddress: string, amount: number) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const tokenObj = new Token(token)\n\n            const tokenAddress = await tokenObj.getAddress(options)\n            const amountdec = await tokenObj.getDecimalAmount(amount, options)\n\n            const data = this.interface.encodeFunctionData(\"withdrawTokenDepositTo\", [tokenAddress, walletAddress, amountdec])\n            return await this.encode(data, options)\n        }\n    }\n\n    addWhitelistTokens(tokens: string[]) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const sendTokens = await Promise.all(\n                tokens.map((token) => {\n                    return Token.getAddress(token, options)\n                })\n            )\n            const data = this.interface.encodeFunctionData(\"useTokens\", [sendTokens])\n            return await this.encode(data, options)\n        }\n    }\n\n    removeWhitelistTokens(tokens: string[]) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const sendTokens = await Promise.all(\n                tokens.map((token) => {\n                    return Token.getAddress(token, options)\n                })\n            )\n            const data = this.interface.encodeFunctionData(\"removeTokens\", [sendTokens])\n            return await this.encode(data, options)\n        }\n    }\n\n    lockTokenDeposit(token: string) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"lockTokenDeposit\", [token])\n            return await this.encode(data, options)\n        }\n    }\n\n    unlockTokenDepositAfter(token: string, blocksToWait: number) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const data = this.interface.encodeFunctionData(\"unlockTokenDepositAfter\", [token, blocksToWait])\n            return await this.encode(data, options)\n        }\n    }\n\n    approve(token: string, amount: number) {\n        return async (options: EnvOption = (globalThis as any).globalEnvOption) => {\n            const gasSponsorAddress = await this.getPaymasterAddress(options)\n            return await Token.approve(token, gasSponsorAddress, amount)\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"738346dc28539d9e72cbb3d3753c45966adc25f6","contentHash":"e450329060610a9f0aa29373894499f338253379e4abe4eb151855126d2a7aae"}}